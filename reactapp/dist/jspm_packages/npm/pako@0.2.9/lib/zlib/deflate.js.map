{"version":3,"sources":["../../../../../../jspm_packages/npm/pako@0.2.9/lib/zlib/deflate.js"],"names":["Buffer","utils","require","trees","adler32","crc32","msg","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_OK","Z_STREAM_END","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_UNKNOWN","Z_DEFLATED","MAX_MEM_LEVEL","MAX_WBITS","DEF_MEM_LEVEL","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","err","strm","errorCode","rank","f","zero","buf","len","length","flush_pending","s","state","pending","avail_out","arraySet","output","pending_buf","pending_out","next_out","total_out","flush_block_only","last","_tr_flush_block","block_start","strstart","put_byte","b","putShortMSB","read_buf","start","size","avail_in","input","next_in","wrap","adler","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","match","best_len","prev_length","nice_match","limit","w_size","_win","window","wmask","w_mask","prev","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","p","n","m","more","str","window_size","hash_size","head","insert","ins_h","hash_shift","hash_mask","deflate_stored","flush","max_block_size","pending_buf_size","max_start","deflate_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","deflate_slow","max_insert","prev_match","strategy","match_available","deflate_rle","deflate_huff","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","lm_init","level","DeflateState","status","gzhead","gzindex","method","last_flush","w_bits","hash_bits","dyn_ltree","Buf16","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","data_type","_tr_init","deflateReset","ret","deflateSetHeader","deflateInit2","windowBits","memLevel","Buf8","deflateInit","deflate","old_flush","beg","val","text","hcrc","extra","name","comment","time","os","header","level_flags","charCodeAt","bstate","_tr_align","_tr_stored_block","deflateEnd","deflateSetDictionary","dictionary","dictLength","avail","next","tmpDict","exports","deflateInfo"],"mappings":"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","file":"deflate.js","sourcesContent":["/* */ \n(function(Buffer) {\n  'use strict';\n  var utils = require('../utils/common');\n  var trees = require('./trees');\n  var adler32 = require('./adler32');\n  var crc32 = require('./crc32');\n  var msg = require('./messages');\n  var Z_NO_FLUSH = 0;\n  var Z_PARTIAL_FLUSH = 1;\n  var Z_FULL_FLUSH = 3;\n  var Z_FINISH = 4;\n  var Z_BLOCK = 5;\n  var Z_OK = 0;\n  var Z_STREAM_END = 1;\n  var Z_STREAM_ERROR = -2;\n  var Z_DATA_ERROR = -3;\n  var Z_BUF_ERROR = -5;\n  var Z_DEFAULT_COMPRESSION = -1;\n  var Z_FILTERED = 1;\n  var Z_HUFFMAN_ONLY = 2;\n  var Z_RLE = 3;\n  var Z_FIXED = 4;\n  var Z_DEFAULT_STRATEGY = 0;\n  var Z_UNKNOWN = 2;\n  var Z_DEFLATED = 8;\n  var MAX_MEM_LEVEL = 9;\n  var MAX_WBITS = 15;\n  var DEF_MEM_LEVEL = 8;\n  var LENGTH_CODES = 29;\n  var LITERALS = 256;\n  var L_CODES = LITERALS + 1 + LENGTH_CODES;\n  var D_CODES = 30;\n  var BL_CODES = 19;\n  var HEAP_SIZE = 2 * L_CODES + 1;\n  var MAX_BITS = 15;\n  var MIN_MATCH = 3;\n  var MAX_MATCH = 258;\n  var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n  var PRESET_DICT = 0x20;\n  var INIT_STATE = 42;\n  var EXTRA_STATE = 69;\n  var NAME_STATE = 73;\n  var COMMENT_STATE = 91;\n  var HCRC_STATE = 103;\n  var BUSY_STATE = 113;\n  var FINISH_STATE = 666;\n  var BS_NEED_MORE = 1;\n  var BS_BLOCK_DONE = 2;\n  var BS_FINISH_STARTED = 3;\n  var BS_FINISH_DONE = 4;\n  var OS_CODE = 0x03;\n  function err(strm, errorCode) {\n    strm.msg = msg[errorCode];\n    return errorCode;\n  }\n  function rank(f) {\n    return ((f) << 1) - ((f) > 4 ? 9 : 0);\n  }\n  function zero(buf) {\n    var len = buf.length;\n    while (--len >= 0) {\n      buf[len] = 0;\n    }\n  }\n  function flush_pending(strm) {\n    var s = strm.state;\n    var len = s.pending;\n    if (len > strm.avail_out) {\n      len = strm.avail_out;\n    }\n    if (len === 0) {\n      return;\n    }\n    utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n    strm.next_out += len;\n    s.pending_out += len;\n    strm.total_out += len;\n    strm.avail_out -= len;\n    s.pending -= len;\n    if (s.pending === 0) {\n      s.pending_out = 0;\n    }\n  }\n  function flush_block_only(s, last) {\n    trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n    s.block_start = s.strstart;\n    flush_pending(s.strm);\n  }\n  function put_byte(s, b) {\n    s.pending_buf[s.pending++] = b;\n  }\n  function putShortMSB(s, b) {\n    s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n    s.pending_buf[s.pending++] = b & 0xff;\n  }\n  function read_buf(strm, buf, start, size) {\n    var len = strm.avail_in;\n    if (len > size) {\n      len = size;\n    }\n    if (len === 0) {\n      return 0;\n    }\n    strm.avail_in -= len;\n    utils.arraySet(buf, strm.input, strm.next_in, len, start);\n    if (strm.state.wrap === 1) {\n      strm.adler = adler32(strm.adler, buf, len, start);\n    } else if (strm.state.wrap === 2) {\n      strm.adler = crc32(strm.adler, buf, len, start);\n    }\n    strm.next_in += len;\n    strm.total_in += len;\n    return len;\n  }\n  function longest_match(s, cur_match) {\n    var chain_length = s.max_chain_length;\n    var scan = s.strstart;\n    var match;\n    var len;\n    var best_len = s.prev_length;\n    var nice_match = s.nice_match;\n    var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ? s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0;\n    var _win = s.window;\n    var wmask = s.w_mask;\n    var prev = s.prev;\n    var strend = s.strstart + MAX_MATCH;\n    var scan_end1 = _win[scan + best_len - 1];\n    var scan_end = _win[scan + best_len];\n    if (s.prev_length >= s.good_match) {\n      chain_length >>= 2;\n    }\n    if (nice_match > s.lookahead) {\n      nice_match = s.lookahead;\n    }\n    do {\n      match = cur_match;\n      if (_win[match + best_len] !== scan_end || _win[match + best_len - 1] !== scan_end1 || _win[match] !== _win[scan] || _win[++match] !== _win[scan + 1]) {\n        continue;\n      }\n      scan += 2;\n      match++;\n      do {} while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && scan < strend);\n      len = MAX_MATCH - (strend - scan);\n      scan = strend - MAX_MATCH;\n      if (len > best_len) {\n        s.match_start = cur_match;\n        best_len = len;\n        if (len >= nice_match) {\n          break;\n        }\n        scan_end1 = _win[scan + best_len - 1];\n        scan_end = _win[scan + best_len];\n      }\n    } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n    if (best_len <= s.lookahead) {\n      return best_len;\n    }\n    return s.lookahead;\n  }\n  function fill_window(s) {\n    var _w_size = s.w_size;\n    var p,\n        n,\n        m,\n        more,\n        str;\n    do {\n      more = s.window_size - s.lookahead - s.strstart;\n      if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n        utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n        s.match_start -= _w_size;\n        s.strstart -= _w_size;\n        s.block_start -= _w_size;\n        n = s.hash_size;\n        p = n;\n        do {\n          m = s.head[--p];\n          s.head[p] = (m >= _w_size ? m - _w_size : 0);\n        } while (--n);\n        n = _w_size;\n        p = n;\n        do {\n          m = s.prev[--p];\n          s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        } while (--n);\n        more += _w_size;\n      }\n      if (s.strm.avail_in === 0) {\n        break;\n      }\n      n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n      s.lookahead += n;\n      if (s.lookahead + s.insert >= MIN_MATCH) {\n        str = s.strstart - s.insert;\n        s.ins_h = s.window[str];\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n        while (s.insert) {\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n          s.prev[str & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = str;\n          str++;\n          s.insert--;\n          if (s.lookahead + s.insert < MIN_MATCH) {\n            break;\n          }\n        }\n      }\n    } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n  }\n  function deflate_stored(s, flush) {\n    var max_block_size = 0xffff;\n    if (max_block_size > s.pending_buf_size - 5) {\n      max_block_size = s.pending_buf_size - 5;\n    }\n    for (; ; ) {\n      if (s.lookahead <= 1) {\n        fill_window(s);\n        if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        if (s.lookahead === 0) {\n          break;\n        }\n      }\n      s.strstart += s.lookahead;\n      s.lookahead = 0;\n      var max_start = s.block_start + max_block_size;\n      if (s.strstart === 0 || s.strstart >= max_start) {\n        s.lookahead = s.strstart - max_start;\n        s.strstart = max_start;\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n      }\n      if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n      }\n    }\n    s.insert = 0;\n    if (flush === Z_FINISH) {\n      flush_block_only(s, true);\n      if (s.strm.avail_out === 0) {\n        return BS_FINISH_STARTED;\n      }\n      return BS_FINISH_DONE;\n    }\n    if (s.strstart > s.block_start) {\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    }\n    return BS_NEED_MORE;\n  }\n  function deflate_fast(s, flush) {\n    var hash_head;\n    var bflush;\n    for (; ; ) {\n      if (s.lookahead < MIN_LOOKAHEAD) {\n        fill_window(s);\n        if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        if (s.lookahead === 0) {\n          break;\n        }\n      }\n      hash_head = 0;\n      if (s.lookahead >= MIN_MATCH) {\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n        hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = s.strstart;\n      }\n      if (hash_head !== 0 && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n        s.match_length = longest_match(s, hash_head);\n      }\n      if (s.match_length >= MIN_MATCH) {\n        bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n        s.lookahead -= s.match_length;\n        if (s.match_length <= s.max_lazy_match && s.lookahead >= MIN_MATCH) {\n          s.match_length--;\n          do {\n            s.strstart++;\n            s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n            hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n            s.head[s.ins_h] = s.strstart;\n          } while (--s.match_length !== 0);\n          s.strstart++;\n        } else {\n          s.strstart += s.match_length;\n          s.match_length = 0;\n          s.ins_h = s.window[s.strstart];\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n        }\n      } else {\n        bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n        s.lookahead--;\n        s.strstart++;\n      }\n      if (bflush) {\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n      }\n    }\n    s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n    if (flush === Z_FINISH) {\n      flush_block_only(s, true);\n      if (s.strm.avail_out === 0) {\n        return BS_FINISH_STARTED;\n      }\n      return BS_FINISH_DONE;\n    }\n    if (s.last_lit) {\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    }\n    return BS_BLOCK_DONE;\n  }\n  function deflate_slow(s, flush) {\n    var hash_head;\n    var bflush;\n    var max_insert;\n    for (; ; ) {\n      if (s.lookahead < MIN_LOOKAHEAD) {\n        fill_window(s);\n        if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        if (s.lookahead === 0) {\n          break;\n        }\n      }\n      hash_head = 0;\n      if (s.lookahead >= MIN_MATCH) {\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n        hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = s.strstart;\n      }\n      s.prev_length = s.match_length;\n      s.prev_match = s.match_start;\n      s.match_length = MIN_MATCH - 1;\n      if (hash_head !== 0 && s.prev_length < s.max_lazy_match && s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)) {\n        s.match_length = longest_match(s, hash_head);\n        if (s.match_length <= 5 && (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096))) {\n          s.match_length = MIN_MATCH - 1;\n        }\n      }\n      if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n        max_insert = s.strstart + s.lookahead - MIN_MATCH;\n        bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n        s.lookahead -= s.prev_length - 1;\n        s.prev_length -= 2;\n        do {\n          if (++s.strstart <= max_insert) {\n            s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n            hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n            s.head[s.ins_h] = s.strstart;\n          }\n        } while (--s.prev_length !== 0);\n        s.match_available = 0;\n        s.match_length = MIN_MATCH - 1;\n        s.strstart++;\n        if (bflush) {\n          flush_block_only(s, false);\n          if (s.strm.avail_out === 0) {\n            return BS_NEED_MORE;\n          }\n        }\n      } else if (s.match_available) {\n        bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n        if (bflush) {\n          flush_block_only(s, false);\n        }\n        s.strstart++;\n        s.lookahead--;\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n      } else {\n        s.match_available = 1;\n        s.strstart++;\n        s.lookahead--;\n      }\n    }\n    if (s.match_available) {\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n      s.match_available = 0;\n    }\n    s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n    if (flush === Z_FINISH) {\n      flush_block_only(s, true);\n      if (s.strm.avail_out === 0) {\n        return BS_FINISH_STARTED;\n      }\n      return BS_FINISH_DONE;\n    }\n    if (s.last_lit) {\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    }\n    return BS_BLOCK_DONE;\n  }\n  function deflate_rle(s, flush) {\n    var bflush;\n    var prev;\n    var scan,\n        strend;\n    var _win = s.window;\n    for (; ; ) {\n      if (s.lookahead <= MAX_MATCH) {\n        fill_window(s);\n        if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        if (s.lookahead === 0) {\n          break;\n        }\n      }\n      s.match_length = 0;\n      if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n        scan = s.strstart - 1;\n        prev = _win[scan];\n        if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n          strend = s.strstart + MAX_MATCH;\n          do {} while (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && scan < strend);\n          s.match_length = MAX_MATCH - (strend - scan);\n          if (s.match_length > s.lookahead) {\n            s.match_length = s.lookahead;\n          }\n        }\n      }\n      if (s.match_length >= MIN_MATCH) {\n        bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n        s.lookahead -= s.match_length;\n        s.strstart += s.match_length;\n        s.match_length = 0;\n      } else {\n        bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n        s.lookahead--;\n        s.strstart++;\n      }\n      if (bflush) {\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n      }\n    }\n    s.insert = 0;\n    if (flush === Z_FINISH) {\n      flush_block_only(s, true);\n      if (s.strm.avail_out === 0) {\n        return BS_FINISH_STARTED;\n      }\n      return BS_FINISH_DONE;\n    }\n    if (s.last_lit) {\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    }\n    return BS_BLOCK_DONE;\n  }\n  function deflate_huff(s, flush) {\n    var bflush;\n    for (; ; ) {\n      if (s.lookahead === 0) {\n        fill_window(s);\n        if (s.lookahead === 0) {\n          if (flush === Z_NO_FLUSH) {\n            return BS_NEED_MORE;\n          }\n          break;\n        }\n      }\n      s.match_length = 0;\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n      s.lookahead--;\n      s.strstart++;\n      if (bflush) {\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n      }\n    }\n    s.insert = 0;\n    if (flush === Z_FINISH) {\n      flush_block_only(s, true);\n      if (s.strm.avail_out === 0) {\n        return BS_FINISH_STARTED;\n      }\n      return BS_FINISH_DONE;\n    }\n    if (s.last_lit) {\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    }\n    return BS_BLOCK_DONE;\n  }\n  function Config(good_length, max_lazy, nice_length, max_chain, func) {\n    this.good_length = good_length;\n    this.max_lazy = max_lazy;\n    this.nice_length = nice_length;\n    this.max_chain = max_chain;\n    this.func = func;\n  }\n  var configuration_table;\n  configuration_table = [new Config(0, 0, 0, 0, deflate_stored), new Config(4, 4, 8, 4, deflate_fast), new Config(4, 5, 16, 8, deflate_fast), new Config(4, 6, 32, 32, deflate_fast), new Config(4, 4, 16, 16, deflate_slow), new Config(8, 16, 32, 32, deflate_slow), new Config(8, 16, 128, 128, deflate_slow), new Config(8, 32, 128, 256, deflate_slow), new Config(32, 128, 258, 1024, deflate_slow), new Config(32, 258, 258, 4096, deflate_slow)];\n  function lm_init(s) {\n    s.window_size = 2 * s.w_size;\n    zero(s.head);\n    s.max_lazy_match = configuration_table[s.level].max_lazy;\n    s.good_match = configuration_table[s.level].good_length;\n    s.nice_match = configuration_table[s.level].nice_length;\n    s.max_chain_length = configuration_table[s.level].max_chain;\n    s.strstart = 0;\n    s.block_start = 0;\n    s.lookahead = 0;\n    s.insert = 0;\n    s.match_length = s.prev_length = MIN_MATCH - 1;\n    s.match_available = 0;\n    s.ins_h = 0;\n  }\n  function DeflateState() {\n    this.strm = null;\n    this.status = 0;\n    this.pending_buf = null;\n    this.pending_buf_size = 0;\n    this.pending_out = 0;\n    this.pending = 0;\n    this.wrap = 0;\n    this.gzhead = null;\n    this.gzindex = 0;\n    this.method = Z_DEFLATED;\n    this.last_flush = -1;\n    this.w_size = 0;\n    this.w_bits = 0;\n    this.w_mask = 0;\n    this.window = null;\n    this.window_size = 0;\n    this.prev = null;\n    this.head = null;\n    this.ins_h = 0;\n    this.hash_size = 0;\n    this.hash_bits = 0;\n    this.hash_mask = 0;\n    this.hash_shift = 0;\n    this.block_start = 0;\n    this.match_length = 0;\n    this.prev_match = 0;\n    this.match_available = 0;\n    this.strstart = 0;\n    this.match_start = 0;\n    this.lookahead = 0;\n    this.prev_length = 0;\n    this.max_chain_length = 0;\n    this.max_lazy_match = 0;\n    this.level = 0;\n    this.strategy = 0;\n    this.good_match = 0;\n    this.nice_match = 0;\n    this.dyn_ltree = new utils.Buf16(HEAP_SIZE * 2);\n    this.dyn_dtree = new utils.Buf16((2 * D_CODES + 1) * 2);\n    this.bl_tree = new utils.Buf16((2 * BL_CODES + 1) * 2);\n    zero(this.dyn_ltree);\n    zero(this.dyn_dtree);\n    zero(this.bl_tree);\n    this.l_desc = null;\n    this.d_desc = null;\n    this.bl_desc = null;\n    this.bl_count = new utils.Buf16(MAX_BITS + 1);\n    this.heap = new utils.Buf16(2 * L_CODES + 1);\n    zero(this.heap);\n    this.heap_len = 0;\n    this.heap_max = 0;\n    this.depth = new utils.Buf16(2 * L_CODES + 1);\n    zero(this.depth);\n    this.l_buf = 0;\n    this.lit_bufsize = 0;\n    this.last_lit = 0;\n    this.d_buf = 0;\n    this.opt_len = 0;\n    this.static_len = 0;\n    this.matches = 0;\n    this.insert = 0;\n    this.bi_buf = 0;\n    this.bi_valid = 0;\n  }\n  function deflateResetKeep(strm) {\n    var s;\n    if (!strm || !strm.state) {\n      return err(strm, Z_STREAM_ERROR);\n    }\n    strm.total_in = strm.total_out = 0;\n    strm.data_type = Z_UNKNOWN;\n    s = strm.state;\n    s.pending = 0;\n    s.pending_out = 0;\n    if (s.wrap < 0) {\n      s.wrap = -s.wrap;\n    }\n    s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n    strm.adler = (s.wrap === 2) ? 0 : 1;\n    s.last_flush = Z_NO_FLUSH;\n    trees._tr_init(s);\n    return Z_OK;\n  }\n  function deflateReset(strm) {\n    var ret = deflateResetKeep(strm);\n    if (ret === Z_OK) {\n      lm_init(strm.state);\n    }\n    return ret;\n  }\n  function deflateSetHeader(strm, head) {\n    if (!strm || !strm.state) {\n      return Z_STREAM_ERROR;\n    }\n    if (strm.state.wrap !== 2) {\n      return Z_STREAM_ERROR;\n    }\n    strm.state.gzhead = head;\n    return Z_OK;\n  }\n  function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n    if (!strm) {\n      return Z_STREAM_ERROR;\n    }\n    var wrap = 1;\n    if (level === Z_DEFAULT_COMPRESSION) {\n      level = 6;\n    }\n    if (windowBits < 0) {\n      wrap = 0;\n      windowBits = -windowBits;\n    } else if (windowBits > 15) {\n      wrap = 2;\n      windowBits -= 16;\n    }\n    if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED || windowBits < 8 || windowBits > 15 || level < 0 || level > 9 || strategy < 0 || strategy > Z_FIXED) {\n      return err(strm, Z_STREAM_ERROR);\n    }\n    if (windowBits === 8) {\n      windowBits = 9;\n    }\n    var s = new DeflateState();\n    strm.state = s;\n    s.strm = strm;\n    s.wrap = wrap;\n    s.gzhead = null;\n    s.w_bits = windowBits;\n    s.w_size = 1 << s.w_bits;\n    s.w_mask = s.w_size - 1;\n    s.hash_bits = memLevel + 7;\n    s.hash_size = 1 << s.hash_bits;\n    s.hash_mask = s.hash_size - 1;\n    s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n    s.window = new utils.Buf8(s.w_size * 2);\n    s.head = new utils.Buf16(s.hash_size);\n    s.prev = new utils.Buf16(s.w_size);\n    s.lit_bufsize = 1 << (memLevel + 6);\n    s.pending_buf_size = s.lit_bufsize * 4;\n    s.pending_buf = new utils.Buf8(s.pending_buf_size);\n    s.d_buf = 1 * s.lit_bufsize;\n    s.l_buf = (1 + 2) * s.lit_bufsize;\n    s.level = level;\n    s.strategy = strategy;\n    s.method = method;\n    return deflateReset(strm);\n  }\n  function deflateInit(strm, level) {\n    return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n  }\n  function deflate(strm, flush) {\n    var old_flush,\n        s;\n    var beg,\n        val;\n    if (!strm || !strm.state || flush > Z_BLOCK || flush < 0) {\n      return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n    }\n    s = strm.state;\n    if (!strm.output || (!strm.input && strm.avail_in !== 0) || (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n      return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n    }\n    s.strm = strm;\n    old_flush = s.last_flush;\n    s.last_flush = flush;\n    if (s.status === INIT_STATE) {\n      if (s.wrap === 2) {\n        strm.adler = 0;\n        put_byte(s, 31);\n        put_byte(s, 139);\n        put_byte(s, 8);\n        if (!s.gzhead) {\n          put_byte(s, 0);\n          put_byte(s, 0);\n          put_byte(s, 0);\n          put_byte(s, 0);\n          put_byte(s, 0);\n          put_byte(s, s.level === 9 ? 2 : (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0));\n          put_byte(s, OS_CODE);\n          s.status = BUSY_STATE;\n        } else {\n          put_byte(s, (s.gzhead.text ? 1 : 0) + (s.gzhead.hcrc ? 2 : 0) + (!s.gzhead.extra ? 0 : 4) + (!s.gzhead.name ? 0 : 8) + (!s.gzhead.comment ? 0 : 16));\n          put_byte(s, s.gzhead.time & 0xff);\n          put_byte(s, (s.gzhead.time >> 8) & 0xff);\n          put_byte(s, (s.gzhead.time >> 16) & 0xff);\n          put_byte(s, (s.gzhead.time >> 24) & 0xff);\n          put_byte(s, s.level === 9 ? 2 : (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0));\n          put_byte(s, s.gzhead.os & 0xff);\n          if (s.gzhead.extra && s.gzhead.extra.length) {\n            put_byte(s, s.gzhead.extra.length & 0xff);\n            put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n          }\n          if (s.gzhead.hcrc) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n          }\n          s.gzindex = 0;\n          s.status = EXTRA_STATE;\n        }\n      } else {\n        var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n        var level_flags = -1;\n        if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n          level_flags = 0;\n        } else if (s.level < 6) {\n          level_flags = 1;\n        } else if (s.level === 6) {\n          level_flags = 2;\n        } else {\n          level_flags = 3;\n        }\n        header |= (level_flags << 6);\n        if (s.strstart !== 0) {\n          header |= PRESET_DICT;\n        }\n        header += 31 - (header % 31);\n        s.status = BUSY_STATE;\n        putShortMSB(s, header);\n        if (s.strstart !== 0) {\n          putShortMSB(s, strm.adler >>> 16);\n          putShortMSB(s, strm.adler & 0xffff);\n        }\n        strm.adler = 1;\n      }\n    }\n    if (s.status === EXTRA_STATE) {\n      if (s.gzhead.extra) {\n        beg = s.pending;\n        while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n          if (s.pending === s.pending_buf_size) {\n            if (s.gzhead.hcrc && s.pending > beg) {\n              strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n            }\n            flush_pending(strm);\n            beg = s.pending;\n            if (s.pending === s.pending_buf_size) {\n              break;\n            }\n          }\n          put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n          s.gzindex++;\n        }\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        if (s.gzindex === s.gzhead.extra.length) {\n          s.gzindex = 0;\n          s.status = NAME_STATE;\n        }\n      } else {\n        s.status = NAME_STATE;\n      }\n    }\n    if (s.status === NAME_STATE) {\n      if (s.gzhead.name) {\n        beg = s.pending;\n        do {\n          if (s.pending === s.pending_buf_size) {\n            if (s.gzhead.hcrc && s.pending > beg) {\n              strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n            }\n            flush_pending(strm);\n            beg = s.pending;\n            if (s.pending === s.pending_buf_size) {\n              val = 1;\n              break;\n            }\n          }\n          if (s.gzindex < s.gzhead.name.length) {\n            val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n          } else {\n            val = 0;\n          }\n          put_byte(s, val);\n        } while (val !== 0);\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        if (val === 0) {\n          s.gzindex = 0;\n          s.status = COMMENT_STATE;\n        }\n      } else {\n        s.status = COMMENT_STATE;\n      }\n    }\n    if (s.status === COMMENT_STATE) {\n      if (s.gzhead.comment) {\n        beg = s.pending;\n        do {\n          if (s.pending === s.pending_buf_size) {\n            if (s.gzhead.hcrc && s.pending > beg) {\n              strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n            }\n            flush_pending(strm);\n            beg = s.pending;\n            if (s.pending === s.pending_buf_size) {\n              val = 1;\n              break;\n            }\n          }\n          if (s.gzindex < s.gzhead.comment.length) {\n            val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n          } else {\n            val = 0;\n          }\n          put_byte(s, val);\n        } while (val !== 0);\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        if (val === 0) {\n          s.status = HCRC_STATE;\n        }\n      } else {\n        s.status = HCRC_STATE;\n      }\n    }\n    if (s.status === HCRC_STATE) {\n      if (s.gzhead.hcrc) {\n        if (s.pending + 2 > s.pending_buf_size) {\n          flush_pending(strm);\n        }\n        if (s.pending + 2 <= s.pending_buf_size) {\n          put_byte(s, strm.adler & 0xff);\n          put_byte(s, (strm.adler >> 8) & 0xff);\n          strm.adler = 0;\n          s.status = BUSY_STATE;\n        }\n      } else {\n        s.status = BUSY_STATE;\n      }\n    }\n    if (s.pending !== 0) {\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        return Z_OK;\n      }\n    } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) && flush !== Z_FINISH) {\n      return err(strm, Z_BUF_ERROR);\n    }\n    if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n      return err(strm, Z_BUF_ERROR);\n    }\n    if (strm.avail_in !== 0 || s.lookahead !== 0 || (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n      var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) : (s.strategy === Z_RLE ? deflate_rle(s, flush) : configuration_table[s.level].func(s, flush));\n      if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n        s.status = FINISH_STATE;\n      }\n      if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n        if (strm.avail_out === 0) {\n          s.last_flush = -1;\n        }\n        return Z_OK;\n      }\n      if (bstate === BS_BLOCK_DONE) {\n        if (flush === Z_PARTIAL_FLUSH) {\n          trees._tr_align(s);\n        } else if (flush !== Z_BLOCK) {\n          trees._tr_stored_block(s, 0, 0, false);\n          if (flush === Z_FULL_FLUSH) {\n            zero(s.head);\n            if (s.lookahead === 0) {\n              s.strstart = 0;\n              s.block_start = 0;\n              s.insert = 0;\n            }\n          }\n        }\n        flush_pending(strm);\n        if (strm.avail_out === 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n      }\n    }\n    if (flush !== Z_FINISH) {\n      return Z_OK;\n    }\n    if (s.wrap <= 0) {\n      return Z_STREAM_END;\n    }\n    if (s.wrap === 2) {\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      put_byte(s, (strm.adler >> 16) & 0xff);\n      put_byte(s, (strm.adler >> 24) & 0xff);\n      put_byte(s, strm.total_in & 0xff);\n      put_byte(s, (strm.total_in >> 8) & 0xff);\n      put_byte(s, (strm.total_in >> 16) & 0xff);\n      put_byte(s, (strm.total_in >> 24) & 0xff);\n    } else {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    flush_pending(strm);\n    if (s.wrap > 0) {\n      s.wrap = -s.wrap;\n    }\n    return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n  }\n  function deflateEnd(strm) {\n    var status;\n    if (!strm || !strm.state) {\n      return Z_STREAM_ERROR;\n    }\n    status = strm.state.status;\n    if (status !== INIT_STATE && status !== EXTRA_STATE && status !== NAME_STATE && status !== COMMENT_STATE && status !== HCRC_STATE && status !== BUSY_STATE && status !== FINISH_STATE) {\n      return err(strm, Z_STREAM_ERROR);\n    }\n    strm.state = null;\n    return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n  }\n  function deflateSetDictionary(strm, dictionary) {\n    var dictLength = dictionary.length;\n    var s;\n    var str,\n        n;\n    var wrap;\n    var avail;\n    var next;\n    var input;\n    var tmpDict;\n    if (!strm || !strm.state) {\n      return Z_STREAM_ERROR;\n    }\n    s = strm.state;\n    wrap = s.wrap;\n    if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n      return Z_STREAM_ERROR;\n    }\n    if (wrap === 1) {\n      strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n    }\n    s.wrap = 0;\n    if (dictLength >= s.w_size) {\n      if (wrap === 0) {\n        zero(s.head);\n        s.strstart = 0;\n        s.block_start = 0;\n        s.insert = 0;\n      }\n      tmpDict = new utils.Buf8(s.w_size);\n      utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n      dictionary = tmpDict;\n      dictLength = s.w_size;\n    }\n    avail = strm.avail_in;\n    next = strm.next_in;\n    input = strm.input;\n    strm.avail_in = dictLength;\n    strm.next_in = 0;\n    strm.input = dictionary;\n    fill_window(s);\n    while (s.lookahead >= MIN_MATCH) {\n      str = s.strstart;\n      n = s.lookahead - (MIN_MATCH - 1);\n      do {\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n      } while (--n);\n      s.strstart = str;\n      s.lookahead = MIN_MATCH - 1;\n      fill_window(s);\n    }\n    s.strstart += s.lookahead;\n    s.block_start = s.strstart;\n    s.insert = s.lookahead;\n    s.lookahead = 0;\n    s.match_length = s.prev_length = MIN_MATCH - 1;\n    s.match_available = 0;\n    strm.next_in = next;\n    strm.input = input;\n    strm.avail_in = avail;\n    s.wrap = wrap;\n    return Z_OK;\n  }\n  exports.deflateInit = deflateInit;\n  exports.deflateInit2 = deflateInit2;\n  exports.deflateReset = deflateReset;\n  exports.deflateResetKeep = deflateResetKeep;\n  exports.deflateSetHeader = deflateSetHeader;\n  exports.deflate = deflate;\n  exports.deflateEnd = deflateEnd;\n  exports.deflateSetDictionary = deflateSetDictionary;\n  exports.deflateInfo = 'pako deflate (from Nodeca project)';\n})(require('buffer').Buffer);\n"]}