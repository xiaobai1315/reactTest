{"version":3,"sources":["../../../../jspm_packages/npm/prop-types@15.5.10/factoryWithThrowingShims.js"],"names":["emptyFunction","require","invariant","ReactPropTypesSecret","module","exports","shim","props","propName","componentName","location","propFullName","secret","isRequired","getShim","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","checkPropTypes","PropTypes"],"mappings":"AAAA;AACA;;AACA,IAAIA,gBAAgBC,QAAQ,wBAAR,CAApB;AACA,IAAIC,YAAYD,QAAQ,oBAAR,CAAhB;AACA,IAAIE,uBAAuBF,QAAQ,4BAAR,CAA3B;AACAG,OAAOC,OAAP,GAAiB,YAAW;AAC1B,WAASC,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,aAA/B,EAA8CC,QAA9C,EAAwDC,YAAxD,EAAsEC,MAAtE,EAA8E;AAC5E,QAAIA,WAAWT,oBAAf,EAAqC;AACnC;AACD;AACDD,cAAU,KAAV,EAAiB,yFAAyF,+CAAzF,GAA2I,gDAA5J;AACD;AACD;AACAI,OAAKO,UAAL,GAAkBP,IAAlB;AACA,WAASQ,OAAT,GAAmB;AACjB,WAAOR,IAAP;AACD;AACD;AACA,MAAIS,iBAAiB;AACnBC,WAAOV,IADY;AAEnBW,UAAMX,IAFa;AAGnBY,UAAMZ,IAHa;AAInBa,YAAQb,IAJW;AAKnBc,YAAQd,IALW;AAMnBe,YAAQf,IANW;AAOnBgB,YAAQhB,IAPW;AAQnBiB,SAAKjB,IARc;AASnBkB,aAASV,OATU;AAUnBW,aAASnB,IAVU;AAWnBoB,gBAAYZ,OAXO;AAYnBa,UAAMrB,IAZa;AAanBsB,cAAUd,OAbS;AAcnBe,WAAOf,OAdY;AAenBgB,eAAWhB,OAfQ;AAgBnBiB,WAAOjB;AAhBY,GAArB;AAkBAC,iBAAeiB,cAAf,GAAgChC,aAAhC;AACAe,iBAAekB,SAAf,GAA2BlB,cAA3B;AACA,SAAOA,cAAP;AACD,CAlCD","file":"factoryWithThrowingShims.js","sourcesContent":["/* */ \n'use strict';\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      return;\n    }\n    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n  }\n  ;\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  }\n  ;\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};\n"]}