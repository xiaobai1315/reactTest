{"version":3,"sources":["../../../../../jspm_packages/npm/fbjs@0.8.15/lib/getStyleProperty.js"],"names":["camelize","require","hyphenate","asString","value","String","getStyleProperty","node","name","computedStyle","window","getComputedStyle","getPropertyValue","document","defaultView","currentStyle","cssFloat","styleFloat","style","module","exports"],"mappings":"AAAA;AACA;;AACA,IAAIA,WAAWC,QAAQ,YAAR,CAAf;AACA,IAAIC,YAAYD,QAAQ,aAAR,CAAhB;AACA,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAOA,SAAS,IAAT,GAAgBA,KAAhB,GAAwBC,OAAOD,KAAP,CAA/B;AACD;AACD,SAASE,gBAAT,CAA0BC,IAA1B,EAAgCC,IAAhC,EAAsC;AACpC,MAAIC,gBAAgB,KAAK,CAAzB;AACA,MAAIC,OAAOC,gBAAX,EAA6B;AAC3BF,oBAAgBC,OAAOC,gBAAP,CAAwBJ,IAAxB,EAA8B,IAA9B,CAAhB;AACA,QAAIE,aAAJ,EAAmB;AACjB,aAAON,SAASM,cAAcG,gBAAd,CAA+BV,UAAUM,IAAV,CAA/B,CAAT,CAAP;AACD;AACF;AACD,MAAIK,SAASC,WAAT,IAAwBD,SAASC,WAAT,CAAqBH,gBAAjD,EAAmE;AACjEF,oBAAgBI,SAASC,WAAT,CAAqBH,gBAArB,CAAsCJ,IAAtC,EAA4C,IAA5C,CAAhB;AACA,QAAIE,aAAJ,EAAmB;AACjB,aAAON,SAASM,cAAcG,gBAAd,CAA+BV,UAAUM,IAAV,CAA/B,CAAT,CAAP;AACD;AACD,QAAIA,SAAS,SAAb,EAAwB;AACtB,aAAO,MAAP;AACD;AACF;AACD,MAAID,KAAKQ,YAAT,EAAuB;AACrB,QAAIP,SAAS,OAAb,EAAsB;AACpB,aAAOL,SAASI,KAAKQ,YAAL,CAAkBC,QAAlB,IAA8BT,KAAKQ,YAAL,CAAkBE,UAAzD,CAAP;AACD;AACD,WAAOd,SAASI,KAAKQ,YAAL,CAAkBf,SAASQ,IAAT,CAAlB,CAAT,CAAP;AACD;AACD,SAAOL,SAASI,KAAKW,KAAL,IAAcX,KAAKW,KAAL,CAAWlB,SAASQ,IAAT,CAAX,CAAvB,CAAP;AACD;AACDW,OAAOC,OAAP,GAAiBd,gBAAjB","file":"getStyleProperty.js","sourcesContent":["/* */ \n'use strict';\nvar camelize = require('./camelize');\nvar hyphenate = require('./hyphenate');\nfunction asString(value) {\n  return value == null ? value : String(value);\n}\nfunction getStyleProperty(node, name) {\n  var computedStyle = void 0;\n  if (window.getComputedStyle) {\n    computedStyle = window.getComputedStyle(node, null);\n    if (computedStyle) {\n      return asString(computedStyle.getPropertyValue(hyphenate(name)));\n    }\n  }\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    computedStyle = document.defaultView.getComputedStyle(node, null);\n    if (computedStyle) {\n      return asString(computedStyle.getPropertyValue(hyphenate(name)));\n    }\n    if (name === 'display') {\n      return 'none';\n    }\n  }\n  if (node.currentStyle) {\n    if (name === 'float') {\n      return asString(node.currentStyle.cssFloat || node.currentStyle.styleFloat);\n    }\n    return asString(node.currentStyle[camelize(name)]);\n  }\n  return asString(node.style && node.style[camelize(name)]);\n}\nmodule.exports = getStyleProperty;\n"]}