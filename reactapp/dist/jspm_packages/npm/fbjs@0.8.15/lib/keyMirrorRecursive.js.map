{"version":3,"sources":["../../../../../jspm_packages/npm/fbjs@0.8.15/lib/keyMirrorRecursive.js"],"names":["process","invariant","require","keyMirrorRecursive","obj","prefix","keyMirrorRecursiveInternal","ret","key","isObject","env","NODE_ENV","hasOwnProperty","val","newPrefix","Object","Array","isArray","module","exports"],"mappings":";;AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjB;;AACA,MAAIC,YAAYC,QAAQ,aAAR,CAAhB;AACA,WAASC,kBAAT,CAA4BC,GAA5B,EAAiCC,MAAjC,EAAyC;AACvC,WAAOC,2BAA2BF,GAA3B,EAAgCC,MAAhC,CAAP;AACD;AACD,WAASC,0BAAT,CAAoCF,GAApC,EAAyCC,MAAzC,EAAiD;AAC/C,QAAIE,MAAM,EAAV;AACA,QAAIC,GAAJ;AACA,KAACC,SAASL,GAAT,CAAD,GAAiBJ,QAAQU,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,UAAU,KAAV,EAAiB,sDAAjB,CAAxC,GAAmHA,UAAU,KAAV,CAApI,GAAuJ,KAAK,CAA5J;AACA,SAAKO,GAAL,IAAYJ,GAAZ,EAAiB;AACf,UAAI,CAACA,IAAIQ,cAAJ,CAAmBJ,GAAnB,CAAL,EAA8B;AAC5B;AACD;AACD,UAAIK,MAAMT,IAAII,GAAJ,CAAV;AACA,UAAIM,YAAYT,SAASA,SAAS,GAAT,GAAeG,GAAxB,GAA8BA,GAA9C;AACA,UAAIC,SAASI,GAAT,CAAJ,EAAmB;AACjBA,cAAMP,2BAA2BO,GAA3B,EAAgCC,SAAhC,CAAN;AACD,OAFD,MAEO;AACLD,cAAMC,SAAN;AACD;AACDP,UAAIC,GAAJ,IAAWK,GAAX;AACD;AACD,WAAON,GAAP;AACD;AACD,WAASE,QAAT,CAAkBL,GAAlB,EAAuB;AACrB,WAAOA,eAAeW,MAAf,IAAyB,CAACC,MAAMC,OAAN,CAAcb,GAAd,CAAjC;AACD;AACDc,SAAOC,OAAP,GAAiBhB,kBAAjB;AACD,CA7BD,EA6BGD,QAAQ,SAAR,CA7BH","file":"keyMirrorRecursive.js","sourcesContent":["/* */ \n(function(process) {\n  'use strict';\n  var invariant = require('./invariant');\n  function keyMirrorRecursive(obj, prefix) {\n    return keyMirrorRecursiveInternal(obj, prefix);\n  }\n  function keyMirrorRecursiveInternal(obj, prefix) {\n    var ret = {};\n    var key;\n    !isObject(obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirrorRecursive(...): Argument must be an object.') : invariant(false) : void 0;\n    for (key in obj) {\n      if (!obj.hasOwnProperty(key)) {\n        continue;\n      }\n      var val = obj[key];\n      var newPrefix = prefix ? prefix + '.' + key : key;\n      if (isObject(val)) {\n        val = keyMirrorRecursiveInternal(val, newPrefix);\n      } else {\n        val = newPrefix;\n      }\n      ret[key] = val;\n    }\n    return ret;\n  }\n  function isObject(obj) {\n    return obj instanceof Object && !Array.isArray(obj);\n  }\n  module.exports = keyMirrorRecursive;\n})(require('process'));\n"]}