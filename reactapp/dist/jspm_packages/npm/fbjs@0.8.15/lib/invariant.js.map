{"version":3,"sources":["../../../../../jspm_packages/npm/fbjs@0.8.15/lib/invariant.js"],"names":["process","validateFormat","format","env","NODE_ENV","undefined","Error","invariant","condition","a","b","c","d","e","f","error","args","argIndex","replace","name","framesToPop","module","exports","require"],"mappings":";;AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjB;;AACA,MAAIC,iBAAiB,SAASA,cAAT,CAAwBC,MAAxB,EAAgC,CAAE,CAAvD;AACA,MAAIF,QAAQG,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,qBAAiB,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC/C,UAAIA,WAAWG,SAAf,EAA0B;AACxB,cAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;AACF,KAJD;AAKD;AACD,WAASC,SAAT,CAAmBC,SAAnB,EAA8BN,MAA9B,EAAsCO,CAAtC,EAAyCC,CAAzC,EAA4CC,CAA5C,EAA+CC,CAA/C,EAAkDC,CAAlD,EAAqDC,CAArD,EAAwD;AACtDb,mBAAeC,MAAf;AACA,QAAI,CAACM,SAAL,EAAgB;AACd,UAAIO,KAAJ;AACA,UAAIb,WAAWG,SAAf,EAA0B;AACxBU,gBAAQ,IAAIT,KAAJ,CAAU,uEAAuE,6DAAjF,CAAR;AACD,OAFD,MAEO;AACL,YAAIU,OAAO,CAACP,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,CAAX;AACA,YAAIG,WAAW,CAAf;AACAF,gBAAQ,IAAIT,KAAJ,CAAUJ,OAAOgB,OAAP,CAAe,KAAf,EAAsB,YAAW;AACjD,iBAAOF,KAAKC,UAAL,CAAP;AACD,SAFiB,CAAV,CAAR;AAGAF,cAAMI,IAAN,GAAa,qBAAb;AACD;AACDJ,YAAMK,WAAN,GAAoB,CAApB;AACA,YAAML,KAAN;AACD;AACF;AACDM,SAAOC,OAAP,GAAiBf,SAAjB;AACD,CA7BD,EA6BGgB,QAAQ,SAAR,CA7BH","file":"invariant.js","sourcesContent":["/* */ \n(function(process) {\n  'use strict';\n  var validateFormat = function validateFormat(format) {};\n  if (process.env.NODE_ENV !== 'production') {\n    validateFormat = function validateFormat(format) {\n      if (format === undefined) {\n        throw new Error('invariant requires an error message argument');\n      }\n    };\n  }\n  function invariant(condition, format, a, b, c, d, e, f) {\n    validateFormat(format);\n    if (!condition) {\n      var error;\n      if (format === undefined) {\n        error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n      } else {\n        var args = [a, b, c, d, e, f];\n        var argIndex = 0;\n        error = new Error(format.replace(/%s/g, function() {\n          return args[argIndex++];\n        }));\n        error.name = 'Invariant Violation';\n      }\n      error.framesToPop = 1;\n      throw error;\n    }\n  }\n  module.exports = invariant;\n})(require('process'));\n"]}