{"version":3,"sources":["../../../../../jspm_packages/npm/fbjs@0.8.15/lib/getMarkupWrap.js"],"names":["process","ExecutionEnvironment","require","invariant","dummyNode","canUseDOM","document","createElement","shouldWrap","selectWrap","tableWrap","trWrap","svgWrap","markupWrap","svgElements","forEach","nodeName","getMarkupWrap","env","NODE_ENV","hasOwnProperty","innerHTML","firstChild","module","exports"],"mappings":";;AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjB;;AACA,MAAIC,uBAAuBC,QAAQ,wBAAR,CAA3B;AACA,MAAIC,YAAYD,QAAQ,aAAR,CAAhB;AACA,MAAIE,YAAYH,qBAAqBI,SAArB,GAAiCC,SAASC,aAAT,CAAuB,KAAvB,CAAjC,GAAiE,IAAjF;AACA,MAAIC,aAAa,EAAjB;AACA,MAAIC,aAAa,CAAC,CAAD,EAAI,0BAAJ,EAAgC,WAAhC,CAAjB;AACA,MAAIC,YAAY,CAAC,CAAD,EAAI,SAAJ,EAAe,UAAf,CAAhB;AACA,MAAIC,SAAS,CAAC,CAAD,EAAI,oBAAJ,EAA0B,uBAA1B,CAAb;AACA,MAAIC,UAAU,CAAC,CAAD,EAAI,0CAAJ,EAAgD,QAAhD,CAAd;AACA,MAAIC,aAAa;AACf,SAAK,CAAC,CAAD,EAAI,QAAJ,EAAc,QAAd,CADU;AAEf,YAAQ,CAAC,CAAD,EAAI,OAAJ,EAAa,QAAb,CAFO;AAGf,WAAO,CAAC,CAAD,EAAI,kCAAJ,EAAwC,qBAAxC,CAHQ;AAIf,cAAU,CAAC,CAAD,EAAI,YAAJ,EAAkB,aAAlB,CAJK;AAKf,aAAS,CAAC,CAAD,EAAI,UAAJ,EAAgB,WAAhB,CALM;AAMf,UAAM,CAAC,CAAD,EAAI,gBAAJ,EAAsB,kBAAtB,CANS;AAOf,gBAAYJ,UAPG;AAQf,cAAUA,UARK;AASf,eAAWC,SATI;AAUf,gBAAYA,SAVG;AAWf,aAASA,SAXM;AAYf,aAASA,SAZM;AAaf,aAASA,SAbM;AAcf,UAAMC,MAdS;AAef,UAAMA;AAfS,GAAjB;AAiBA,MAAIG,cAAc,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA+B,SAA/B,EAA0C,GAA1C,EAA+C,OAA/C,EAAwD,MAAxD,EAAgE,gBAAhE,EAAkF,MAAlF,EAA0F,MAA1F,EAAkG,SAAlG,EAA6G,SAA7G,EAAwH,UAAxH,EAAoI,gBAApI,EAAsJ,MAAtJ,EAA8J,MAA9J,EAAsK,MAAtK,EAA8K,OAA9K,CAAlB;AACAA,cAAYC,OAAZ,CAAoB,UAASC,QAAT,EAAmB;AACrCH,eAAWG,QAAX,IAAuBJ,OAAvB;AACAJ,eAAWQ,QAAX,IAAuB,IAAvB;AACD,GAHD;AAIA,WAASC,aAAT,CAAuBD,QAAvB,EAAiC;AAC/B,KAAC,CAAC,CAACZ,SAAH,GAAeJ,QAAQkB,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChB,UAAU,KAAV,EAAiB,sCAAjB,CAAxC,GAAmGA,UAAU,KAAV,CAAlH,GAAqI,KAAK,CAA1I;AACA,QAAI,CAACU,WAAWO,cAAX,CAA0BJ,QAA1B,CAAL,EAA0C;AACxCA,iBAAW,GAAX;AACD;AACD,QAAI,CAACR,WAAWY,cAAX,CAA0BJ,QAA1B,CAAL,EAA0C;AACxC,UAAIA,aAAa,GAAjB,EAAsB;AACpBZ,kBAAUiB,SAAV,GAAsB,UAAtB;AACD,OAFD,MAEO;AACLjB,kBAAUiB,SAAV,GAAsB,MAAML,QAAN,GAAiB,KAAjB,GAAyBA,QAAzB,GAAoC,GAA1D;AACD;AACDR,iBAAWQ,QAAX,IAAuB,CAACZ,UAAUkB,UAAlC;AACD;AACD,WAAOd,WAAWQ,QAAX,IAAuBH,WAAWG,QAAX,CAAvB,GAA8C,IAArD;AACD;AACDO,SAAOC,OAAP,GAAiBP,aAAjB;AACD,CAhDD,EAgDGf,QAAQ,SAAR,CAhDH","file":"getMarkupWrap.js","sourcesContent":["/* */ \n(function(process) {\n  'use strict';\n  var ExecutionEnvironment = require('./ExecutionEnvironment');\n  var invariant = require('./invariant');\n  var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n  var shouldWrap = {};\n  var selectWrap = [1, '<select multiple=\"true\">', '</select>'];\n  var tableWrap = [1, '<table>', '</table>'];\n  var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n  var svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n  var markupWrap = {\n    '*': [1, '?<div>', '</div>'],\n    'area': [1, '<map>', '</map>'],\n    'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n    'legend': [1, '<fieldset>', '</fieldset>'],\n    'param': [1, '<object>', '</object>'],\n    'tr': [2, '<table><tbody>', '</tbody></table>'],\n    'optgroup': selectWrap,\n    'option': selectWrap,\n    'caption': tableWrap,\n    'colgroup': tableWrap,\n    'tbody': tableWrap,\n    'tfoot': tableWrap,\n    'thead': tableWrap,\n    'td': trWrap,\n    'th': trWrap\n  };\n  var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\n  svgElements.forEach(function(nodeName) {\n    markupWrap[nodeName] = svgWrap;\n    shouldWrap[nodeName] = true;\n  });\n  function getMarkupWrap(nodeName) {\n    !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n    if (!markupWrap.hasOwnProperty(nodeName)) {\n      nodeName = '*';\n    }\n    if (!shouldWrap.hasOwnProperty(nodeName)) {\n      if (nodeName === '*') {\n        dummyNode.innerHTML = '<link />';\n      } else {\n        dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n      }\n      shouldWrap[nodeName] = !dummyNode.firstChild;\n    }\n    return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n  }\n  module.exports = getMarkupWrap;\n})(require('process'));\n"]}