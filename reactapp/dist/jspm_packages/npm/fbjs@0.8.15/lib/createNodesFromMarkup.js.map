{"version":3,"sources":["../../../../../jspm_packages/npm/fbjs@0.8.15/lib/createNodesFromMarkup.js"],"names":["process","ExecutionEnvironment","require","createArrayFromMixed","getMarkupWrap","invariant","dummyNode","canUseDOM","document","createElement","nodeNamePattern","getNodeName","markup","nodeNameMatch","match","toLowerCase","createNodesFromMarkup","handleScript","node","env","NODE_ENV","nodeName","wrap","innerHTML","wrapDepth","lastChild","scripts","getElementsByTagName","length","forEach","nodes","Array","from","childNodes","removeChild","module","exports"],"mappings":";;AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjB;;AACA,MAAIC,uBAAuBC,QAAQ,wBAAR,CAA3B;AACA,MAAIC,uBAAuBD,QAAQ,wBAAR,CAA3B;AACA,MAAIE,gBAAgBF,QAAQ,iBAAR,CAApB;AACA,MAAIG,YAAYH,QAAQ,aAAR,CAAhB;AACA,MAAII,YAAYL,qBAAqBM,SAArB,GAAiCC,SAASC,aAAT,CAAuB,KAAvB,CAAjC,GAAiE,IAAjF;AACA,MAAIC,kBAAkB,YAAtB;AACA,WAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,QAAIC,gBAAgBD,OAAOE,KAAP,CAAaJ,eAAb,CAApB;AACA,WAAOG,iBAAiBA,cAAc,CAAd,EAAiBE,WAAjB,EAAxB;AACD;AACD,WAASC,qBAAT,CAA+BJ,MAA/B,EAAuCK,YAAvC,EAAqD;AACnD,QAAIC,OAAOZ,SAAX;AACA,KAAC,CAAC,CAACA,SAAH,GAAeN,QAAQmB,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCf,UAAU,KAAV,EAAiB,6CAAjB,CAAxC,GAA0GA,UAAU,KAAV,CAAzH,GAA4I,KAAK,CAAjJ;AACA,QAAIgB,WAAWV,YAAYC,MAAZ,CAAf;AACA,QAAIU,OAAOD,YAAYjB,cAAciB,QAAd,CAAvB;AACA,QAAIC,IAAJ,EAAU;AACRJ,WAAKK,SAAL,GAAiBD,KAAK,CAAL,IAAUV,MAAV,GAAmBU,KAAK,CAAL,CAApC;AACA,UAAIE,YAAYF,KAAK,CAAL,CAAhB;AACA,aAAOE,WAAP,EAAoB;AAClBN,eAAOA,KAAKO,SAAZ;AACD;AACF,KAND,MAMO;AACLP,WAAKK,SAAL,GAAiBX,MAAjB;AACD;AACD,QAAIc,UAAUR,KAAKS,oBAAL,CAA0B,QAA1B,CAAd;AACA,QAAID,QAAQE,MAAZ,EAAoB;AAClB,OAACX,YAAD,GAAgBjB,QAAQmB,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCf,UAAU,KAAV,EAAiB,mEAAjB,CAAxC,GAAgIA,UAAU,KAAV,CAAhJ,GAAmK,KAAK,CAAxK;AACAF,2BAAqBuB,OAArB,EAA8BG,OAA9B,CAAsCZ,YAAtC;AACD;AACD,QAAIa,QAAQC,MAAMC,IAAN,CAAWd,KAAKe,UAAhB,CAAZ;AACA,WAAOf,KAAKO,SAAZ,EAAuB;AACrBP,WAAKgB,WAAL,CAAiBhB,KAAKO,SAAtB;AACD;AACD,WAAOK,KAAP;AACD;AACDK,SAAOC,OAAP,GAAiBpB,qBAAjB;AACD,CAtCD,EAsCGd,QAAQ,SAAR,CAtCH","file":"createNodesFromMarkup.js","sourcesContent":["/* */ \n(function(process) {\n  'use strict';\n  var ExecutionEnvironment = require('./ExecutionEnvironment');\n  var createArrayFromMixed = require('./createArrayFromMixed');\n  var getMarkupWrap = require('./getMarkupWrap');\n  var invariant = require('./invariant');\n  var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n  var nodeNamePattern = /^\\s*<(\\w+)/;\n  function getNodeName(markup) {\n    var nodeNameMatch = markup.match(nodeNamePattern);\n    return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n  }\n  function createNodesFromMarkup(markup, handleScript) {\n    var node = dummyNode;\n    !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n    var nodeName = getNodeName(markup);\n    var wrap = nodeName && getMarkupWrap(nodeName);\n    if (wrap) {\n      node.innerHTML = wrap[1] + markup + wrap[2];\n      var wrapDepth = wrap[0];\n      while (wrapDepth--) {\n        node = node.lastChild;\n      }\n    } else {\n      node.innerHTML = markup;\n    }\n    var scripts = node.getElementsByTagName('script');\n    if (scripts.length) {\n      !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n      createArrayFromMixed(scripts).forEach(handleScript);\n    }\n    var nodes = Array.from(node.childNodes);\n    while (node.lastChild) {\n      node.removeChild(node.lastChild);\n    }\n    return nodes;\n  }\n  module.exports = createNodesFromMarkup;\n})(require('process'));\n"]}