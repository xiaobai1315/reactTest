{"version":3,"sources":["../../../../../jspm_packages/npm/fbjs@0.8.15/lib/VersionRange.js"],"names":["process","invariant","require","componentRegex","orRegex","rangeRegex","modifierRegex","numericRegex","checkOrExpression","range","version","expressions","split","length","some","VersionRange","contains","trim","checkRangeExpression","env","NODE_ENV","checkSimpleExpression","startVersion","endVersion","isSimpleVersion","versionComponents","_getModifierAndCompon","getModifierAndComponents","modifier","rangeComponents","checkLessThan","checkLessThanOrEqual","checkGreaterThanOrEqual","checkGreaterThan","checkApproximateVersion","checkEqual","a","b","compareComponents","result","lowerBound","slice","upperBound","pop","lastIndex","numeric","parseInt","isNumber","matches","match","concat","number","isNaN","isFinite","zeroPad","array","i","normalizeVersions","j","compareNumeric","aPrefix","bPrefix","aNumeric","bNumeric","compare","_normalizeVersions","aNormalized","bNormalized","module","exports"],"mappings":"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","file":"VersionRange.js","sourcesContent":["/* */ \n(function(process) {\n  'use strict';\n  var invariant = require('./invariant');\n  var componentRegex = /\\./;\n  var orRegex = /\\|\\|/;\n  var rangeRegex = /\\s+\\-\\s+/;\n  var modifierRegex = /^(<=|<|=|>=|~>|~|>|)?\\s*(.+)/;\n  var numericRegex = /^(\\d*)(.*)/;\n  function checkOrExpression(range, version) {\n    var expressions = range.split(orRegex);\n    if (expressions.length > 1) {\n      return expressions.some(function(range) {\n        return VersionRange.contains(range, version);\n      });\n    } else {\n      range = expressions[0].trim();\n      return checkRangeExpression(range, version);\n    }\n  }\n  function checkRangeExpression(range, version) {\n    var expressions = range.split(rangeRegex);\n    !(expressions.length > 0 && expressions.length <= 2) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'the \"-\" operator expects exactly 2 operands') : invariant(false) : void 0;\n    if (expressions.length === 1) {\n      return checkSimpleExpression(expressions[0], version);\n    } else {\n      var startVersion = expressions[0],\n          endVersion = expressions[1];\n      !(isSimpleVersion(startVersion) && isSimpleVersion(endVersion)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'operands to the \"-\" operator must be simple (no modifiers)') : invariant(false) : void 0;\n      return checkSimpleExpression('>=' + startVersion, version) && checkSimpleExpression('<=' + endVersion, version);\n    }\n  }\n  function checkSimpleExpression(range, version) {\n    range = range.trim();\n    if (range === '') {\n      return true;\n    }\n    var versionComponents = version.split(componentRegex);\n    var _getModifierAndCompon = getModifierAndComponents(range),\n        modifier = _getModifierAndCompon.modifier,\n        rangeComponents = _getModifierAndCompon.rangeComponents;\n    switch (modifier) {\n      case '<':\n        return checkLessThan(versionComponents, rangeComponents);\n      case '<=':\n        return checkLessThanOrEqual(versionComponents, rangeComponents);\n      case '>=':\n        return checkGreaterThanOrEqual(versionComponents, rangeComponents);\n      case '>':\n        return checkGreaterThan(versionComponents, rangeComponents);\n      case '~':\n      case '~>':\n        return checkApproximateVersion(versionComponents, rangeComponents);\n      default:\n        return checkEqual(versionComponents, rangeComponents);\n    }\n  }\n  function checkLessThan(a, b) {\n    return compareComponents(a, b) === -1;\n  }\n  function checkLessThanOrEqual(a, b) {\n    var result = compareComponents(a, b);\n    return result === -1 || result === 0;\n  }\n  function checkEqual(a, b) {\n    return compareComponents(a, b) === 0;\n  }\n  function checkGreaterThanOrEqual(a, b) {\n    var result = compareComponents(a, b);\n    return result === 1 || result === 0;\n  }\n  function checkGreaterThan(a, b) {\n    return compareComponents(a, b) === 1;\n  }\n  function checkApproximateVersion(a, b) {\n    var lowerBound = b.slice();\n    var upperBound = b.slice();\n    if (upperBound.length > 1) {\n      upperBound.pop();\n    }\n    var lastIndex = upperBound.length - 1;\n    var numeric = parseInt(upperBound[lastIndex], 10);\n    if (isNumber(numeric)) {\n      upperBound[lastIndex] = numeric + 1 + '';\n    }\n    return checkGreaterThanOrEqual(a, lowerBound) && checkLessThan(a, upperBound);\n  }\n  function getModifierAndComponents(range) {\n    var rangeComponents = range.split(componentRegex);\n    var matches = rangeComponents[0].match(modifierRegex);\n    !matches ? process.env.NODE_ENV !== 'production' ? invariant(false, 'expected regex to match but it did not') : invariant(false) : void 0;\n    return {\n      modifier: matches[1],\n      rangeComponents: [matches[2]].concat(rangeComponents.slice(1))\n    };\n  }\n  function isNumber(number) {\n    return !isNaN(number) && isFinite(number);\n  }\n  function isSimpleVersion(range) {\n    return !getModifierAndComponents(range).modifier;\n  }\n  function zeroPad(array, length) {\n    for (var i = array.length; i < length; i++) {\n      array[i] = '0';\n    }\n  }\n  function normalizeVersions(a, b) {\n    a = a.slice();\n    b = b.slice();\n    zeroPad(a, b.length);\n    for (var i = 0; i < b.length; i++) {\n      var matches = b[i].match(/^[x*]$/i);\n      if (matches) {\n        b[i] = a[i] = '0';\n        if (matches[0] === '*' && i === b.length - 1) {\n          for (var j = i; j < a.length; j++) {\n            a[j] = '0';\n          }\n        }\n      }\n    }\n    zeroPad(b, a.length);\n    return [a, b];\n  }\n  function compareNumeric(a, b) {\n    var aPrefix = a.match(numericRegex)[1];\n    var bPrefix = b.match(numericRegex)[1];\n    var aNumeric = parseInt(aPrefix, 10);\n    var bNumeric = parseInt(bPrefix, 10);\n    if (isNumber(aNumeric) && isNumber(bNumeric) && aNumeric !== bNumeric) {\n      return compare(aNumeric, bNumeric);\n    } else {\n      return compare(a, b);\n    }\n  }\n  function compare(a, b) {\n    !(typeof a === typeof b) ? process.env.NODE_ENV !== 'production' ? invariant(false, '\"a\" and \"b\" must be of the same type') : invariant(false) : void 0;\n    if (a > b) {\n      return 1;\n    } else if (a < b) {\n      return -1;\n    } else {\n      return 0;\n    }\n  }\n  function compareComponents(a, b) {\n    var _normalizeVersions = normalizeVersions(a, b),\n        aNormalized = _normalizeVersions[0],\n        bNormalized = _normalizeVersions[1];\n    for (var i = 0; i < bNormalized.length; i++) {\n      var result = compareNumeric(aNormalized[i], bNormalized[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return 0;\n  }\n  var VersionRange = {contains: function contains(range, version) {\n      return checkOrExpression(range.trim(), version.trim());\n    }};\n  module.exports = VersionRange;\n})(require('process'));\n"]}