{"version":3,"sources":["../../../../../jspm_packages/npm/fbjs@0.8.15/lib/UserAgentData.js"],"names":["UAParser","require","UNKNOWN","PLATFORM_MAP","convertPlatformName","name","getBrowserVersion","version","major","minor","parts","split","parser","results","getResult","browserVersionData","browser","uaData","browserArchitecture","cpu","architecture","browserFullVersion","browserMinorVersion","browserName","browserVersion","deviceName","device","model","engineName","engine","engineVersion","platformArchitecture","platformName","os","platformVersion","platformFullVersion","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;;;;;;;;;;AAWA;;AAEA,IAAIA,WAAWC,QAAQ,cAAR,CAAf;;AAEA,IAAIC,UAAU,SAAd;;AAEA,IAAIC,eAAe;AACjB,YAAU;AADO,CAAnB;;AAIA;;;AAGA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AACjC,SAAOF,aAAaE,IAAb,KAAsBA,IAA7B;AACD;;AAED;;;;;AAKA,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;AAClC,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO;AACLC,aAAO,EADF;AAELC,aAAO;AAFF,KAAP;AAID;AACD,MAAIC,QAAQH,QAAQI,KAAR,CAAc,GAAd,CAAZ;AACA,SAAO;AACLH,WAAOE,MAAM,CAAN,CADF;AAELD,WAAOC,MAAM,CAAN;AAFF,GAAP;AAID;;AAED;;;;AAIA,IAAIE,SAAS,IAAIZ,QAAJ,EAAb;AACA,IAAIa,UAAUD,OAAOE,SAAP,EAAd;;AAEA;AACA,IAAIC,qBAAqBT,kBAAkBO,QAAQG,OAAR,CAAgBT,OAAlC,CAAzB;AACA,IAAIU,SAAS;AACXC,uBAAqBL,QAAQM,GAAR,CAAYC,YAAZ,IAA4BlB,OADtC;AAEXmB,sBAAoBR,QAAQG,OAAR,CAAgBT,OAAhB,IAA2BL,OAFpC;AAGXoB,uBAAqBP,mBAAmBN,KAAnB,IAA4BP,OAHtC;AAIXqB,eAAaV,QAAQG,OAAR,CAAgBX,IAAhB,IAAwBH,OAJ1B;AAKXsB,kBAAgBX,QAAQG,OAAR,CAAgBR,KAAhB,IAAyBN,OAL9B;AAMXuB,cAAYZ,QAAQa,MAAR,CAAeC,KAAf,IAAwBzB,OANzB;AAOX0B,cAAYf,QAAQgB,MAAR,CAAexB,IAAf,IAAuBH,OAPxB;AAQX4B,iBAAejB,QAAQgB,MAAR,CAAetB,OAAf,IAA0BL,OAR9B;AASX6B,wBAAsBlB,QAAQM,GAAR,CAAYC,YAAZ,IAA4BlB,OATvC;AAUX8B,gBAAc5B,oBAAoBS,QAAQoB,EAAR,CAAW5B,IAA/B,KAAwCH,OAV3C;AAWXgC,mBAAiBrB,QAAQoB,EAAR,CAAW1B,OAAX,IAAsBL,OAX5B;AAYXiC,uBAAqBtB,QAAQoB,EAAR,CAAW1B,OAAX,IAAsBL;AAZhC,CAAb;;AAeAkC,OAAOC,OAAP,GAAiBpB,MAAjB","file":"UserAgentData.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/**\n * Usage note:\n * This module makes a best effort to export the same data we would internally.\n * At Facebook we use a server-generated module that does the parsing and\n * exports the data for the client to use. We can't rely on a server-side\n * implementation in open source so instead we make use of an open source\n * library to do the heavy lifting and then make some adjustments as necessary.\n * It's likely there will be some differences. Some we can smooth over.\n * Others are going to be harder.\n */\n\n'use strict';\n\nvar UAParser = require('ua-parser-js');\n\nvar UNKNOWN = 'Unknown';\n\nvar PLATFORM_MAP = {\n  'Mac OS': 'Mac OS X'\n};\n\n/**\n * Convert from UAParser platform name to what we expect.\n */\nfunction convertPlatformName(name) {\n  return PLATFORM_MAP[name] || name;\n}\n\n/**\n * Get the version number in parts. This is very naive. We actually get major\n * version as a part of UAParser already, which is generally good enough, but\n * let's get the minor just in case.\n */\nfunction getBrowserVersion(version) {\n  if (!version) {\n    return {\n      major: '',\n      minor: ''\n    };\n  }\n  var parts = version.split('.');\n  return {\n    major: parts[0],\n    minor: parts[1]\n  };\n}\n\n/**\n * Get the UA data fom UAParser and then convert it to the format we're\n * expecting for our APIS.\n */\nvar parser = new UAParser();\nvar results = parser.getResult();\n\n// Do some conversion first.\nvar browserVersionData = getBrowserVersion(results.browser.version);\nvar uaData = {\n  browserArchitecture: results.cpu.architecture || UNKNOWN,\n  browserFullVersion: results.browser.version || UNKNOWN,\n  browserMinorVersion: browserVersionData.minor || UNKNOWN,\n  browserName: results.browser.name || UNKNOWN,\n  browserVersion: results.browser.major || UNKNOWN,\n  deviceName: results.device.model || UNKNOWN,\n  engineName: results.engine.name || UNKNOWN,\n  engineVersion: results.engine.version || UNKNOWN,\n  platformArchitecture: results.cpu.architecture || UNKNOWN,\n  platformName: convertPlatformName(results.os.name) || UNKNOWN,\n  platformVersion: results.os.version || UNKNOWN,\n  platformFullVersion: results.os.version || UNKNOWN\n};\n\nmodule.exports = uaData;"]}