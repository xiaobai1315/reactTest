{"version":3,"sources":["../../../../../jspm_packages/npm/fbjs@0.8.15/lib/cx.js"],"names":["cx","classNames","Object","keys","filter","className","map","replace","join","Array","prototype","call","arguments","str","module","exports"],"mappings":"AAAA;AACA;;AAEA;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;AAeA,SAASA,EAAT,CAAYC,UAAZ,EAAwB;AACtB,MAAI,QAAOA,UAAP,yCAAOA,UAAP,MAAqB,QAAzB,EAAmC;AACjC,WAAOC,OAAOC,IAAP,CAAYF,UAAZ,EAAwBG,MAAxB,CAA+B,UAAUC,SAAV,EAAqB;AACzD,aAAOJ,WAAWI,SAAX,CAAP;AACD,KAFM,EAEJC,GAFI,CAEAC,OAFA,EAESC,IAFT,CAEc,GAFd,CAAP;AAGD;AACD,SAAOC,MAAMC,SAAN,CAAgBJ,GAAhB,CAAoBK,IAApB,CAAyBC,SAAzB,EAAoCL,OAApC,EAA6CC,IAA7C,CAAkD,GAAlD,CAAP;AACD;;AAED,SAASD,OAAT,CAAiBM,GAAjB,EAAsB;AACpB,SAAOA,IAAIN,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,CAAP;AACD;;AAEDO,OAAOC,OAAP,GAAiBf,EAAjB","file":"cx.js","sourcesContent":["/* */ \n'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/**\n * This function is used to mark string literals representing CSS class names\n * so that they can be transformed statically. This allows for modularization\n * and minification of CSS class names.\n *\n * In static_upstream, this function is actually implemented, but it should\n * eventually be replaced with something more descriptive, and the transform\n * that is used in the main stack should be ported for use elsewhere.\n *\n * @param string|object className to modularize, or an object of key/values.\n *                      In the object case, the values are conditions that\n *                      determine if the className keys should be included.\n * @param [string ...]  Variable list of classNames in the string case.\n * @return string       Renderable space-separated CSS className.\n */\nfunction cx(classNames) {\n  if (typeof classNames == 'object') {\n    return Object.keys(classNames).filter(function (className) {\n      return classNames[className];\n    }).map(replace).join(' ');\n  }\n  return Array.prototype.map.call(arguments, replace).join(' ');\n}\n\nfunction replace(str) {\n  return str.replace(/\\//g, '-');\n}\n\nmodule.exports = cx;"]}