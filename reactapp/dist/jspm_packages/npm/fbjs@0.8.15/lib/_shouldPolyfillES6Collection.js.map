{"version":3,"sources":["../../../../../jspm_packages/npm/fbjs@0.8.15/lib/_shouldPolyfillES6Collection.js"],"names":["shouldPolyfillES6Collection","collectionName","Collection","global","Symbol","proto","prototype","clear","size","keys","forEach","module","exports"],"mappings":"AAAA;AACA;;AAEA;;;;;;;;;;;;AAYA;;;;;AAIA,SAASA,2BAAT,CAAqCC,cAArC,EAAqD;AACnD,MAAIC,aAAaC,OAAOF,cAAP,CAAjB;AACA,MAAIC,cAAc,IAAlB,EAAwB;AACtB,WAAO,IAAP;AACD;;AAED;AACA;AACA;AACA;AACA,MAAI,OAAOC,OAAOC,MAAd,KAAyB,UAA7B,EAAyC;AACvC,WAAO,IAAP;AACD;;AAED,MAAIC,QAAQH,WAAWI,SAAvB;;AAEA;AACA;AACA;AACA,SAAOJ,cAAc,IAAd,IAAsB,OAAOA,UAAP,KAAsB,UAA5C,IAA0D,OAAOG,MAAME,KAAb,KAAuB,UAAjF,IAA+F,IAAIL,UAAJ,GAAiBM,IAAjB,KAA0B,CAAzH,IAA8H,OAAOH,MAAMI,IAAb,KAAsB,UAApJ,IAAkK,OAAOJ,MAAMK,OAAb,KAAyB,UAAlM;AACD;;AAEDC,OAAOC,OAAP,GAAiBZ,2BAAjB","file":"_shouldPolyfillES6Collection.js","sourcesContent":["/* */ \n'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @preventMunge\n * \n */\n\n/**\n * Checks whether a collection name (e.g. \"Map\" or \"Set\") has a native polyfill\n * that is safe to be used.\n */\nfunction shouldPolyfillES6Collection(collectionName) {\n  var Collection = global[collectionName];\n  if (Collection == null) {\n    return true;\n  }\n\n  // The iterator protocol depends on `Symbol.iterator`. If a collection is\n  // implemented, but `Symbol` is not, it's going to break iteration because\n  // we'll be using custom \"@@iterator\" instead, which is not implemented on\n  // native collections.\n  if (typeof global.Symbol !== 'function') {\n    return true;\n  }\n\n  var proto = Collection.prototype;\n\n  // These checks are adapted from es6-shim: https://fburl.com/34437854\n  // NOTE: `isCallableWithoutNew` and `!supportsSubclassing` are not checked\n  // because they make debugging with \"break on exceptions\" difficult.\n  return Collection == null || typeof Collection !== 'function' || typeof proto.clear !== 'function' || new Collection().size !== 0 || typeof proto.keys !== 'function' || typeof proto.forEach !== 'function';\n}\n\nmodule.exports = shouldPolyfillES6Collection;"]}