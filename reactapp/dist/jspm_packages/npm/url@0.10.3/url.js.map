{"version":3,"sources":["../../../../jspm_packages/npm/url@0.10.3/url.js"],"names":["punycode","require","exports","parse","urlParse","resolve","urlResolve","resolveObject","urlResolveObject","format","urlFormat","Url","protocol","slashes","auth","host","port","hostname","hash","search","query","pathname","path","href","protocolPattern","portPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","url","parseQueryString","slashesDenoteHost","isObject","u","prototype","isString","TypeError","rest","trim","proto","exec","lowerProto","toLowerCase","substr","length","match","hostEnd","i","hec","indexOf","atSign","lastIndexOf","slice","decodeURIComponent","parseHost","ipv6Hostname","hostparts","split","l","part","newpart","j","k","charCodeAt","validParts","notHost","bit","push","unshift","join","domainArray","newOut","s","encode","p","h","ae","esc","encodeURIComponent","escape","qm","obj","call","replace","Object","keys","stringify","charAt","source","relative","rel","result","forEach","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","splice","isAbsolute","arg"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;;AAEAC,QAAQC,KAAR,GAAgBC,QAAhB;AACAF,QAAQG,OAAR,GAAkBC,UAAlB;AACAJ,QAAQK,aAAR,GAAwBC,gBAAxB;AACAN,QAAQO,MAAR,GAAiBC,SAAjB;;AAEAR,QAAQS,GAAR,GAAcA,GAAd;;AAEA,SAASA,GAAT,GAAe;AACb,OAAKC,QAAL,GAAgB,IAAhB;AACA,OAAKC,OAAL,GAAe,IAAf;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,QAAL,GAAgB,IAAhB;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,MAAL,GAAc,IAAd;AACA,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,QAAL,GAAgB,IAAhB;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,IAAL,GAAY,IAAZ;AACD;;AAED;;AAEA;AACA;AACA,IAAIC,kBAAkB,mBAAtB;AAAA,IACIC,cAAc,UADlB;;;AAGI;AACA;AACAC,SAAS,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,IAAtC,CALb;;;AAOI;AACAC,SAAS,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgCC,MAAhC,CAAuCF,MAAvC,CARb;;;AAUI;AACAG,aAAa,CAAC,IAAD,EAAOD,MAAP,CAAcD,MAAd,CAXjB;;AAYI;AACA;AACA;AACA;AACAG,eAAe,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0BF,MAA1B,CAAiCC,UAAjC,CAhBnB;AAAA,IAiBIE,kBAAkB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAjBtB;AAAA,IAkBIC,iBAAiB,GAlBrB;AAAA,IAmBIC,sBAAsB,uBAnB1B;AAAA,IAoBIC,oBAAoB,6BApBxB;;AAqBI;AACAC,iBAAiB;AACf,gBAAc,IADC;AAEf,iBAAe;AAFA,CAtBrB;;AA0BI;AACAC,mBAAmB;AACjB,gBAAc,IADG;AAEjB,iBAAe;AAFE,CA3BvB;;AA+BI;AACAC,kBAAkB;AAChB,UAAQ,IADQ;AAEhB,WAAS,IAFO;AAGhB,SAAO,IAHS;AAIhB,YAAU,IAJM;AAKhB,UAAQ,IALQ;AAMhB,WAAS,IANO;AAOhB,YAAU,IAPM;AAQhB,UAAQ,IARQ;AAShB,aAAW,IATK;AAUhB,WAAS;AAVO,CAhCtB;AAAA,IA4CIC,cAAcrC,QAAQ,aAAR,CA5ClB;;AA8CA,SAASG,QAAT,CAAkBmC,GAAlB,EAAuBC,gBAAvB,EAAyCC,iBAAzC,EAA4D;AAC1D,MAAIF,OAAOG,SAASH,GAAT,CAAP,IAAwBA,eAAe5B,GAA3C,EAAgD,OAAO4B,GAAP;;AAEhD,MAAII,IAAI,IAAIhC,GAAJ,EAAR;AACAgC,IAAExC,KAAF,CAAQoC,GAAR,EAAaC,gBAAb,EAA+BC,iBAA/B;AACA,SAAOE,CAAP;AACD;;AAEDhC,IAAIiC,SAAJ,CAAczC,KAAd,GAAsB,UAASoC,GAAT,EAAcC,gBAAd,EAAgCC,iBAAhC,EAAmD;AACvE,MAAI,CAACI,SAASN,GAAT,CAAL,EAAoB;AAClB,UAAM,IAAIO,SAAJ,CAAc,mDAAkDP,GAAlD,yCAAkDA,GAAlD,EAAd,CAAN;AACD;;AAED,MAAIQ,OAAOR,GAAX;;AAEA;AACA;AACAQ,SAAOA,KAAKC,IAAL,EAAP;;AAEA,MAAIC,QAAQzB,gBAAgB0B,IAAhB,CAAqBH,IAArB,CAAZ;AACA,MAAIE,KAAJ,EAAW;AACTA,YAAQA,MAAM,CAAN,CAAR;AACA,QAAIE,aAAaF,MAAMG,WAAN,EAAjB;AACA,SAAKxC,QAAL,GAAgBuC,UAAhB;AACAJ,WAAOA,KAAKM,MAAL,CAAYJ,MAAMK,MAAlB,CAAP;AACD;;AAED;AACA;AACA;AACA;AACA,MAAIb,qBAAqBQ,KAArB,IAA8BF,KAAKQ,KAAL,CAAW,sBAAX,CAAlC,EAAsE;AACpE,QAAI1C,UAAUkC,KAAKM,MAAL,CAAY,CAAZ,EAAe,CAAf,MAAsB,IAApC;AACA,QAAIxC,WAAW,EAAEoC,SAASb,iBAAiBa,KAAjB,CAAX,CAAf,EAAoD;AAClDF,aAAOA,KAAKM,MAAL,CAAY,CAAZ,CAAP;AACA,WAAKxC,OAAL,GAAe,IAAf;AACD;AACF;;AAED,MAAI,CAACuB,iBAAiBa,KAAjB,CAAD,KACCpC,WAAYoC,SAAS,CAACZ,gBAAgBY,KAAhB,CADvB,CAAJ,EACqD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAIO,UAAU,CAAC,CAAf;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI1B,gBAAgBuB,MAApC,EAA4CG,GAA5C,EAAiD;AAC/C,UAAIC,MAAMX,KAAKY,OAAL,CAAa5B,gBAAgB0B,CAAhB,CAAb,CAAV;AACA,UAAIC,QAAQ,CAAC,CAAT,KAAeF,YAAY,CAAC,CAAb,IAAkBE,MAAMF,OAAvC,CAAJ,EACEA,UAAUE,GAAV;AACH;;AAED;AACA;AACA,QAAI5C,IAAJ,EAAU8C,MAAV;AACA,QAAIJ,YAAY,CAAC,CAAjB,EAAoB;AAClB;AACAI,eAASb,KAAKc,WAAL,CAAiB,GAAjB,CAAT;AACD,KAHD,MAGO;AACL;AACA;AACAD,eAASb,KAAKc,WAAL,CAAiB,GAAjB,EAAsBL,OAAtB,CAAT;AACD;;AAED;AACA;AACA,QAAII,WAAW,CAAC,CAAhB,EAAmB;AACjB9C,aAAOiC,KAAKe,KAAL,CAAW,CAAX,EAAcF,MAAd,CAAP;AACAb,aAAOA,KAAKe,KAAL,CAAWF,SAAS,CAApB,CAAP;AACA,WAAK9C,IAAL,GAAYiD,mBAAmBjD,IAAnB,CAAZ;AACD;;AAED;AACA0C,cAAU,CAAC,CAAX;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI3B,aAAawB,MAAjC,EAAyCG,GAAzC,EAA8C;AAC5C,UAAIC,MAAMX,KAAKY,OAAL,CAAa7B,aAAa2B,CAAb,CAAb,CAAV;AACA,UAAIC,QAAQ,CAAC,CAAT,KAAeF,YAAY,CAAC,CAAb,IAAkBE,MAAMF,OAAvC,CAAJ,EACEA,UAAUE,GAAV;AACH;AACD;AACA,QAAIF,YAAY,CAAC,CAAjB,EACEA,UAAUT,KAAKO,MAAf;;AAEF,SAAKvC,IAAL,GAAYgC,KAAKe,KAAL,CAAW,CAAX,EAAcN,OAAd,CAAZ;AACAT,WAAOA,KAAKe,KAAL,CAAWN,OAAX,CAAP;;AAEA;AACA,SAAKQ,SAAL;;AAEA;AACA;AACA,SAAK/C,QAAL,GAAgB,KAAKA,QAAL,IAAiB,EAAjC;;AAEA;AACA;AACA,QAAIgD,eAAe,KAAKhD,QAAL,CAAc,CAAd,MAAqB,GAArB,IACf,KAAKA,QAAL,CAAc,KAAKA,QAAL,CAAcqC,MAAd,GAAuB,CAArC,MAA4C,GADhD;;AAGA;AACA,QAAI,CAACW,YAAL,EAAmB;AACjB,UAAIC,YAAY,KAAKjD,QAAL,CAAckD,KAAd,CAAoB,IAApB,CAAhB;AACA,WAAK,IAAIV,IAAI,CAAR,EAAWW,IAAIF,UAAUZ,MAA9B,EAAsCG,IAAIW,CAA1C,EAA6CX,GAA7C,EAAkD;AAChD,YAAIY,OAAOH,UAAUT,CAAV,CAAX;AACA,YAAI,CAACY,IAAL,EAAW;AACX,YAAI,CAACA,KAAKd,KAAL,CAAWtB,mBAAX,CAAL,EAAsC;AACpC,cAAIqC,UAAU,EAAd;AACA,eAAK,IAAIC,IAAI,CAAR,EAAWC,IAAIH,KAAKf,MAAzB,EAAiCiB,IAAIC,CAArC,EAAwCD,GAAxC,EAA6C;AAC3C,gBAAIF,KAAKI,UAAL,CAAgBF,CAAhB,IAAqB,GAAzB,EAA8B;AAC5B;AACA;AACA;AACAD,yBAAW,GAAX;AACD,aALD,MAKO;AACLA,yBAAWD,KAAKE,CAAL,CAAX;AACD;AACF;AACD;AACA,cAAI,CAACD,QAAQf,KAAR,CAActB,mBAAd,CAAL,EAAyC;AACvC,gBAAIyC,aAAaR,UAAUJ,KAAV,CAAgB,CAAhB,EAAmBL,CAAnB,CAAjB;AACA,gBAAIkB,UAAUT,UAAUJ,KAAV,CAAgBL,IAAI,CAApB,CAAd;AACA,gBAAImB,MAAMP,KAAKd,KAAL,CAAWrB,iBAAX,CAAV;AACA,gBAAI0C,GAAJ,EAAS;AACPF,yBAAWG,IAAX,CAAgBD,IAAI,CAAJ,CAAhB;AACAD,sBAAQG,OAAR,CAAgBF,IAAI,CAAJ,CAAhB;AACD;AACD,gBAAID,QAAQrB,MAAZ,EAAoB;AAClBP,qBAAO,MAAM4B,QAAQI,IAAR,CAAa,GAAb,CAAN,GAA0BhC,IAAjC;AACD;AACD,iBAAK9B,QAAL,GAAgByD,WAAWK,IAAX,CAAgB,GAAhB,CAAhB;AACA;AACD;AACF;AACF;AACF;;AAED,QAAI,KAAK9D,QAAL,CAAcqC,MAAd,GAAuBtB,cAA3B,EAA2C;AACzC,WAAKf,QAAL,GAAgB,EAAhB;AACD,KAFD,MAEO;AACL;AACA,WAAKA,QAAL,GAAgB,KAAKA,QAAL,CAAcmC,WAAd,EAAhB;AACD;;AAED,QAAI,CAACa,YAAL,EAAmB;AACjB;AACA;AACA;AACA;AACA,UAAIe,cAAc,KAAK/D,QAAL,CAAckD,KAAd,CAAoB,GAApB,CAAlB;AACA,UAAIc,SAAS,EAAb;AACA,WAAK,IAAIxB,IAAI,CAAb,EAAgBA,IAAIuB,YAAY1B,MAAhC,EAAwC,EAAEG,CAA1C,EAA6C;AAC3C,YAAIyB,IAAIF,YAAYvB,CAAZ,CAAR;AACAwB,eAAOJ,IAAP,CAAYK,EAAE3B,KAAF,CAAQ,gBAAR,IACR,SAASvD,SAASmF,MAAT,CAAgBD,CAAhB,CADD,GACsBA,CADlC;AAED;AACD,WAAKjE,QAAL,GAAgBgE,OAAOF,IAAP,CAAY,GAAZ,CAAhB;AACD;;AAED,QAAIK,IAAI,KAAKpE,IAAL,GAAY,MAAM,KAAKA,IAAvB,GAA8B,EAAtC;AACA,QAAIqE,IAAI,KAAKpE,QAAL,IAAiB,EAAzB;AACA,SAAKF,IAAL,GAAYsE,IAAID,CAAhB;AACA,SAAK7D,IAAL,IAAa,KAAKR,IAAlB;;AAEA;AACA;AACA,QAAIkD,YAAJ,EAAkB;AAChB,WAAKhD,QAAL,GAAgB,KAAKA,QAAL,CAAcoC,MAAd,CAAqB,CAArB,EAAwB,KAAKpC,QAAL,CAAcqC,MAAd,GAAuB,CAA/C,CAAhB;AACA,UAAIP,KAAK,CAAL,MAAY,GAAhB,EAAqB;AACnBA,eAAO,MAAMA,IAAb;AACD;AACF;AACF;;AAED;AACA;AACA,MAAI,CAACZ,eAAegB,UAAf,CAAL,EAAiC;;AAE/B;AACA;AACA;AACA,SAAK,IAAIM,IAAI,CAAR,EAAWW,IAAIvC,WAAWyB,MAA/B,EAAuCG,IAAIW,CAA3C,EAA8CX,GAA9C,EAAmD;AACjD,UAAI6B,KAAKzD,WAAW4B,CAAX,CAAT;AACA,UAAI8B,MAAMC,mBAAmBF,EAAnB,CAAV;AACA,UAAIC,QAAQD,EAAZ,EAAgB;AACdC,cAAME,OAAOH,EAAP,CAAN;AACD;AACDvC,aAAOA,KAAKoB,KAAL,CAAWmB,EAAX,EAAeP,IAAf,CAAoBQ,GAApB,CAAP;AACD;AACF;;AAGD;AACA,MAAIrE,OAAO6B,KAAKY,OAAL,CAAa,GAAb,CAAX;AACA,MAAIzC,SAAS,CAAC,CAAd,EAAiB;AACf;AACA,SAAKA,IAAL,GAAY6B,KAAKM,MAAL,CAAYnC,IAAZ,CAAZ;AACA6B,WAAOA,KAAKe,KAAL,CAAW,CAAX,EAAc5C,IAAd,CAAP;AACD;AACD,MAAIwE,KAAK3C,KAAKY,OAAL,CAAa,GAAb,CAAT;AACA,MAAI+B,OAAO,CAAC,CAAZ,EAAe;AACb,SAAKvE,MAAL,GAAc4B,KAAKM,MAAL,CAAYqC,EAAZ,CAAd;AACA,SAAKtE,KAAL,GAAa2B,KAAKM,MAAL,CAAYqC,KAAK,CAAjB,CAAb;AACA,QAAIlD,gBAAJ,EAAsB;AACpB,WAAKpB,KAAL,GAAakB,YAAYnC,KAAZ,CAAkB,KAAKiB,KAAvB,CAAb;AACD;AACD2B,WAAOA,KAAKe,KAAL,CAAW,CAAX,EAAc4B,EAAd,CAAP;AACD,GAPD,MAOO,IAAIlD,gBAAJ,EAAsB;AAC3B;AACA,SAAKrB,MAAL,GAAc,EAAd;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;AACD,MAAI2B,IAAJ,EAAU,KAAK1B,QAAL,GAAgB0B,IAAhB;AACV,MAAIV,gBAAgBc,UAAhB,KACA,KAAKlC,QADL,IACiB,CAAC,KAAKI,QAD3B,EACqC;AACnC,SAAKA,QAAL,GAAgB,GAAhB;AACD;;AAED;AACA,MAAI,KAAKA,QAAL,IAAiB,KAAKF,MAA1B,EAAkC;AAChC,QAAIiE,IAAI,KAAK/D,QAAL,IAAiB,EAAzB;AACA,QAAI6D,IAAI,KAAK/D,MAAL,IAAe,EAAvB;AACA,SAAKG,IAAL,GAAY8D,IAAIF,CAAhB;AACD;;AAED;AACA,OAAK3D,IAAL,GAAY,KAAKd,MAAL,EAAZ;AACA,SAAO,IAAP;AACD,CAvOD;;AAyOA;AACA,SAASC,SAAT,CAAmBiF,GAAnB,EAAwB;AACtB;AACA;AACA;AACA;AACA,MAAI9C,SAAS8C,GAAT,CAAJ,EAAmBA,MAAMvF,SAASuF,GAAT,CAAN;AACnB,MAAI,EAAEA,eAAehF,GAAjB,CAAJ,EAA2B,OAAOA,IAAIiC,SAAJ,CAAcnC,MAAd,CAAqBmF,IAArB,CAA0BD,GAA1B,CAAP;AAC3B,SAAOA,IAAIlF,MAAJ,EAAP;AACD;;AAEDE,IAAIiC,SAAJ,CAAcnC,MAAd,GAAuB,YAAW;AAChC,MAAIK,OAAO,KAAKA,IAAL,IAAa,EAAxB;AACA,MAAIA,IAAJ,EAAU;AACRA,WAAO0E,mBAAmB1E,IAAnB,CAAP;AACAA,WAAOA,KAAK+E,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP;AACA/E,YAAQ,GAAR;AACD;;AAED,MAAIF,WAAW,KAAKA,QAAL,IAAiB,EAAhC;AAAA,MACIS,WAAW,KAAKA,QAAL,IAAiB,EADhC;AAAA,MAEIH,OAAO,KAAKA,IAAL,IAAa,EAFxB;AAAA,MAGIH,OAAO,KAHX;AAAA,MAIIK,QAAQ,EAJZ;;AAMA,MAAI,KAAKL,IAAT,EAAe;AACbA,WAAOD,OAAO,KAAKC,IAAnB;AACD,GAFD,MAEO,IAAI,KAAKE,QAAT,EAAmB;AACxBF,WAAOD,QAAQ,KAAKG,QAAL,CAAc0C,OAAd,CAAsB,GAAtB,MAA+B,CAAC,CAAhC,GACX,KAAK1C,QADM,GAEX,MAAM,KAAKA,QAAX,GAAsB,GAFnB,CAAP;AAGA,QAAI,KAAKD,IAAT,EAAe;AACbD,cAAQ,MAAM,KAAKC,IAAnB;AACD;AACF;;AAED,MAAI,KAAKI,KAAL,IACAsB,SAAS,KAAKtB,KAAd,CADA,IAEA0E,OAAOC,IAAP,CAAY,KAAK3E,KAAjB,EAAwBkC,MAF5B,EAEoC;AAClClC,YAAQkB,YAAY0D,SAAZ,CAAsB,KAAK5E,KAA3B,CAAR;AACD;;AAED,MAAID,SAAS,KAAKA,MAAL,IAAgBC,SAAU,MAAMA,KAAhC,IAA2C,EAAxD;;AAEA,MAAIR,YAAYA,SAASyC,MAAT,CAAgB,CAAC,CAAjB,MAAwB,GAAxC,EAA6CzC,YAAY,GAAZ;;AAE7C;AACA;AACA,MAAI,KAAKC,OAAL,IACA,CAAC,CAACD,QAAD,IAAayB,gBAAgBzB,QAAhB,CAAd,KAA4CG,SAAS,KADzD,EACgE;AAC9DA,WAAO,QAAQA,QAAQ,EAAhB,CAAP;AACA,QAAIM,YAAYA,SAAS4E,MAAT,CAAgB,CAAhB,MAAuB,GAAvC,EAA4C5E,WAAW,MAAMA,QAAjB;AAC7C,GAJD,MAIO,IAAI,CAACN,IAAL,EAAW;AAChBA,WAAO,EAAP;AACD;;AAED,MAAIG,QAAQA,KAAK+E,MAAL,CAAY,CAAZ,MAAmB,GAA/B,EAAoC/E,OAAO,MAAMA,IAAb;AACpC,MAAIC,UAAUA,OAAO8E,MAAP,CAAc,CAAd,MAAqB,GAAnC,EAAwC9E,SAAS,MAAMA,MAAf;;AAExCE,aAAWA,SAASwE,OAAT,CAAiB,OAAjB,EAA0B,UAAStC,KAAT,EAAgB;AACnD,WAAOiC,mBAAmBjC,KAAnB,CAAP;AACD,GAFU,CAAX;AAGApC,WAASA,OAAO0E,OAAP,CAAe,GAAf,EAAoB,KAApB,CAAT;;AAEA,SAAOjF,WAAWG,IAAX,GAAkBM,QAAlB,GAA6BF,MAA7B,GAAsCD,IAA7C;AACD,CAtDD;;AAwDA,SAASZ,UAAT,CAAoB4F,MAApB,EAA4BC,QAA5B,EAAsC;AACpC,SAAO/F,SAAS8F,MAAT,EAAiB,KAAjB,EAAwB,IAAxB,EAA8B7F,OAA9B,CAAsC8F,QAAtC,CAAP;AACD;;AAEDxF,IAAIiC,SAAJ,CAAcvC,OAAd,GAAwB,UAAS8F,QAAT,EAAmB;AACzC,SAAO,KAAK5F,aAAL,CAAmBH,SAAS+F,QAAT,EAAmB,KAAnB,EAA0B,IAA1B,CAAnB,EAAoD1F,MAApD,EAAP;AACD,CAFD;;AAIA,SAASD,gBAAT,CAA0B0F,MAA1B,EAAkCC,QAAlC,EAA4C;AAC1C,MAAI,CAACD,MAAL,EAAa,OAAOC,QAAP;AACb,SAAO/F,SAAS8F,MAAT,EAAiB,KAAjB,EAAwB,IAAxB,EAA8B3F,aAA9B,CAA4C4F,QAA5C,CAAP;AACD;;AAEDxF,IAAIiC,SAAJ,CAAcrC,aAAd,GAA8B,UAAS4F,QAAT,EAAmB;AAC/C,MAAItD,SAASsD,QAAT,CAAJ,EAAwB;AACtB,QAAIC,MAAM,IAAIzF,GAAJ,EAAV;AACAyF,QAAIjG,KAAJ,CAAUgG,QAAV,EAAoB,KAApB,EAA2B,IAA3B;AACAA,eAAWC,GAAX;AACD;;AAED,MAAIC,SAAS,IAAI1F,GAAJ,EAAb;AACAmF,SAAOC,IAAP,CAAY,IAAZ,EAAkBO,OAAlB,CAA0B,UAAS9B,CAAT,EAAY;AACpC6B,WAAO7B,CAAP,IAAY,KAAKA,CAAL,CAAZ;AACD,GAFD,EAEG,IAFH;;AAIA;AACA;AACA6B,SAAOnF,IAAP,GAAciF,SAASjF,IAAvB;;AAEA;AACA,MAAIiF,SAAS5E,IAAT,KAAkB,EAAtB,EAA0B;AACxB8E,WAAO9E,IAAP,GAAc8E,OAAO5F,MAAP,EAAd;AACA,WAAO4F,MAAP;AACD;;AAED;AACA,MAAIF,SAAStF,OAAT,IAAoB,CAACsF,SAASvF,QAAlC,EAA4C;AAC1C;AACAkF,WAAOC,IAAP,CAAYI,QAAZ,EAAsBG,OAAtB,CAA8B,UAAS9B,CAAT,EAAY;AACxC,UAAIA,MAAM,UAAV,EACE6B,OAAO7B,CAAP,IAAY2B,SAAS3B,CAAT,CAAZ;AACH,KAHD;;AAKA;AACA,QAAInC,gBAAgBgE,OAAOzF,QAAvB,KACAyF,OAAOpF,QADP,IACmB,CAACoF,OAAOhF,QAD/B,EACyC;AACvCgF,aAAO/E,IAAP,GAAc+E,OAAOhF,QAAP,GAAkB,GAAhC;AACD;;AAEDgF,WAAO9E,IAAP,GAAc8E,OAAO5F,MAAP,EAAd;AACA,WAAO4F,MAAP;AACD;;AAED,MAAIF,SAASvF,QAAT,IAAqBuF,SAASvF,QAAT,KAAsByF,OAAOzF,QAAtD,EAAgE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,CAACyB,gBAAgB8D,SAASvF,QAAzB,CAAL,EAAyC;AACvCkF,aAAOC,IAAP,CAAYI,QAAZ,EAAsBG,OAAtB,CAA8B,UAAS9B,CAAT,EAAY;AACxC6B,eAAO7B,CAAP,IAAY2B,SAAS3B,CAAT,CAAZ;AACD,OAFD;AAGA6B,aAAO9E,IAAP,GAAc8E,OAAO5F,MAAP,EAAd;AACA,aAAO4F,MAAP;AACD;;AAEDA,WAAOzF,QAAP,GAAkBuF,SAASvF,QAA3B;AACA,QAAI,CAACuF,SAASpF,IAAV,IAAkB,CAACqB,iBAAiB+D,SAASvF,QAA1B,CAAvB,EAA4D;AAC1D,UAAI2F,UAAU,CAACJ,SAAS9E,QAAT,IAAqB,EAAtB,EAA0B8C,KAA1B,CAAgC,GAAhC,CAAd;AACA,aAAOoC,QAAQjD,MAAR,IAAkB,EAAE6C,SAASpF,IAAT,GAAgBwF,QAAQC,KAAR,EAAlB,CAAzB;AACA,UAAI,CAACL,SAASpF,IAAd,EAAoBoF,SAASpF,IAAT,GAAgB,EAAhB;AACpB,UAAI,CAACoF,SAASlF,QAAd,EAAwBkF,SAASlF,QAAT,GAAoB,EAApB;AACxB,UAAIsF,QAAQ,CAAR,MAAe,EAAnB,EAAuBA,QAAQzB,OAAR,CAAgB,EAAhB;AACvB,UAAIyB,QAAQjD,MAAR,GAAiB,CAArB,EAAwBiD,QAAQzB,OAAR,CAAgB,EAAhB;AACxBuB,aAAOhF,QAAP,GAAkBkF,QAAQxB,IAAR,CAAa,GAAb,CAAlB;AACD,KARD,MAQO;AACLsB,aAAOhF,QAAP,GAAkB8E,SAAS9E,QAA3B;AACD;AACDgF,WAAOlF,MAAP,GAAgBgF,SAAShF,MAAzB;AACAkF,WAAOjF,KAAP,GAAe+E,SAAS/E,KAAxB;AACAiF,WAAOtF,IAAP,GAAcoF,SAASpF,IAAT,IAAiB,EAA/B;AACAsF,WAAOvF,IAAP,GAAcqF,SAASrF,IAAvB;AACAuF,WAAOpF,QAAP,GAAkBkF,SAASlF,QAAT,IAAqBkF,SAASpF,IAAhD;AACAsF,WAAOrF,IAAP,GAAcmF,SAASnF,IAAvB;AACA;AACA,QAAIqF,OAAOhF,QAAP,IAAmBgF,OAAOlF,MAA9B,EAAsC;AACpC,UAAIiE,IAAIiB,OAAOhF,QAAP,IAAmB,EAA3B;AACA,UAAI6D,IAAImB,OAAOlF,MAAP,IAAiB,EAAzB;AACAkF,aAAO/E,IAAP,GAAc8D,IAAIF,CAAlB;AACD;AACDmB,WAAOxF,OAAP,GAAiBwF,OAAOxF,OAAP,IAAkBsF,SAAStF,OAA5C;AACAwF,WAAO9E,IAAP,GAAc8E,OAAO5F,MAAP,EAAd;AACA,WAAO4F,MAAP;AACD;;AAED,MAAII,cAAeJ,OAAOhF,QAAP,IAAmBgF,OAAOhF,QAAP,CAAgB4E,MAAhB,CAAuB,CAAvB,MAA8B,GAApE;AAAA,MACIS,WACIP,SAASpF,IAAT,IACAoF,SAAS9E,QAAT,IAAqB8E,SAAS9E,QAAT,CAAkB4E,MAAlB,CAAyB,CAAzB,MAAgC,GAH7D;AAAA,MAKIU,aAAcD,YAAYD,WAAZ,IACCJ,OAAOtF,IAAP,IAAeoF,SAAS9E,QAN3C;AAAA,MAOIuF,gBAAgBD,UAPpB;AAAA,MAQIE,UAAUR,OAAOhF,QAAP,IAAmBgF,OAAOhF,QAAP,CAAgB8C,KAAhB,CAAsB,GAAtB,CAAnB,IAAiD,EAR/D;AAAA,MASIoC,UAAUJ,SAAS9E,QAAT,IAAqB8E,SAAS9E,QAAT,CAAkB8C,KAAlB,CAAwB,GAAxB,CAArB,IAAqD,EATnE;AAAA,MAUI2C,YAAYT,OAAOzF,QAAP,IAAmB,CAACyB,gBAAgBgE,OAAOzF,QAAvB,CAVpC;;AAYA;AACA;AACA;AACA;AACA;AACA,MAAIkG,SAAJ,EAAe;AACbT,WAAOpF,QAAP,GAAkB,EAAlB;AACAoF,WAAOrF,IAAP,GAAc,IAAd;AACA,QAAIqF,OAAOtF,IAAX,EAAiB;AACf,UAAI8F,QAAQ,CAAR,MAAe,EAAnB,EAAuBA,QAAQ,CAAR,IAAaR,OAAOtF,IAApB,CAAvB,KACK8F,QAAQ/B,OAAR,CAAgBuB,OAAOtF,IAAvB;AACN;AACDsF,WAAOtF,IAAP,GAAc,EAAd;AACA,QAAIoF,SAASvF,QAAb,EAAuB;AACrBuF,eAASlF,QAAT,GAAoB,IAApB;AACAkF,eAASnF,IAAT,GAAgB,IAAhB;AACA,UAAImF,SAASpF,IAAb,EAAmB;AACjB,YAAIwF,QAAQ,CAAR,MAAe,EAAnB,EAAuBA,QAAQ,CAAR,IAAaJ,SAASpF,IAAtB,CAAvB,KACKwF,QAAQzB,OAAR,CAAgBqB,SAASpF,IAAzB;AACN;AACDoF,eAASpF,IAAT,GAAgB,IAAhB;AACD;AACD4F,iBAAaA,eAAeJ,QAAQ,CAAR,MAAe,EAAf,IAAqBM,QAAQ,CAAR,MAAe,EAAnD,CAAb;AACD;;AAED,MAAIH,QAAJ,EAAc;AACZ;AACAL,WAAOtF,IAAP,GAAeoF,SAASpF,IAAT,IAAiBoF,SAASpF,IAAT,KAAkB,EAApC,GACAoF,SAASpF,IADT,GACgBsF,OAAOtF,IADrC;AAEAsF,WAAOpF,QAAP,GAAmBkF,SAASlF,QAAT,IAAqBkF,SAASlF,QAAT,KAAsB,EAA5C,GACAkF,SAASlF,QADT,GACoBoF,OAAOpF,QAD7C;AAEAoF,WAAOlF,MAAP,GAAgBgF,SAAShF,MAAzB;AACAkF,WAAOjF,KAAP,GAAe+E,SAAS/E,KAAxB;AACAyF,cAAUN,OAAV;AACA;AACD,GAVD,MAUO,IAAIA,QAAQjD,MAAZ,EAAoB;AACzB;AACA;AACA,QAAI,CAACuD,OAAL,EAAcA,UAAU,EAAV;AACdA,YAAQE,GAAR;AACAF,cAAUA,QAAQjF,MAAR,CAAe2E,OAAf,CAAV;AACAF,WAAOlF,MAAP,GAAgBgF,SAAShF,MAAzB;AACAkF,WAAOjF,KAAP,GAAe+E,SAAS/E,KAAxB;AACD,GARM,MAQA,IAAI,CAAC4F,kBAAkBb,SAAShF,MAA3B,CAAL,EAAyC;AAC9C;AACA;AACA;AACA,QAAI2F,SAAJ,EAAe;AACbT,aAAOpF,QAAP,GAAkBoF,OAAOtF,IAAP,GAAc8F,QAAQL,KAAR,EAAhC;AACA;AACA;AACA;AACA,UAAIS,aAAaZ,OAAOtF,IAAP,IAAesF,OAAOtF,IAAP,CAAY4C,OAAZ,CAAoB,GAApB,IAA2B,CAA1C,GACA0C,OAAOtF,IAAP,CAAYoD,KAAZ,CAAkB,GAAlB,CADA,GACyB,KAD1C;AAEA,UAAI8C,UAAJ,EAAgB;AACdZ,eAAOvF,IAAP,GAAcmG,WAAWT,KAAX,EAAd;AACAH,eAAOtF,IAAP,GAAcsF,OAAOpF,QAAP,GAAkBgG,WAAWT,KAAX,EAAhC;AACD;AACF;AACDH,WAAOlF,MAAP,GAAgBgF,SAAShF,MAAzB;AACAkF,WAAOjF,KAAP,GAAe+E,SAAS/E,KAAxB;AACA;AACA,QAAI,CAAC8F,OAAOb,OAAOhF,QAAd,CAAD,IAA4B,CAAC6F,OAAOb,OAAOlF,MAAd,CAAjC,EAAwD;AACtDkF,aAAO/E,IAAP,GAAc,CAAC+E,OAAOhF,QAAP,GAAkBgF,OAAOhF,QAAzB,GAAoC,EAArC,KACCgF,OAAOlF,MAAP,GAAgBkF,OAAOlF,MAAvB,GAAgC,EADjC,CAAd;AAED;AACDkF,WAAO9E,IAAP,GAAc8E,OAAO5F,MAAP,EAAd;AACA,WAAO4F,MAAP;AACD;;AAED,MAAI,CAACQ,QAAQvD,MAAb,EAAqB;AACnB;AACA;AACA+C,WAAOhF,QAAP,GAAkB,IAAlB;AACA;AACA,QAAIgF,OAAOlF,MAAX,EAAmB;AACjBkF,aAAO/E,IAAP,GAAc,MAAM+E,OAAOlF,MAA3B;AACD,KAFD,MAEO;AACLkF,aAAO/E,IAAP,GAAc,IAAd;AACD;AACD+E,WAAO9E,IAAP,GAAc8E,OAAO5F,MAAP,EAAd;AACA,WAAO4F,MAAP;AACD;;AAED;AACA;AACA;AACA,MAAIc,OAAON,QAAQ/C,KAAR,CAAc,CAAC,CAAf,EAAkB,CAAlB,CAAX;AACA,MAAIsD,mBACA,CAACf,OAAOtF,IAAP,IAAeoF,SAASpF,IAAzB,MAAmCoG,SAAS,GAAT,IAAgBA,SAAS,IAA5D,KACAA,SAAS,EAFb;;AAIA;AACA;AACA,MAAIE,KAAK,CAAT;AACA,OAAK,IAAI5D,IAAIoD,QAAQvD,MAArB,EAA6BG,KAAK,CAAlC,EAAqCA,GAArC,EAA0C;AACxC0D,WAAON,QAAQpD,CAAR,CAAP;AACA,QAAI0D,QAAQ,GAAZ,EAAiB;AACfN,cAAQS,MAAR,CAAe7D,CAAf,EAAkB,CAAlB;AACD,KAFD,MAEO,IAAI0D,SAAS,IAAb,EAAmB;AACxBN,cAAQS,MAAR,CAAe7D,CAAf,EAAkB,CAAlB;AACA4D;AACD,KAHM,MAGA,IAAIA,EAAJ,EAAQ;AACbR,cAAQS,MAAR,CAAe7D,CAAf,EAAkB,CAAlB;AACA4D;AACD;AACF;;AAED;AACA,MAAI,CAACV,UAAD,IAAe,CAACC,aAApB,EAAmC;AACjC,WAAOS,IAAP,EAAaA,EAAb,EAAiB;AACfR,cAAQ/B,OAAR,CAAgB,IAAhB;AACD;AACF;;AAED,MAAI6B,cAAcE,QAAQ,CAAR,MAAe,EAA7B,KACC,CAACA,QAAQ,CAAR,CAAD,IAAeA,QAAQ,CAAR,EAAWZ,MAAX,CAAkB,CAAlB,MAAyB,GADzC,CAAJ,EACmD;AACjDY,YAAQ/B,OAAR,CAAgB,EAAhB;AACD;;AAED,MAAIsC,oBAAqBP,QAAQ9B,IAAR,CAAa,GAAb,EAAkB1B,MAAlB,CAAyB,CAAC,CAA1B,MAAiC,GAA1D,EAAgE;AAC9DwD,YAAQhC,IAAR,CAAa,EAAb;AACD;;AAED,MAAI0C,aAAaV,QAAQ,CAAR,MAAe,EAAf,IACZA,QAAQ,CAAR,KAAcA,QAAQ,CAAR,EAAWZ,MAAX,CAAkB,CAAlB,MAAyB,GAD5C;;AAGA;AACA,MAAIa,SAAJ,EAAe;AACbT,WAAOpF,QAAP,GAAkBoF,OAAOtF,IAAP,GAAcwG,aAAa,EAAb,GACAV,QAAQvD,MAAR,GAAiBuD,QAAQL,KAAR,EAAjB,GAAmC,EADnE;AAEA;AACA;AACA;AACA,QAAIS,aAAaZ,OAAOtF,IAAP,IAAesF,OAAOtF,IAAP,CAAY4C,OAAZ,CAAoB,GAApB,IAA2B,CAA1C,GACA0C,OAAOtF,IAAP,CAAYoD,KAAZ,CAAkB,GAAlB,CADA,GACyB,KAD1C;AAEA,QAAI8C,UAAJ,EAAgB;AACdZ,aAAOvF,IAAP,GAAcmG,WAAWT,KAAX,EAAd;AACAH,aAAOtF,IAAP,GAAcsF,OAAOpF,QAAP,GAAkBgG,WAAWT,KAAX,EAAhC;AACD;AACF;;AAEDG,eAAaA,cAAeN,OAAOtF,IAAP,IAAe8F,QAAQvD,MAAnD;;AAEA,MAAIqD,cAAc,CAACY,UAAnB,EAA+B;AAC7BV,YAAQ/B,OAAR,CAAgB,EAAhB;AACD;;AAED,MAAI,CAAC+B,QAAQvD,MAAb,EAAqB;AACnB+C,WAAOhF,QAAP,GAAkB,IAAlB;AACAgF,WAAO/E,IAAP,GAAc,IAAd;AACD,GAHD,MAGO;AACL+E,WAAOhF,QAAP,GAAkBwF,QAAQ9B,IAAR,CAAa,GAAb,CAAlB;AACD;;AAED;AACA,MAAI,CAACmC,OAAOb,OAAOhF,QAAd,CAAD,IAA4B,CAAC6F,OAAOb,OAAOlF,MAAd,CAAjC,EAAwD;AACtDkF,WAAO/E,IAAP,GAAc,CAAC+E,OAAOhF,QAAP,GAAkBgF,OAAOhF,QAAzB,GAAoC,EAArC,KACCgF,OAAOlF,MAAP,GAAgBkF,OAAOlF,MAAvB,GAAgC,EADjC,CAAd;AAED;AACDkF,SAAOvF,IAAP,GAAcqF,SAASrF,IAAT,IAAiBuF,OAAOvF,IAAtC;AACAuF,SAAOxF,OAAP,GAAiBwF,OAAOxF,OAAP,IAAkBsF,SAAStF,OAA5C;AACAwF,SAAO9E,IAAP,GAAc8E,OAAO5F,MAAP,EAAd;AACA,SAAO4F,MAAP;AACD,CAtQD;;AAwQA1F,IAAIiC,SAAJ,CAAcoB,SAAd,GAA0B,YAAW;AACnC,MAAIjD,OAAO,KAAKA,IAAhB;AACA,MAAIC,OAAOS,YAAYyB,IAAZ,CAAiBnC,IAAjB,CAAX;AACA,MAAIC,IAAJ,EAAU;AACRA,WAAOA,KAAK,CAAL,CAAP;AACA,QAAIA,SAAS,GAAb,EAAkB;AAChB,WAAKA,IAAL,GAAYA,KAAKqC,MAAL,CAAY,CAAZ,CAAZ;AACD;AACDtC,WAAOA,KAAKsC,MAAL,CAAY,CAAZ,EAAetC,KAAKuC,MAAL,GAActC,KAAKsC,MAAlC,CAAP;AACD;AACD,MAAIvC,IAAJ,EAAU,KAAKE,QAAL,GAAgBF,IAAhB;AACX,CAXD;;AAaA,SAAS8B,QAAT,CAAkB2E,GAAlB,EAAuB;AACrB,SAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AAED,SAAS9E,QAAT,CAAkB8E,GAAlB,EAAuB;AACrB,SAAO,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAf,IAA2BA,QAAQ,IAA1C;AACD;;AAED,SAASN,MAAT,CAAgBM,GAAhB,EAAqB;AACnB,SAAOA,QAAQ,IAAf;AACD;AACD,SAASR,iBAAT,CAA2BQ,GAA3B,EAAgC;AAC9B,SAAQA,OAAO,IAAf;AACD","file":"url.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n"]}