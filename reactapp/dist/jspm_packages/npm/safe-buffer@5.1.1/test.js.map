{"version":3,"sources":["../../../../jspm_packages/npm/safe-buffer@5.1.1/test.js"],"names":["Buffer","test","require","SafeBuffer","t","deepEqual","Uint8Array","equal","isBuffer","notOk","end","from","i","expected1","fill","alloc","expected2","buf","allocUnsafe","length","plan","throws","NaN","Infinity"],"mappings":";;;;AAAA;AACA,CAAC,UAASA,MAAT,EAAiB;AAChB,MAAIC,OAAOC,QAAQ,MAAR,CAAX;AACA,MAAIC,aAAaD,QAAQ,SAAR,EAAmBF,MAApC;AACAC,OAAK,8CAAL,EAAqD,UAASG,CAAT,EAAY;AAC/DA,MAAEC,SAAF,CAAY,IAAIF,UAAJ,CAAe,KAAf,CAAZ,EAAmC,IAAIH,MAAJ,CAAW,KAAX,CAAnC;AACAI,MAAEC,SAAF,CAAY,IAAIF,UAAJ,CAAe,KAAf,EAAsB,MAAtB,CAAZ,EAA2C,IAAIH,MAAJ,CAAW,KAAX,EAAkB,MAAlB,CAA3C;AACAI,MAAEC,SAAF,CAAY,IAAIF,UAAJ,CAAe,QAAf,EAAyB,KAAzB,CAAZ,EAA6C,IAAIH,MAAJ,CAAW,QAAX,EAAqB,KAArB,CAA7C;AACAI,MAAEC,SAAF,CAAY,IAAIF,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,CAAZ,EAAuC,IAAIH,MAAJ,CAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAX,CAAvC;AACAI,MAAEC,SAAF,CAAY,IAAIF,UAAJ,CAAe,IAAIG,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,CAAf,CAAZ,EAAuD,IAAIN,MAAJ,CAAW,IAAIM,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,CAAX,CAAvD;AACAF,MAAEG,KAAF,SAAeJ,WAAWK,QAA1B,GAAoC,UAApC;AACAJ,MAAEG,KAAF,CAAQJ,WAAWK,QAAX,CAAoB,IAAIL,UAAJ,CAAe,KAAf,CAApB,CAAR,EAAoD,IAApD;AACAC,MAAEG,KAAF,CAAQP,OAAOQ,QAAP,CAAgB,IAAIL,UAAJ,CAAe,KAAf,CAAhB,CAAR,EAAgD,IAAhD;AACAC,MAAEK,KAAF,CAAQN,WAAWK,QAAX,CAAoB,EAApB,CAAR;AACAJ,MAAEM,GAAF;AACD,GAXD;AAYAT,OAAK,6CAAL,EAAoD,UAASG,CAAT,EAAY;AAC9DA,MAAEC,SAAF,CAAYF,WAAWQ,IAAX,CAAgB,KAAhB,CAAZ,EAAoC,IAAIX,MAAJ,CAAW,KAAX,CAApC;AACAI,MAAEC,SAAF,CAAYF,WAAWQ,IAAX,CAAgB,KAAhB,EAAuB,MAAvB,CAAZ,EAA4C,IAAIX,MAAJ,CAAW,KAAX,EAAkB,MAAlB,CAA5C;AACAI,MAAEC,SAAF,CAAYF,WAAWQ,IAAX,CAAgB,QAAhB,EAA0B,KAA1B,CAAZ,EAA8C,IAAIX,MAAJ,CAAW,QAAX,EAAqB,KAArB,CAA9C;AACAI,MAAEC,SAAF,CAAYF,WAAWQ,IAAX,CAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAhB,CAAZ,EAAwC,IAAIX,MAAJ,CAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAX,CAAxC;AACAI,MAAEC,SAAF,CAAYF,WAAWQ,IAAX,CAAgB,IAAIL,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,CAAhB,CAAZ,EAAwD,IAAIN,MAAJ,CAAW,IAAIM,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,CAAX,CAAxD;AACAF,MAAEM,GAAF;AACD,GAPD;AAQAT,OAAK,oDAAL,EAA2D,UAASG,CAAT,EAAY;AACrE,SAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAC3B,UAAIC,YAAY,IAAIb,MAAJ,CAAW,IAAX,CAAhB;AACAa,gBAAUC,IAAV,CAAe,CAAf;AACAV,QAAEC,SAAF,CAAYF,WAAWY,KAAX,CAAiB,IAAjB,CAAZ,EAAoCF,SAApC;AACA,UAAIG,YAAY,IAAIhB,MAAJ,CAAW,OAAO,IAAlB,CAAhB;AACAgB,gBAAUF,IAAV,CAAe,CAAf;AACAV,QAAEC,SAAF,CAAYF,WAAWY,KAAX,CAAiB,OAAO,IAAxB,CAAZ,EAA2CC,SAA3C;AACD;AACDZ,MAAEM,GAAF;AACD,GAVD;AAWAT,OAAK,gCAAL,EAAuC,UAASG,CAAT,EAAY;AACjD,QAAIa,MAAMd,WAAWe,WAAX,CAAuB,GAAvB,CAAV;AACAd,MAAEG,KAAF,CAAQU,IAAIE,MAAZ,EAAoB,GAApB;AACAf,MAAEG,KAAF,CAAQJ,WAAWK,QAAX,CAAoBS,GAApB,CAAR,EAAkC,IAAlC;AACAb,MAAEG,KAAF,CAAQP,OAAOQ,QAAP,CAAgBS,GAAhB,CAAR,EAA8B,IAA9B;AACAb,MAAEM,GAAF;AACD,GAND;AAOAT,OAAK,4CAAL,EAAmD,UAASG,CAAT,EAAY;AAC7DA,MAAEgB,IAAF,CAAO,CAAP;AACAhB,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWQ,IAAX,CAAgB,CAAhB;AACD,KAFD;AAGAP,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWQ,IAAX,CAAgB,CAAC,CAAjB;AACD,KAFD;AAGAP,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWQ,IAAX,CAAgBW,GAAhB;AACD,KAFD;AAGAlB,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWQ,IAAX,CAAgBY,QAAhB;AACD,KAFD;AAGAnB,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWQ,IAAX,CAAgB,EAAhB;AACD,KAFD;AAGD,GAjBD;AAkBAV,OAAK,uDAAL,EAA8D,UAASG,CAAT,EAAY;AACxEA,MAAEgB,IAAF,CAAO,CAAP;AACAhB,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWe,WAAX,CAAuB,KAAvB;AACD,KAFD;AAGAd,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWe,WAAX,CAAuB,KAAvB,EAA8B,MAA9B;AACD,KAFD;AAGAd,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWe,WAAX,CAAuB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAvB;AACD,KAFD;AAGAd,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWe,WAAX,CAAuB,EAAvB;AACD,KAFD;AAGD,GAdD;AAeAjB,OAAK,iDAAL,EAAwD,UAASG,CAAT,EAAY;AAClEA,MAAEgB,IAAF,CAAO,CAAP;AACAhB,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWY,KAAX,CAAiB,KAAjB;AACD,KAFD;AAGAX,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWY,KAAX,CAAiB,KAAjB,EAAwB,MAAxB;AACD,KAFD;AAGAX,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWY,KAAX,CAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAjB;AACD,KAFD;AAGAX,MAAEiB,MAAF,CAAS,YAAW;AAClBlB,iBAAWY,KAAX,CAAiB,EAAjB;AACD,KAFD;AAGD,GAdD;AAeD,CAzFD,EAyFGb,QAAQ,QAAR,EAAkBF,MAzFrB","file":"test.js","sourcesContent":["/* */ \n(function(Buffer) {\n  var test = require('tape');\n  var SafeBuffer = require('./index').Buffer;\n  test('new SafeBuffer(value) works just like Buffer', function(t) {\n    t.deepEqual(new SafeBuffer('hey'), new Buffer('hey'));\n    t.deepEqual(new SafeBuffer('hey', 'utf8'), new Buffer('hey', 'utf8'));\n    t.deepEqual(new SafeBuffer('686579', 'hex'), new Buffer('686579', 'hex'));\n    t.deepEqual(new SafeBuffer([1, 2, 3]), new Buffer([1, 2, 3]));\n    t.deepEqual(new SafeBuffer(new Uint8Array([1, 2, 3])), new Buffer(new Uint8Array([1, 2, 3])));\n    t.equal(typeof SafeBuffer.isBuffer, 'function');\n    t.equal(SafeBuffer.isBuffer(new SafeBuffer('hey')), true);\n    t.equal(Buffer.isBuffer(new SafeBuffer('hey')), true);\n    t.notOk(SafeBuffer.isBuffer({}));\n    t.end();\n  });\n  test('SafeBuffer.from(value) converts to a Buffer', function(t) {\n    t.deepEqual(SafeBuffer.from('hey'), new Buffer('hey'));\n    t.deepEqual(SafeBuffer.from('hey', 'utf8'), new Buffer('hey', 'utf8'));\n    t.deepEqual(SafeBuffer.from('686579', 'hex'), new Buffer('686579', 'hex'));\n    t.deepEqual(SafeBuffer.from([1, 2, 3]), new Buffer([1, 2, 3]));\n    t.deepEqual(SafeBuffer.from(new Uint8Array([1, 2, 3])), new Buffer(new Uint8Array([1, 2, 3])));\n    t.end();\n  });\n  test('SafeBuffer.alloc(number) returns zeroed-out memory', function(t) {\n    for (var i = 0; i < 10; i++) {\n      var expected1 = new Buffer(1000);\n      expected1.fill(0);\n      t.deepEqual(SafeBuffer.alloc(1000), expected1);\n      var expected2 = new Buffer(1000 * 1000);\n      expected2.fill(0);\n      t.deepEqual(SafeBuffer.alloc(1000 * 1000), expected2);\n    }\n    t.end();\n  });\n  test('SafeBuffer.allocUnsafe(number)', function(t) {\n    var buf = SafeBuffer.allocUnsafe(100);\n    t.equal(buf.length, 100);\n    t.equal(SafeBuffer.isBuffer(buf), true);\n    t.equal(Buffer.isBuffer(buf), true);\n    t.end();\n  });\n  test('SafeBuffer.from() throws with number types', function(t) {\n    t.plan(5);\n    t.throws(function() {\n      SafeBuffer.from(0);\n    });\n    t.throws(function() {\n      SafeBuffer.from(-1);\n    });\n    t.throws(function() {\n      SafeBuffer.from(NaN);\n    });\n    t.throws(function() {\n      SafeBuffer.from(Infinity);\n    });\n    t.throws(function() {\n      SafeBuffer.from(99);\n    });\n  });\n  test('SafeBuffer.allocUnsafe() throws with non-number types', function(t) {\n    t.plan(4);\n    t.throws(function() {\n      SafeBuffer.allocUnsafe('hey');\n    });\n    t.throws(function() {\n      SafeBuffer.allocUnsafe('hey', 'utf8');\n    });\n    t.throws(function() {\n      SafeBuffer.allocUnsafe([1, 2, 3]);\n    });\n    t.throws(function() {\n      SafeBuffer.allocUnsafe({});\n    });\n  });\n  test('SafeBuffer.alloc() throws with non-number types', function(t) {\n    t.plan(4);\n    t.throws(function() {\n      SafeBuffer.alloc('hey');\n    });\n    t.throws(function() {\n      SafeBuffer.alloc('hey', 'utf8');\n    });\n    t.throws(function() {\n      SafeBuffer.alloc([1, 2, 3]);\n    });\n    t.throws(function() {\n      SafeBuffer.alloc({});\n    });\n  });\n})(require('buffer').Buffer);\n"]}