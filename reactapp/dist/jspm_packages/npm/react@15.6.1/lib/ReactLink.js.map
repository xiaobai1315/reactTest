{"version":3,"sources":["../../../../../jspm_packages/npm/react@15.6.1/lib/ReactLink.js"],"names":["ReactLink","value","requestChange","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;;AAQA,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,aAA1B,EAAyC;AACvC,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKC,aAAL,GAAqBA,aAArB;AACD;;AAEDC,OAAOC,OAAP,GAAiBJ,SAAjB","file":"ReactLink.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * ReactLink encapsulates a common pattern in which a component wants to modify\n * a prop received from its parent. ReactLink allows the parent to pass down a\n * value coupled with a callback that, when invoked, expresses an intent to\n * modify that value. For example:\n *\n * React.createClass({\n *   getInitialState: function() {\n *     return {value: ''};\n *   },\n *   render: function() {\n *     var valueLink = new ReactLink(this.state.value, this._handleValueChange);\n *     return <input valueLink={valueLink} />;\n *   },\n *   _handleValueChange: function(newValue) {\n *     this.setState({value: newValue});\n *   }\n * });\n *\n * We have provided some sugary mixins to make the creation and\n * consumption of ReactLink easier; see LinkedValueUtils and LinkedStateMixin.\n */\n\n/**\n * Deprecated: An an easy way to express two-way binding with React. \n * See https://facebook.github.io/react/docs/two-way-binding-helpers.html\n *\n * @param {*} value current value of the link\n * @param {function} requestChange callback to request a change\n */\n\nfunction ReactLink(value, requestChange) {\n  this.value = value;\n  this.requestChange = requestChange;\n}\n\nmodule.exports = ReactLink;"]}