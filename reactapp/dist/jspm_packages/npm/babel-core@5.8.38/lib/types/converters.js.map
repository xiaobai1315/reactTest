{"version":3,"sources":["../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/types/converters.js"],"names":["exports","__esModule","toComputedKey","toSequenceExpression","toKeyAlias","toIdentifier","toBindingIdentifierName","toStatement","toExpression","toBlock","valueToNode","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_interopRequireDefault","_lodashLangIsPlainObject","require","_lodashLangIsPlainObject2","_lodashLangIsNumber","_lodashLangIsNumber2","_lodashLangIsRegExp","_lodashLangIsRegExp2","_lodashLangIsString","_lodashLangIsString2","_traversal","_traversal2","_index","t","node","arguments","length","undefined","property","computed","isIdentifier","literal","name","nodes","scope","declars","bailed","result","convert","i","push","ensureLastUndefined","exprs","_arr","_i","isExpression","isExpressionStatement","expression","isVariableDeclaration","kind","_arr2","declarations","_i2","declar","bindings","getBindingIdentifiers","id","init","assignmentExpression","isIfStatement","consequent","identifier","alternate","conditionalExpression","test","isBlockStatement","body","isEmptyStatement","sequenceExpression","alias","uid","isLiteral","JSON","stringify","value","removeProperties","cloneDeep","replace","match","c","toUpperCase","isValidIdentifier","ignore","isStatement","mustHaveId","newType","isClass","isFunction","isAssignmentExpression","expressionStatement","Error","type","parent","Array","isArray","returnStatement","blockStatement","arrayExpression","map","props","nodeKey","objectExpression"],"mappings":"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","file":"converters.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\nexports.toComputedKey = toComputedKey;\nexports.toSequenceExpression = toSequenceExpression;\nexports.toKeyAlias = toKeyAlias;\nexports.toIdentifier = toIdentifier;\nexports.toBindingIdentifierName = toBindingIdentifierName;\nexports.toStatement = toStatement;\nexports.toExpression = toExpression;\nexports.toBlock = toBlock;\nexports.valueToNode = valueToNode;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _lodashLangIsPlainObject = require(\"lodash/lang/isPlainObject\");\n\nvar _lodashLangIsPlainObject2 = _interopRequireDefault(_lodashLangIsPlainObject);\n\nvar _lodashLangIsNumber = require(\"lodash/lang/isNumber\");\n\nvar _lodashLangIsNumber2 = _interopRequireDefault(_lodashLangIsNumber);\n\nvar _lodashLangIsRegExp = require(\"lodash/lang/isRegExp\");\n\nvar _lodashLangIsRegExp2 = _interopRequireDefault(_lodashLangIsRegExp);\n\nvar _lodashLangIsString = require(\"lodash/lang/isString\");\n\nvar _lodashLangIsString2 = _interopRequireDefault(_lodashLangIsString);\n\nvar _traversal = require(\"../traversal\");\n\nvar _traversal2 = _interopRequireDefault(_traversal);\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\n/**\n * [Please add a description.]\n */\n\nfunction toComputedKey(node) {\n  var key = arguments.length <= 1 || arguments[1] === undefined ? node.key || node.property : arguments[1];\n  return (function () {\n    if (!node.computed) {\n      if (t.isIdentifier(key)) key = t.literal(key.name);\n    }\n    return key;\n  })();\n}\n\n/**\n * Turn an array of statement `nodes` into a `SequenceExpression`.\n *\n * Variable declarations are turned into simple assignments and their\n * declarations hoisted to the top of the current scope.\n *\n * Expression statements are just resolved to their expression.\n */\n\nfunction toSequenceExpression(nodes, scope) {\n  var declars = [];\n  var bailed = false;\n\n  var result = convert(nodes);\n  if (bailed) return;\n\n  for (var i = 0; i < declars.length; i++) {\n    scope.push(declars[i]);\n  }\n\n  return result;\n\n  function convert(nodes) {\n    var ensureLastUndefined = false;\n    var exprs = [];\n\n    var _arr = nodes;\n    for (var _i = 0; _i < _arr.length; _i++) {\n      var node = _arr[_i];\n      if (t.isExpression(node)) {\n        exprs.push(node);\n      } else if (t.isExpressionStatement(node)) {\n        exprs.push(node.expression);\n      } else if (t.isVariableDeclaration(node)) {\n        if (node.kind !== \"var\") return bailed = true; // bailed\n\n        var _arr2 = node.declarations;\n        for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n          var declar = _arr2[_i2];\n          var bindings = t.getBindingIdentifiers(declar);\n          for (var key in bindings) {\n            declars.push({\n              kind: node.kind,\n              id: bindings[key]\n            });\n          }\n\n          if (declar.init) {\n            exprs.push(t.assignmentExpression(\"=\", declar.id, declar.init));\n          }\n        }\n\n        ensureLastUndefined = true;\n        continue;\n      } else if (t.isIfStatement(node)) {\n        var consequent = node.consequent ? convert([node.consequent]) : t.identifier(\"undefined\");\n        var alternate = node.alternate ? convert([node.alternate]) : t.identifier(\"undefined\");\n        if (!consequent || !alternate) return bailed = true;\n\n        exprs.push(t.conditionalExpression(node.test, consequent, alternate));\n      } else if (t.isBlockStatement(node)) {\n        exprs.push(convert(node.body));\n      } else if (t.isEmptyStatement(node)) {\n        // empty statement so ensure the last item is undefined if we're last\n        ensureLastUndefined = true;\n        continue;\n      } else {\n        // bailed, we can't turn this statement into an expression\n        return bailed = true;\n      }\n\n      ensureLastUndefined = false;\n    }\n\n    if (ensureLastUndefined) {\n      exprs.push(t.identifier(\"undefined\"));\n    }\n\n    //\n\n    if (exprs.length === 1) {\n      return exprs[0];\n    } else {\n      return t.sequenceExpression(exprs);\n    }\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction toKeyAlias(node) {\n  var key = arguments.length <= 1 || arguments[1] === undefined ? node.key : arguments[1];\n  return (function () {\n    var alias;\n\n    if (node.kind === \"method\") {\n      return toKeyAlias.uid++;\n    } else if (t.isIdentifier(key)) {\n      alias = key.name;\n    } else if (t.isLiteral(key)) {\n      alias = JSON.stringify(key.value);\n    } else {\n      alias = JSON.stringify(_traversal2[\"default\"].removeProperties(t.cloneDeep(key)));\n    }\n\n    if (node.computed) {\n      alias = \"[\" + alias + \"]\";\n    }\n\n    return alias;\n  })();\n}\n\ntoKeyAlias.uid = 0;\n\n/**\n * [Please add a description.]\n */\n\nfunction toIdentifier(name) {\n  if (t.isIdentifier(name)) return name.name;\n\n  name = name + \"\";\n\n  // replace all non-valid identifiers with dashes\n  name = name.replace(/[^a-zA-Z0-9$_]/g, \"-\");\n\n  // remove all dashes and numbers from start of name\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  // camel case\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!t.isValidIdentifier(name)) {\n    name = \"_\" + name;\n  }\n\n  return name || \"_\";\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction toBindingIdentifierName(name) {\n  name = toIdentifier(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n  return name;\n}\n\n/**\n * [Please add a description.]\n * @returns {Object|Boolean}\n */\n\nfunction toStatement(node, ignore) {\n  if (t.isStatement(node)) {\n    return node;\n  }\n\n  var mustHaveId = false;\n  var newType;\n\n  if (t.isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\";\n  } else if (t.isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\";\n  } else if (t.isAssignmentExpression(node)) {\n    return t.expressionStatement(node);\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(\"cannot turn \" + node.type + \" to a statement\");\n    }\n  }\n\n  node.type = newType;\n\n  return node;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction toExpression(node) {\n  if (t.isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  if (t.isClass(node)) {\n    node.type = \"ClassExpression\";\n  } else if (t.isFunction(node)) {\n    node.type = \"FunctionExpression\";\n  }\n\n  if (t.isExpression(node)) {\n    return node;\n  } else {\n    throw new Error(\"cannot turn \" + node.type + \" to an expression\");\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction toBlock(node, parent) {\n  if (t.isBlockStatement(node)) {\n    return node;\n  }\n\n  if (t.isEmptyStatement(node)) {\n    node = [];\n  }\n\n  if (!Array.isArray(node)) {\n    if (!t.isStatement(node)) {\n      if (t.isFunction(parent)) {\n        node = t.returnStatement(node);\n      } else {\n        node = t.expressionStatement(node);\n      }\n    }\n\n    node = [node];\n  }\n\n  return t.blockStatement(node);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction valueToNode(value) {\n  // undefined\n  if (value === undefined) {\n    return t.identifier(\"undefined\");\n  }\n\n  // null, booleans, strings, numbers, regexs\n  if (value === true || value === false || value === null || _lodashLangIsString2[\"default\"](value) || _lodashLangIsNumber2[\"default\"](value) || _lodashLangIsRegExp2[\"default\"](value)) {\n    return t.literal(value);\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    return t.arrayExpression(value.map(t.valueToNode));\n  }\n\n  // object\n  if (_lodashLangIsPlainObject2[\"default\"](value)) {\n    var props = [];\n    for (var key in value) {\n      var nodeKey;\n      if (t.isValidIdentifier(key)) {\n        nodeKey = t.identifier(key);\n      } else {\n        nodeKey = t.literal(key);\n      }\n      props.push(t.property(\"init\", nodeKey, t.valueToNode(value[key])));\n    }\n    return t.objectExpression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}"]}