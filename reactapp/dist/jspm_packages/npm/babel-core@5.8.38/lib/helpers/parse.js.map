{"version":3,"sources":["../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/helpers/parse.js"],"names":["exports","__esModule","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_babylon","require","babylon","code","opts","arguments","length","undefined","parseOpts","allowImportExportEverywhere","looseModules","allowReturnOutsideFunction","allowHashBang","ecmaVersion","strictMode","sourceType","locations","features","plugins","nonStandard","jsx","flow","parse","module"],"mappings":"AAAA;AACA;AACA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACA;;AAEA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,OAAOA,IAAIF,UAAf,EAA2B;AAAE,WAAOE,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIC,SAAS,EAAb,CAAiB,IAAID,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AAAE,YAAIG,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,GAA1C,CAAJ,EAAoDD,OAAOC,GAAP,IAAcF,IAAIE,GAAJ,CAAd;AAAyB;AAAE,KAACD,OAAO,SAAP,IAAoBD,GAApB,CAAyB,OAAOC,MAAP;AAAgB;AAAE;;AAEhR,IAAIM,WAAWC,QAAQ,SAAR,CAAf;;AAEA,IAAIC,UAAUV,wBAAwBQ,QAAxB,CAAd;;AAEA;;;;AAIAV,QAAQ,SAAR,IAAqB,UAAUa,IAAV,EAAgB;AACnC,MAAIC,OAAOC,UAAUC,MAAV,IAAoB,CAApB,IAAyBD,UAAU,CAAV,MAAiBE,SAA1C,GAAsD,EAAtD,GAA2DF,UAAU,CAAV,CAAtE;;AAEA,MAAIG,YAAY;AACdC,iCAA6BL,KAAKM,YADpB;AAEdC,gCAA4BP,KAAKM,YAFnB;AAGdE,mBAAe,IAHD;AAIdC,iBAAa,CAJC;AAKdC,gBAAYV,KAAKU,UALH;AAMdC,gBAAYX,KAAKW,UANH;AAOdC,eAAW,IAPG;AAQdC,cAAUb,KAAKa,QAAL,IAAiB,EARb;AASdC,aAASd,KAAKc,OAAL,IAAgB;AATX,GAAhB;;AAYA,MAAId,KAAKe,WAAT,EAAsB;AACpBX,cAAUU,OAAV,CAAkBE,GAAlB,GAAwB,IAAxB;AACAZ,cAAUU,OAAV,CAAkBG,IAAlB,GAAyB,IAAzB;AACD;;AAED,SAAOnB,QAAQoB,KAAR,CAAcnB,IAAd,EAAoBK,SAApB,CAAP;AACD,CArBD;;AAuBAe,OAAOjC,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"parse.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _babylon = require(\"babylon\");\n\nvar babylon = _interopRequireWildcard(_babylon);\n\n/**\n * Parse `code` with normalized options, collecting tokens and comments.\n */\n\nexports[\"default\"] = function (code) {\n  var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  var parseOpts = {\n    allowImportExportEverywhere: opts.looseModules,\n    allowReturnOutsideFunction: opts.looseModules,\n    allowHashBang: true,\n    ecmaVersion: 6,\n    strictMode: opts.strictMode,\n    sourceType: opts.sourceType,\n    locations: true,\n    features: opts.features || {},\n    plugins: opts.plugins || {}\n  };\n\n  if (opts.nonStandard) {\n    parseOpts.plugins.jsx = true;\n    parseOpts.plugins.flow = true;\n  }\n\n  return babylon.parse(code, parseOpts);\n};\n\nmodule.exports = exports[\"default\"];"]}