{"version":3,"sources":["../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/helpers/code-frame.js"],"names":["exports","__esModule","_interopRequireDefault","obj","_repeating","require","_repeating2","_jsTokens","_jsTokens2","_esutils","_esutils2","_chalk","_chalk2","lineNumbers","lines","defs","string","red","punctuator","bold","curly","green","parens","blue","square","yellow","keyword","cyan","number","magenta","regex","comment","grey","invalid","inverse","NEWLINE","getTokenType","match","token","matchToToken","type","isReservedWordES6","value","highlight","text","replace","_len","arguments","length","args","Array","_key","colorize","split","map","str","join","lineNumber","colNumber","opts","undefined","Math","max","highlighted","highlightCode","supportsColor","start","end","min","frame","slice","before","after","transform","params","line","width","reset","module"],"mappings":"AAAA;AACA;AACA;AACA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACA;;AAEA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIF,UAAX,GAAwBE,GAAxB,GAA8B,EAAE,WAAWA,GAAb,EAArC;AAA0D;;AAEjG,IAAIC,aAAaC,QAAQ,WAAR,CAAjB;;AAEA,IAAIC,cAAcJ,uBAAuBE,UAAvB,CAAlB;;AAEA,IAAIG,YAAYF,QAAQ,WAAR,CAAhB;;AAEA,IAAIG,aAAaN,uBAAuBK,SAAvB,CAAjB;;AAEA,IAAIE,WAAWJ,QAAQ,SAAR,CAAf;;AAEA,IAAIK,YAAYR,uBAAuBO,QAAvB,CAAhB;;AAEA,IAAIE,SAASN,QAAQ,OAAR,CAAb;;AAEA,IAAIO,UAAUV,uBAAuBS,MAAvB,CAAd;;AAEA,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAOA,KAAP;AACD;;AAED;;;;AAIA,IAAIC,OAAO;AACTC,UAAQJ,QAAQ,SAAR,EAAmBK,GADlB;AAETC,cAAYN,QAAQ,SAAR,EAAmBO,IAFtB;AAGTC,SAAOR,QAAQ,SAAR,EAAmBS,KAHjB;AAITC,UAAQV,QAAQ,SAAR,EAAmBW,IAAnB,CAAwBJ,IAJvB;AAKTK,UAAQZ,QAAQ,SAAR,EAAmBa,MALlB;AAMTC,WAASd,QAAQ,SAAR,EAAmBe,IANnB;AAOTC,UAAQhB,QAAQ,SAAR,EAAmBiB,OAPlB;AAQTC,SAAOlB,QAAQ,SAAR,EAAmBiB,OARjB;AASTE,WAASnB,QAAQ,SAAR,EAAmBoB,IATnB;AAUTC,WAASrB,QAAQ,SAAR,EAAmBsB;AAVnB,CAAX;;AAaA;;;;AAIA,IAAIC,UAAU,yBAAd;;AAEA;;;;AAIA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,QAAQ9B,WAAW,SAAX,EAAsB+B,YAAtB,CAAmCF,KAAnC,CAAZ;AACA,MAAIC,MAAME,IAAN,KAAe,MAAf,IAAyB9B,UAAU,SAAV,EAAqBgB,OAArB,CAA6Be,iBAA7B,CAA+CH,MAAMI,KAArD,CAA7B,EAA0F;AACxF,WAAO,SAAP;AACD;;AAED,MAAIJ,MAAME,IAAN,KAAe,YAAnB,EAAiC;AAC/B,YAAQF,MAAMI,KAAd;AACE,WAAK,GAAL;AACA,WAAK,GAAL;AACE,eAAO,OAAP;AACF,WAAK,GAAL;AACA,WAAK,GAAL;AACE,eAAO,QAAP;AACF,WAAK,GAAL;AACA,WAAK,GAAL;AACE,eAAO,QAAP;AATJ;AAWD;;AAED,SAAOJ,MAAME,IAAb;AACD;;AAED;;;;AAIA,SAASG,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,SAAOA,KAAKC,OAAL,CAAarC,WAAW,SAAX,CAAb,EAAoC,YAAY;AACrD,SAAK,IAAIsC,OAAOC,UAAUC,MAArB,EAA6BC,OAAOC,MAAMJ,IAAN,CAApC,EAAiDK,OAAO,CAA7D,EAAgEA,OAAOL,IAAvE,EAA6EK,MAA7E,EAAqF;AACnFF,WAAKE,IAAL,IAAaJ,UAAUI,IAAV,CAAb;AACD;;AAED,QAAIX,OAAOJ,aAAaa,IAAb,CAAX;AACA,QAAIG,WAAWrC,KAAKyB,IAAL,CAAf;AACA,QAAIY,QAAJ,EAAc;AACZ,aAAOH,KAAK,CAAL,EAAQI,KAAR,CAAclB,OAAd,EAAuBmB,GAAvB,CAA2B,UAAUC,GAAV,EAAe;AAC/C,eAAOH,SAASG,GAAT,CAAP;AACD,OAFM,EAEJC,IAFI,CAEC,IAFD,CAAP;AAGD,KAJD,MAIO;AACL,aAAOP,KAAK,CAAL,CAAP;AACD;AACF,GAdM,CAAP;AAeD;;AAED;;;;AAIAjD,QAAQ,SAAR,IAAqB,UAAUc,KAAV,EAAiB2C,UAAjB,EAA6BC,SAA7B,EAAwC;AAC3D,MAAIC,OAAOZ,UAAUC,MAAV,IAAoB,CAApB,IAAyBD,UAAU,CAAV,MAAiBa,SAA1C,GAAsD,EAAtD,GAA2Db,UAAU,CAAV,CAAtE;;AAEAW,cAAYG,KAAKC,GAAL,CAASJ,SAAT,EAAoB,CAApB,CAAZ;;AAEA,MAAIK,cAAcJ,KAAKK,aAAL,IAAsBpD,QAAQ,SAAR,EAAmBqD,aAA3D;AACA,MAAIF,WAAJ,EAAiBjD,QAAQ6B,UAAU7B,KAAV,CAAR;;AAEjBA,UAAQA,MAAMuC,KAAN,CAAYlB,OAAZ,CAAR;;AAEA,MAAI+B,QAAQL,KAAKC,GAAL,CAASL,aAAa,CAAtB,EAAyB,CAAzB,CAAZ;AACA,MAAIU,MAAMN,KAAKO,GAAL,CAAStD,MAAMkC,MAAf,EAAuBS,aAAa,CAApC,CAAV;;AAEA,MAAI,CAACA,UAAD,IAAe,CAACC,SAApB,EAA+B;AAC7BQ,YAAQ,CAAR;AACAC,UAAMrD,MAAMkC,MAAZ;AACD;;AAED,MAAIqB,QAAQxD,YAAYC,MAAMwD,KAAN,CAAYJ,KAAZ,EAAmBC,GAAnB,CAAZ,EAAqC;AAC/CD,WAAOA,QAAQ,CADgC;AAE/CK,YAAQ,IAFuC;AAG/CC,WAAO,KAHwC;AAI/CC,eAAW,SAASA,SAAT,CAAmBC,MAAnB,EAA2B;AACpC,UAAIA,OAAO9C,MAAP,KAAkB6B,UAAtB,EAAkC;AAChC;AACD;;AAED,UAAIC,SAAJ,EAAe;AACbgB,eAAOC,IAAP,IAAe,OAAOD,OAAOH,MAAd,GAAuBjE,YAAY,SAAZ,EAAuB,GAAvB,EAA4BoE,OAAOE,KAAnC,CAAvB,GAAmEF,OAAOF,KAA1E,GAAkFlE,YAAY,SAAZ,EAAuB,GAAvB,EAA4BoD,YAAY,CAAxC,CAAlF,GAA+H,GAA9I;AACD;;AAEDgB,aAAOH,MAAP,GAAgBG,OAAOH,MAAP,CAAc1B,OAAd,CAAsB,IAAtB,EAA4B,GAA5B,CAAhB;AACD;AAd8C,GAArC,EAeTW,IAfS,CAeJ,IAfI,CAAZ;;AAiBA,MAAIO,WAAJ,EAAiB;AACf,WAAOnD,QAAQ,SAAR,EAAmBiE,KAAnB,CAAyBR,KAAzB,CAAP;AACD,GAFD,MAEO;AACL,WAAOA,KAAP;AACD;AACF,CAxCD;;AA0CAS,OAAO9E,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"code-frame.js","sourcesContent":["/* */ \n\"format cjs\";\n//import lineNumbers from \"line-numbers\";\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _repeating = require(\"repeating\");\n\nvar _repeating2 = _interopRequireDefault(_repeating);\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _jsTokens2 = _interopRequireDefault(_jsTokens);\n\nvar _esutils = require(\"esutils\");\n\nvar _esutils2 = _interopRequireDefault(_esutils);\n\nvar _chalk = require(\"chalk\");\n\nvar _chalk2 = _interopRequireDefault(_chalk);\n\nfunction lineNumbers(lines) {\n  return lines;\n}\n\n/**\n * Chalk styles for token types.\n */\n\nvar defs = {\n  string: _chalk2[\"default\"].red,\n  punctuator: _chalk2[\"default\"].bold,\n  curly: _chalk2[\"default\"].green,\n  parens: _chalk2[\"default\"].blue.bold,\n  square: _chalk2[\"default\"].yellow,\n  keyword: _chalk2[\"default\"].cyan,\n  number: _chalk2[\"default\"].magenta,\n  regex: _chalk2[\"default\"].magenta,\n  comment: _chalk2[\"default\"].grey,\n  invalid: _chalk2[\"default\"].inverse\n};\n\n/**\n * RegExp to test for newlines in terminal.\n */\n\nvar NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\n/**\n * Get the type of token, specifying punctuator type.\n */\n\nfunction getTokenType(match) {\n  var token = _jsTokens2[\"default\"].matchToToken(match);\n  if (token.type === \"name\" && _esutils2[\"default\"].keyword.isReservedWordES6(token.value)) {\n    return \"keyword\";\n  }\n\n  if (token.type === \"punctuator\") {\n    switch (token.value) {\n      case \"{\":\n      case \"}\":\n        return \"curly\";\n      case \"(\":\n      case \")\":\n        return \"parens\";\n      case \"[\":\n      case \"]\":\n        return \"square\";\n    }\n  }\n\n  return token.type;\n}\n\n/**\n * Highlight `text`.\n */\n\nfunction highlight(text) {\n  return text.replace(_jsTokens2[\"default\"], function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var type = getTokenType(args);\n    var colorize = defs[type];\n    if (colorize) {\n      return args[0].split(NEWLINE).map(function (str) {\n        return colorize(str);\n      }).join(\"\\n\");\n    } else {\n      return args[0];\n    }\n  });\n}\n\n/**\n * Create a code frame, adding line numbers, code highlighting, and pointing to a given position.\n */\n\nexports[\"default\"] = function (lines, lineNumber, colNumber) {\n  var opts = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n  colNumber = Math.max(colNumber, 0);\n\n  var highlighted = opts.highlightCode && _chalk2[\"default\"].supportsColor;\n  if (highlighted) lines = highlight(lines);\n\n  lines = lines.split(NEWLINE);\n\n  var start = Math.max(lineNumber - 3, 0);\n  var end = Math.min(lines.length, lineNumber + 3);\n\n  if (!lineNumber && !colNumber) {\n    start = 0;\n    end = lines.length;\n  }\n\n  var frame = lineNumbers(lines.slice(start, end), {\n    start: start + 1,\n    before: \"  \",\n    after: \" | \",\n    transform: function transform(params) {\n      if (params.number !== lineNumber) {\n        return;\n      }\n\n      if (colNumber) {\n        params.line += \"\\n\" + params.before + _repeating2[\"default\"](\" \", params.width) + params.after + _repeating2[\"default\"](\" \", colNumber - 1) + \"^\";\n      }\n\n      params.before = params.before.replace(/^./, \">\");\n    }\n  }).join(\"\\n\");\n\n  if (highlighted) {\n    return _chalk2[\"default\"].reset(frame);\n  } else {\n    return frame;\n  }\n};\n\nmodule.exports = exports[\"default\"];"]}