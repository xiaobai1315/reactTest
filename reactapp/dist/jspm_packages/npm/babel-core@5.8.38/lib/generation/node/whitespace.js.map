{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/generation/node/whitespace.js"],"names":["_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","_interopRequireDefault","_lodashLangIsBoolean","require","_lodashLangIsBoolean2","_lodashCollectionEach","_lodashCollectionEach2","_lodashCollectionMap","_lodashCollectionMap2","_types","t","crawl","node","state","arguments","length","undefined","isMemberExpression","object","computed","property","isBinary","isAssignmentExpression","left","right","isCallExpression","hasCall","callee","isFunction","hasFunction","isIdentifier","hasHelper","isHelper","name","isType","isLiteral","isObjectExpression","isArrayExpression","exports","nodes","AssignmentExpression","before","after","SwitchCase","parent","consequent","cases","LogicalExpression","Literal","value","CallExpression","VariableDeclaration","i","declarations","declar","enabled","id","init","IfStatement","isBlockStatement","Property","SpreadProperty","properties","list","ArrayExpression","elements","ObjectExpression","Function","Class","Loop","LabeledStatement","SwitchStatement","TryStatement","amounts","type","concat","FLIPPED_ALIAS_KEYS"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA,SAASA,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,OAAOA,IAAIC,UAAf,EAA2B;AAAE,WAAOD,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIE,SAAS,EAAb,CAAiB,IAAIF,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAIG,GAAT,IAAgBH,GAAhB,EAAqB;AAAE,YAAII,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,GAArC,EAA0CG,GAA1C,CAAJ,EAAoDD,OAAOC,GAAP,IAAcH,IAAIG,GAAJ,CAAd;AAAyB;AAAE,KAACD,OAAO,SAAP,IAAoBF,GAApB,CAAyB,OAAOE,MAAP;AAAgB;AAAE;;AAEhR;;AAEA,SAASM,sBAAT,CAAgCR,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAE,WAAWA,GAAb,EAArC;AAA0D;;AAEjG,IAAIS,uBAAuBC,QAAQ,uBAAR,CAA3B;;AAEA,IAAIC,wBAAwBH,uBAAuBC,oBAAvB,CAA5B;;AAEA,IAAIG,wBAAwBF,QAAQ,wBAAR,CAA5B;;AAEA,IAAIG,yBAAyBL,uBAAuBI,qBAAvB,CAA7B;;AAEA,IAAIE,uBAAuBJ,QAAQ,uBAAR,CAA3B;;AAEA,IAAIK,wBAAwBP,uBAAuBM,oBAAvB,CAA5B;;AAEA,IAAIE,SAASN,QAAQ,aAAR,CAAb;;AAEA,IAAIO,IAAIlB,wBAAwBiB,MAAxB,CAAR;;AAEA;;;;;;;;AAQA,SAASE,KAAT,CAAeC,IAAf,EAAqB;AACnB,MAAIC,QAAQC,UAAUC,MAAV,IAAoB,CAApB,IAAyBD,UAAU,CAAV,MAAiBE,SAA1C,GAAsD,EAAtD,GAA2DF,UAAU,CAAV,CAAvE;;AAEA,MAAIJ,EAAEO,kBAAF,CAAqBL,IAArB,CAAJ,EAAgC;AAC9BD,UAAMC,KAAKM,MAAX,EAAmBL,KAAnB;AACA,QAAID,KAAKO,QAAT,EAAmBR,MAAMC,KAAKQ,QAAX,EAAqBP,KAArB;AACpB,GAHD,MAGO,IAAIH,EAAEW,QAAF,CAAWT,IAAX,KAAoBF,EAAEY,sBAAF,CAAyBV,IAAzB,CAAxB,EAAwD;AAC7DD,UAAMC,KAAKW,IAAX,EAAiBV,KAAjB;AACAF,UAAMC,KAAKY,KAAX,EAAkBX,KAAlB;AACD,GAHM,MAGA,IAAIH,EAAEe,gBAAF,CAAmBb,IAAnB,CAAJ,EAA8B;AACnCC,UAAMa,OAAN,GAAgB,IAAhB;AACAf,UAAMC,KAAKe,MAAX,EAAmBd,KAAnB;AACD,GAHM,MAGA,IAAIH,EAAEkB,UAAF,CAAahB,IAAb,CAAJ,EAAwB;AAC7BC,UAAMgB,WAAN,GAAoB,IAApB;AACD,GAFM,MAEA,IAAInB,EAAEoB,YAAF,CAAelB,IAAf,CAAJ,EAA0B;AAC/BC,UAAMkB,SAAN,GAAkBlB,MAAMkB,SAAN,IAAmBC,SAASpB,KAAKe,MAAd,CAArC;AACD;;AAED,SAAOd,KAAP;AACD;;AAED;;;;AAIA,SAASmB,QAAT,CAAkBpB,IAAlB,EAAwB;AACtB,MAAIF,EAAEO,kBAAF,CAAqBL,IAArB,CAAJ,EAAgC;AAC9B,WAAOoB,SAASpB,KAAKM,MAAd,KAAyBc,SAASpB,KAAKQ,QAAd,CAAhC;AACD,GAFD,MAEO,IAAIV,EAAEoB,YAAF,CAAelB,IAAf,CAAJ,EAA0B;AAC/B,WAAOA,KAAKqB,IAAL,KAAc,SAAd,IAA2BrB,KAAKqB,IAAL,CAAU,CAAV,MAAiB,GAAnD;AACD,GAFM,MAEA,IAAIvB,EAAEe,gBAAF,CAAmBb,IAAnB,CAAJ,EAA8B;AACnC,WAAOoB,SAASpB,KAAKe,MAAd,CAAP;AACD,GAFM,MAEA,IAAIjB,EAAEW,QAAF,CAAWT,IAAX,KAAoBF,EAAEY,sBAAF,CAAyBV,IAAzB,CAAxB,EAAwD;AAC7D,WAAOF,EAAEoB,YAAF,CAAelB,KAAKW,IAApB,KAA6BS,SAASpB,KAAKW,IAAd,CAA7B,IAAoDS,SAASpB,KAAKY,KAAd,CAA3D;AACD,GAFM,MAEA;AACL,WAAO,KAAP;AACD;AACF;;AAED;;;;AAIA,SAASU,MAAT,CAAgBtB,IAAhB,EAAsB;AACpB,SAAOF,EAAEyB,SAAF,CAAYvB,IAAZ,KAAqBF,EAAE0B,kBAAF,CAAqBxB,IAArB,CAArB,IAAmDF,EAAE2B,iBAAF,CAAoBzB,IAApB,CAAnD,IAAgFF,EAAEoB,YAAF,CAAelB,IAAf,CAAhF,IAAwGF,EAAEO,kBAAF,CAAqBL,IAArB,CAA/G;AACD;;AAED;;;;AAIA0B,QAAQC,KAAR,GAAgB;;AAEd;;;;AAIAC,wBAAsB,SAASA,oBAAT,CAA8B5B,IAA9B,EAAoC;AACxD,QAAIC,QAAQF,MAAMC,KAAKY,KAAX,CAAZ;AACA,QAAIX,MAAMa,OAAN,IAAiBb,MAAMkB,SAAvB,IAAoClB,MAAMgB,WAA9C,EAA2D;AACzD,aAAO;AACLY,gBAAQ5B,MAAMgB,WADT;AAELa,eAAO;AAFF,OAAP;AAID;AACF,GAda;;AAgBd;;;;AAIAC,cAAY,SAASA,UAAT,CAAoB/B,IAApB,EAA0BgC,MAA1B,EAAkC;AAC5C,WAAO;AACLH,cAAQ7B,KAAKiC,UAAL,CAAgB9B,MAAhB,IAA0B6B,OAAOE,KAAP,CAAa,CAAb,MAAoBlC;AADjD,KAAP;AAGD,GAxBa;;AA0Bd;;;;AAIAmC,qBAAmB,SAASA,iBAAT,CAA2BnC,IAA3B,EAAiC;AAClD,QAAIF,EAAEkB,UAAF,CAAahB,KAAKW,IAAlB,KAA2Bb,EAAEkB,UAAF,CAAahB,KAAKY,KAAlB,CAA/B,EAAyD;AACvD,aAAO;AACLkB,eAAO;AADF,OAAP;AAGD;AACF,GApCa;;AAsCd;;;;AAIAM,WAAS,SAASA,OAAT,CAAiBpC,IAAjB,EAAuB;AAC9B,QAAIA,KAAKqC,KAAL,KAAe,YAAnB,EAAiC;AAC/B,aAAO;AACLP,eAAO;AADF,OAAP;AAGD;AACF,GAhDa;;AAkDd;;;;AAIAQ,kBAAgB,SAASA,cAAT,CAAwBtC,IAAxB,EAA8B;AAC5C,QAAIF,EAAEkB,UAAF,CAAahB,KAAKe,MAAlB,KAA6BK,SAASpB,IAAT,CAAjC,EAAiD;AAC/C,aAAO;AACL6B,gBAAQ,IADH;AAELC,eAAO;AAFF,OAAP;AAID;AACF,GA7Da;;AA+Dd;;;;AAIAS,uBAAqB,SAASA,mBAAT,CAA6BvC,IAA7B,EAAmC;AACtD,SAAK,IAAIwC,IAAI,CAAb,EAAgBA,IAAIxC,KAAKyC,YAAL,CAAkBtC,MAAtC,EAA8CqC,GAA9C,EAAmD;AACjD,UAAIE,SAAS1C,KAAKyC,YAAL,CAAkBD,CAAlB,CAAb;;AAEA,UAAIG,UAAUvB,SAASsB,OAAOE,EAAhB,KAAuB,CAACtB,OAAOoB,OAAOG,IAAd,CAAtC;AACA,UAAI,CAACF,OAAL,EAAc;AACZ,YAAI1C,QAAQF,MAAM2C,OAAOG,IAAb,CAAZ;AACAF,kBAAUvB,SAASsB,OAAOG,IAAhB,KAAyB5C,MAAMa,OAA/B,IAA0Cb,MAAMgB,WAA1D;AACD;;AAED,UAAI0B,OAAJ,EAAa;AACX,eAAO;AACLd,kBAAQ,IADH;AAELC,iBAAO;AAFF,SAAP;AAID;AACF;AACF,GApFa;;AAsFd;;;;AAIAgB,eAAa,SAASA,WAAT,CAAqB9C,IAArB,EAA2B;AACtC,QAAIF,EAAEiD,gBAAF,CAAmB/C,KAAKiC,UAAxB,CAAJ,EAAyC;AACvC,aAAO;AACLJ,gBAAQ,IADH;AAELC,eAAO;AAFF,OAAP;AAID;AACF;AAjGa,CAAhB;;AAoGA;;;;AAIAJ,QAAQC,KAAR,CAAcqB,QAAd,GAAyBtB,QAAQC,KAAR,CAAcsB,cAAd,GAA+B,UAAUjD,IAAV,EAAgBgC,MAAhB,EAAwB;AAC9E,MAAIA,OAAOkB,UAAP,CAAkB,CAAlB,MAAyBlD,IAA7B,EAAmC;AACjC,WAAO;AACL6B,cAAQ;AADH,KAAP;AAGD;AACF,CAND;;AAQA;;;;AAIAH,QAAQyB,IAAR,GAAe;;AAEb;;;;AAIAZ,uBAAqB,SAASA,mBAAT,CAA6BvC,IAA7B,EAAmC;AACtD,WAAOJ,sBAAsB,SAAtB,EAAiCI,KAAKyC,YAAtC,EAAoD,MAApD,CAAP;AACD,GARY;;AAUb;;;;AAIAW,mBAAiB,SAASA,eAAT,CAAyBpD,IAAzB,EAA+B;AAC9C,WAAOA,KAAKqD,QAAZ;AACD,GAhBY;;AAkBb;;;;AAIAC,oBAAkB,SAASA,gBAAT,CAA0BtD,IAA1B,EAAgC;AAChD,WAAOA,KAAKkD,UAAZ;AACD;AAxBY,CAAf;;AA2BA;;;;AAIAxD,uBAAuB,SAAvB,EAAkC;AAChC6D,YAAU,IADsB;AAEhCC,SAAO,IAFyB;AAGhCC,QAAM,IAH0B;AAIhCC,oBAAkB,IAJc;AAKhCC,mBAAiB,IALe;AAMhCC,gBAAc;AANkB,CAAlC,EAOG,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AAC1B,MAAItE,sBAAsB,SAAtB,EAAiCqE,OAAjC,CAAJ,EAA+C;AAC7CA,cAAU,EAAE/B,OAAO+B,OAAT,EAAkBhC,QAAQgC,OAA1B,EAAV;AACD;;AAEDnE,yBAAuB,SAAvB,EAAkC,CAACoE,IAAD,EAAOC,MAAP,CAAcjE,EAAEkE,kBAAF,CAAqBF,IAArB,KAA8B,EAA5C,CAAlC,EAAmF,UAAUA,IAAV,EAAgB;AACjGpC,YAAQC,KAAR,CAAcmC,IAAd,IAAsB,YAAY;AAChC,aAAOD,OAAP;AACD,KAFD;AAGD,GAJD;AAKD,CAjBD","file":"whitespace.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _lodashLangIsBoolean = require(\"lodash/lang/isBoolean\");\n\nvar _lodashLangIsBoolean2 = _interopRequireDefault(_lodashLangIsBoolean);\n\nvar _lodashCollectionEach = require(\"lodash/collection/each\");\n\nvar _lodashCollectionEach2 = _interopRequireDefault(_lodashCollectionEach);\n\nvar _lodashCollectionMap = require(\"lodash/collection/map\");\n\nvar _lodashCollectionMap2 = _interopRequireDefault(_lodashCollectionMap);\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Crawl a node to test if it contains a CallExpression, a Function, or a Helper.\n *\n * @example\n * crawl(node)\n * // { hasCall: false, hasFunction: true, hasHelper: false }\n */\n\nfunction crawl(node) {\n  var state = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  if (t.isMemberExpression(node)) {\n    crawl(node.object, state);\n    if (node.computed) crawl(node.property, state);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    crawl(node.left, state);\n    crawl(node.right, state);\n  } else if (t.isCallExpression(node)) {\n    state.hasCall = true;\n    crawl(node.callee, state);\n  } else if (t.isFunction(node)) {\n    state.hasFunction = true;\n  } else if (t.isIdentifier(node)) {\n    state.hasHelper = state.hasHelper || isHelper(node.callee);\n  }\n\n  return state;\n}\n\n/**\n * Test if a node is or has a helper.\n */\n\nfunction isHelper(node) {\n  if (t.isMemberExpression(node)) {\n    return isHelper(node.object) || isHelper(node.property);\n  } else if (t.isIdentifier(node)) {\n    return node.name === \"require\" || node.name[0] === \"_\";\n  } else if (t.isCallExpression(node)) {\n    return isHelper(node.callee);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    return t.isIdentifier(node.left) && isHelper(node.left) || isHelper(node.right);\n  } else {\n    return false;\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction isType(node) {\n  return t.isLiteral(node) || t.isObjectExpression(node) || t.isArrayExpression(node) || t.isIdentifier(node) || t.isMemberExpression(node);\n}\n\n/**\n * Tests for node types that need whitespace.\n */\n\nexports.nodes = {\n\n  /**\n   * Test if AssignmentExpression needs whitespace.\n   */\n\n  AssignmentExpression: function AssignmentExpression(node) {\n    var state = crawl(node.right);\n    if (state.hasCall && state.hasHelper || state.hasFunction) {\n      return {\n        before: state.hasFunction,\n        after: true\n      };\n    }\n  },\n\n  /**\n   * Test if SwitchCase needs whitespace.\n   */\n\n  SwitchCase: function SwitchCase(node, parent) {\n    return {\n      before: node.consequent.length || parent.cases[0] === node\n    };\n  },\n\n  /**\n   * Test if LogicalExpression needs whitespace.\n   */\n\n  LogicalExpression: function LogicalExpression(node) {\n    if (t.isFunction(node.left) || t.isFunction(node.right)) {\n      return {\n        after: true\n      };\n    }\n  },\n\n  /**\n   * Test if Literal needs whitespace.\n   */\n\n  Literal: function Literal(node) {\n    if (node.value === \"use strict\") {\n      return {\n        after: true\n      };\n    }\n  },\n\n  /**\n   * Test if CallExpression needs whitespace.\n   */\n\n  CallExpression: function CallExpression(node) {\n    if (t.isFunction(node.callee) || isHelper(node)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  /**\n   * Test if VariableDeclaration needs whitespace.\n   */\n\n  VariableDeclaration: function VariableDeclaration(node) {\n    for (var i = 0; i < node.declarations.length; i++) {\n      var declar = node.declarations[i];\n\n      var enabled = isHelper(declar.id) && !isType(declar.init);\n      if (!enabled) {\n        var state = crawl(declar.init);\n        enabled = isHelper(declar.init) && state.hasCall || state.hasFunction;\n      }\n\n      if (enabled) {\n        return {\n          before: true,\n          after: true\n        };\n      }\n    }\n  },\n\n  /**\n   * Test if IfStatement needs whitespace.\n   */\n\n  IfStatement: function IfStatement(node) {\n    if (t.isBlockStatement(node.consequent)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  }\n};\n\n/**\n * Test if Property or SpreadProperty needs whitespace.\n */\n\nexports.nodes.Property = exports.nodes.SpreadProperty = function (node, parent) {\n  if (parent.properties[0] === node) {\n    return {\n      before: true\n    };\n  }\n};\n\n/**\n * Returns lists from node types that need whitespace.\n */\n\nexports.list = {\n\n  /**\n   * Return VariableDeclaration declarations init properties.\n   */\n\n  VariableDeclaration: function VariableDeclaration(node) {\n    return _lodashCollectionMap2[\"default\"](node.declarations, \"init\");\n  },\n\n  /**\n   * Return VariableDeclaration elements.\n   */\n\n  ArrayExpression: function ArrayExpression(node) {\n    return node.elements;\n  },\n\n  /**\n   * Return VariableDeclaration properties.\n   */\n\n  ObjectExpression: function ObjectExpression(node) {\n    return node.properties;\n  }\n};\n\n/**\n * Add whitespace tests for nodes and their aliases.\n */\n\n_lodashCollectionEach2[\"default\"]({\n  Function: true,\n  Class: true,\n  Loop: true,\n  LabeledStatement: true,\n  SwitchStatement: true,\n  TryStatement: true\n}, function (amounts, type) {\n  if (_lodashLangIsBoolean2[\"default\"](amounts)) {\n    amounts = { after: amounts, before: amounts };\n  }\n\n  _lodashCollectionEach2[\"default\"]([type].concat(t.FLIPPED_ALIAS_KEYS[type] || []), function (type) {\n    exports.nodes[type] = function () {\n      return amounts;\n    };\n  });\n});"]}