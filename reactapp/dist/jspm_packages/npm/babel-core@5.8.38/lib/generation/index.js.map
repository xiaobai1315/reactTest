{"version":3,"sources":["../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/generation/index.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_interopRequireWildcard","obj","__esModule","newObj","hasOwnProperty","call","_interopRequireDefault","_classCallCheck","instance","TypeError","_detectIndent","require","_detectIndent2","_whitespace","_whitespace2","_nodePrinter","_nodePrinter2","_repeating","_repeating2","_sourceMap","_sourceMap2","_position","_position2","_messages","messages","_buffer","_buffer2","_lodashObjectExtend","_lodashObjectExtend2","_lodashCollectionEach","_lodashCollectionEach2","_node2","_node3","_types","t","CodeGenerator","ast","opts","code","comments","tokens","format","normalizeOptions","whitespace","position","map","buffer","style","indent","shouldPrintComment","retainLines","compact","quotes","findCommonStringDelimiter","adjustMultilineComment","base","console","error","get","filename","occurences","single","double","checked","token","type","label","raw","slice","start","end","generate","print","_arr","_i","comment","_displayed","push","_printComments","buildPrint","parent","catchUp","node","loc","buf","line","_push","_printNewline","leading","statement","isUserWhitespacable","lines","_ignoreUserWhitespace","getNewlinesBefore","getNewlinesAfter","addNewlines","needs","needsWhitespaceAfter","needsWhitespaceBefore","newline","arguments","undefined","_compact","oldConcise","concise","ReferenceError","JSON","stringify","constructor","name","needsParens","printLeadingComments","before","mark","after","printTrailingComments","printJoin","nodes","_this","len","printOpts","iterator","separator","plain","dedent","printAndIndentOnComments","leadingComments","printBlock","isEmptyStatement","semicolon","generateComment","val","value","getComments","isExpressionStatement","argument","_arr2","_i2","_node","concat","_getComments","indexOf","_arr3","_i3","column","isLast","offset","newlineRegex","RegExp","replace","Math","max","indentSize","getIndent","templateLiterals","comprehensions","expressions","statements","classes","methods","modules","types","flow","jsx","fn","apply","generators","generator","module","exports","gen"],"mappings":"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","file":"index.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\n// istanbul ignore next\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// istanbul ignore next\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _detectIndent = require(\"detect-indent\");\n\nvar _detectIndent2 = _interopRequireDefault(_detectIndent);\n\nvar _whitespace = require(\"./whitespace\");\n\nvar _whitespace2 = _interopRequireDefault(_whitespace);\n\nvar _nodePrinter = require(\"./node/printer\");\n\nvar _nodePrinter2 = _interopRequireDefault(_nodePrinter);\n\nvar _repeating = require(\"repeating\");\n\nvar _repeating2 = _interopRequireDefault(_repeating);\n\nvar _sourceMap = require(\"./source-map\");\n\nvar _sourceMap2 = _interopRequireDefault(_sourceMap);\n\nvar _position = require(\"./position\");\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _messages = require(\"../messages\");\n\nvar messages = _interopRequireWildcard(_messages);\n\nvar _buffer = require(\"./buffer\");\n\nvar _buffer2 = _interopRequireDefault(_buffer);\n\nvar _lodashObjectExtend = require(\"lodash/object/extend\");\n\nvar _lodashObjectExtend2 = _interopRequireDefault(_lodashObjectExtend);\n\nvar _lodashCollectionEach = require(\"lodash/collection/each\");\n\nvar _lodashCollectionEach2 = _interopRequireDefault(_lodashCollectionEach);\n\nvar _node2 = require(\"./node\");\n\nvar _node3 = _interopRequireDefault(_node2);\n\nvar _types = require(\"../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Babel's code generator, turns an ast into code, maintaining sourcemaps,\n * user preferences, and valid output.\n */\n\nvar CodeGenerator = (function () {\n  function CodeGenerator(ast, opts, code) {\n    _classCallCheck(this, CodeGenerator);\n\n    opts = opts || {};\n\n    this.comments = ast.comments || [];\n    this.tokens = ast.tokens || [];\n    this.format = CodeGenerator.normalizeOptions(code, opts, this.tokens);\n    this.opts = opts;\n    this.ast = ast;\n\n    this.whitespace = new _whitespace2[\"default\"](this.tokens);\n    this.position = new _position2[\"default\"]();\n    this.map = new _sourceMap2[\"default\"](this.position, opts, code);\n    this.buffer = new _buffer2[\"default\"](this.position, this.format);\n  }\n\n  /**\n   * [Please add a description.]\n   */\n\n  /**\n   * Normalize generator options, setting defaults.\n   *\n   * - Detects code indentation.\n   * - If `opts.compact = \"auto\"` and the code is over 100KB, `compact` will be set to `true`.\n   */\n\n  CodeGenerator.normalizeOptions = function normalizeOptions(code, opts, tokens) {\n    var style = \"  \";\n    if (code) {\n      var indent = _detectIndent2[\"default\"](code).indent;\n      if (indent && indent !== \" \") style = indent;\n    }\n\n    var format = {\n      shouldPrintComment: opts.shouldPrintComment,\n      retainLines: opts.retainLines,\n      comments: opts.comments == null || opts.comments,\n      compact: opts.compact,\n      quotes: CodeGenerator.findCommonStringDelimiter(code, tokens),\n      indent: {\n        adjustMultilineComment: true,\n        style: style,\n        base: 0\n      }\n    };\n\n    if (format.compact === \"auto\") {\n      format.compact = code.length > 100000; // 100KB\n\n      if (format.compact) {\n        console.error(\"[BABEL] \" + messages.get(\"codeGeneratorDeopt\", opts.filename, \"100KB\"));\n      }\n    }\n\n    if (format.compact) {\n      format.indent.adjustMultilineComment = false;\n    }\n\n    return format;\n  };\n\n  /**\n   * Determine if input code uses more single or double quotes.\n   */\n\n  CodeGenerator.findCommonStringDelimiter = function findCommonStringDelimiter(code, tokens) {\n    var occurences = {\n      single: 0,\n      double: 0\n    };\n\n    var checked = 0;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      if (token.type.label !== \"string\") continue;\n\n      var raw = code.slice(token.start, token.end);\n      if (raw[0] === \"'\") {\n        occurences.single++;\n      } else {\n        occurences.double++;\n      }\n\n      checked++;\n      if (checked >= 3) break;\n    }\n    if (occurences.single > occurences.double) {\n      return \"single\";\n    } else {\n      return \"double\";\n    }\n  };\n\n  /**\n   * All node generators.\n   */\n\n  /**\n   * Generate code and sourcemap from ast.\n   *\n   * Appends comments that weren't attached to any node to the end of the generated output.\n   */\n\n  CodeGenerator.prototype.generate = function generate() {\n    var ast = this.ast;\n\n    this.print(ast);\n\n    if (ast.comments) {\n      var comments = [];\n      var _arr = ast.comments;\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var comment = _arr[_i];\n        if (!comment._displayed) comments.push(comment);\n      }\n      this._printComments(comments);\n    }\n\n    return {\n      map: this.map.get(),\n      code: this.buffer.get()\n    };\n  };\n\n  /**\n   * Build NodePrinter.\n   */\n\n  CodeGenerator.prototype.buildPrint = function buildPrint(parent) {\n    return new _nodePrinter2[\"default\"](this, parent);\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.catchUp = function catchUp(node) {\n    // catch up to this nodes newline if we're behind\n    if (node.loc && this.format.retainLines && this.buffer.buf) {\n      while (this.position.line < node.loc.start.line) {\n        this._push(\"\\n\");\n      }\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype._printNewline = function _printNewline(leading, node, parent, opts) {\n    if (!opts.statement && !_node3[\"default\"].isUserWhitespacable(node, parent)) {\n      return;\n    }\n\n    var lines = 0;\n\n    if (node.start != null && !node._ignoreUserWhitespace) {\n      // user node\n      if (leading) {\n        lines = this.whitespace.getNewlinesBefore(node);\n      } else {\n        lines = this.whitespace.getNewlinesAfter(node);\n      }\n    } else {\n      // generated node\n      if (!leading) lines++; // always include at least a single line after\n      if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n\n      var needs = _node3[\"default\"].needsWhitespaceAfter;\n      if (leading) needs = _node3[\"default\"].needsWhitespaceBefore;\n      if (needs(node, parent)) lines++;\n\n      // generated nodes can't add starting file whitespace\n      if (!this.buffer.buf) lines = 0;\n    }\n\n    this.newline(lines);\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.print = function print(node, parent) {\n    var opts = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    if (!node) return;\n\n    if (parent && parent._compact) {\n      node._compact = true;\n    }\n\n    var oldConcise = this.format.concise;\n    if (node._compact) {\n      this.format.concise = true;\n    }\n\n    if (!this[node.type]) {\n      throw new ReferenceError(\"unknown node of type \" + JSON.stringify(node.type) + \" with constructor \" + JSON.stringify(node && node.constructor.name));\n    }\n\n    var needsParens = _node3[\"default\"].needsParens(node, parent);\n    if (needsParens) this.push(\"(\");\n\n    this.printLeadingComments(node, parent);\n\n    this.catchUp(node);\n\n    this._printNewline(true, node, parent, opts);\n\n    if (opts.before) opts.before();\n    this.map.mark(node, \"start\");\n\n    this[node.type](node, this.buildPrint(node), parent);\n\n    if (needsParens) this.push(\")\");\n\n    this.map.mark(node, \"end\");\n    if (opts.after) opts.after();\n\n    this.format.concise = oldConcise;\n\n    this._printNewline(false, node, parent, opts);\n\n    this.printTrailingComments(node, parent);\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.printJoin = function printJoin(print, nodes) {\n    // istanbul ignore next\n\n    var _this = this;\n\n    var opts = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    if (!nodes || !nodes.length) return;\n\n    var len = nodes.length;\n\n    if (opts.indent) this.indent();\n\n    var printOpts = {\n      statement: opts.statement,\n      addNewlines: opts.addNewlines,\n      after: function after() {\n        if (opts.iterator) {\n          opts.iterator(node, i);\n        }\n\n        if (opts.separator && i < len - 1) {\n          _this.push(opts.separator);\n        }\n      }\n    };\n\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      print.plain(node, printOpts);\n    }\n\n    if (opts.indent) this.dedent();\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.printAndIndentOnComments = function printAndIndentOnComments(print, node) {\n    var indent = !!node.leadingComments;\n    if (indent) this.indent();\n    print.plain(node);\n    if (indent) this.dedent();\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.printBlock = function printBlock(print, node) {\n    if (t.isEmptyStatement(node)) {\n      this.semicolon();\n    } else {\n      this.push(\" \");\n      print.plain(node);\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.generateComment = function generateComment(comment) {\n    var val = comment.value;\n    if (comment.type === \"CommentLine\") {\n      val = \"//\" + val;\n    } else {\n      val = \"/*\" + val + \"*/\";\n    }\n    return val;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.printTrailingComments = function printTrailingComments(node, parent) {\n    this._printComments(this.getComments(\"trailingComments\", node, parent));\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.printLeadingComments = function printLeadingComments(node, parent) {\n    this._printComments(this.getComments(\"leadingComments\", node, parent));\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.getComments = function getComments(key, node, parent) {\n    if (t.isExpressionStatement(parent)) {\n      return [];\n    }\n\n    var comments = [];\n    var nodes = [node];\n\n    if (t.isExpressionStatement(node)) {\n      nodes.push(node.argument);\n    }\n\n    var _arr2 = nodes;\n    for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n      var _node = _arr2[_i2];\n      comments = comments.concat(this._getComments(key, _node));\n    }\n\n    return comments;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype._getComments = function _getComments(key, node) {\n    return node && node[key] || [];\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.shouldPrintComment = function shouldPrintComment(comment) {\n    if (this.format.shouldPrintComment) {\n      return this.format.shouldPrintComment(comment.value);\n    } else {\n      if (comment.value.indexOf(\"@license\") >= 0 || comment.value.indexOf(\"@preserve\") >= 0) {\n        return true;\n      } else {\n        return this.format.comments;\n      }\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype._printComments = function _printComments(comments) {\n    if (!comments || !comments.length) return;\n\n    var _arr3 = comments;\n    for (var _i3 = 0; _i3 < _arr3.length; _i3++) {\n      var comment = _arr3[_i3];\n      if (!this.shouldPrintComment(comment)) continue;\n      if (comment._displayed) continue;\n      comment._displayed = true;\n\n      this.catchUp(comment);\n\n      // whitespace before\n      this.newline(this.whitespace.getNewlinesBefore(comment));\n\n      var column = this.position.column;\n      var val = this.generateComment(comment);\n\n      if (column && !this.isLast([\"\\n\", \" \", \"[\", \"{\"])) {\n        this._push(\" \");\n        column++;\n      }\n\n      //\n      if (comment.type === \"CommentBlock\" && this.format.indent.adjustMultilineComment) {\n        var offset = comment.loc && comment.loc.start.column;\n        if (offset) {\n          var newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n          val = val.replace(newlineRegex, \"\\n\");\n        }\n\n        var indent = Math.max(this.indentSize(), column);\n        val = val.replace(/\\n/g, \"\\n\" + _repeating2[\"default\"](\" \", indent));\n      }\n\n      if (column === 0) {\n        val = this.getIndent() + val;\n      }\n\n      // force a newline for line comments when retainLines is set in case the next printed node\n      // doesn't catch up\n      if ((this.format.compact || this.format.retainLines) && comment.type === \"CommentLine\") {\n        val += \"\\n\";\n      }\n\n      //\n      this._push(val);\n\n      // whitespace after\n      this.newline(this.whitespace.getNewlinesAfter(comment));\n    }\n  };\n\n  _createClass(CodeGenerator, null, [{\n    key: \"generators\",\n    value: {\n      templateLiterals: require(\"./generators/template-literals\"),\n      comprehensions: require(\"./generators/comprehensions\"),\n      expressions: require(\"./generators/expressions\"),\n      statements: require(\"./generators/statements\"),\n      classes: require(\"./generators/classes\"),\n      methods: require(\"./generators/methods\"),\n      modules: require(\"./generators/modules\"),\n      types: require(\"./generators/types\"),\n      flow: require(\"./generators/flow\"),\n      base: require(\"./generators/base\"),\n      jsx: require(\"./generators/jsx\")\n    },\n    enumerable: true\n  }]);\n\n  return CodeGenerator;\n})();\n\n_lodashCollectionEach2[\"default\"](_buffer2[\"default\"].prototype, function (fn, key) {\n  CodeGenerator.prototype[key] = function () {\n    return fn.apply(this.buffer, arguments);\n  };\n});\n\n/**\n * [Please add a description.]\n */\n\n_lodashCollectionEach2[\"default\"](CodeGenerator.generators, function (generator) {\n  _lodashObjectExtend2[\"default\"](CodeGenerator.prototype, generator);\n});\n\n/**\n * [Please add a description.]\n */\n\nmodule.exports = function (ast, opts, code) {\n  var gen = new CodeGenerator(ast, opts, code);\n  return gen.generate();\n};\n\nmodule.exports.CodeGenerator = CodeGenerator;"]}