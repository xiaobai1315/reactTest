{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/generation/generators/types.js"],"names":["exports","__esModule","Identifier","RestElement","ObjectExpression","Property","ArrayExpression","Literal","_Literal","_stringLiteral","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_types","require","t","node","push","name","print","plain","argument","SpreadElement","SpreadProperty","props","properties","printInnerComments","length","space","list","indent","ObjectPattern","decorators","separator","method","kind","_method","computed","isAssignmentPattern","value","isIdentifier","left","shorthand","elems","elements","len","i","elem","ArrayPattern","_push","val","regex","pattern","flags","raw","rawValue","Error","JSON","stringify","replace","c","charCodeAt","toString","slice","format","quotes"],"mappings":"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","file":"types.js","sourcesContent":["/* */ \n\"format cjs\";\n/* eslint quotes: 0 */\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.Identifier = Identifier;\nexports.RestElement = RestElement;\nexports.ObjectExpression = ObjectExpression;\nexports.Property = Property;\nexports.ArrayExpression = ArrayExpression;\nexports.Literal = Literal;\nexports._Literal = _Literal;\nexports._stringLiteral = _stringLiteral;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Prints Identifier, prints name.\n */\n\nfunction Identifier(node) {\n  this.push(node.name);\n}\n\n/**\n * Prints RestElement, prints argument.\n */\n\nfunction RestElement(node, print) {\n  this.push(\"...\");\n  print.plain(node.argument);\n}\n\n/**\n * Alias RestElement printer as SpreadElement,\n * and RestElement printer as SpreadProperty.\n */\n\nexports.SpreadElement = RestElement;\nexports.SpreadProperty = RestElement;\n\n/**\n * Prints ObjectExpression, prints properties.\n */\n\nfunction ObjectExpression(node, print) {\n  var props = node.properties;\n\n  this.push(\"{\");\n  print.printInnerComments();\n\n  if (props.length) {\n    this.space();\n    print.list(props, { indent: true });\n    this.space();\n  }\n\n  this.push(\"}\");\n}\n\n/**\n * Alias ObjectExpression printer as ObjectPattern.\n */\n\nexports.ObjectPattern = ObjectExpression;\n\n/**\n * Prints Property, prints decorators, key, and value, handles kind, computed, and shorthand.\n */\n\nfunction Property(node, print) {\n  print.list(node.decorators, { separator: \"\" });\n\n  if (node.method || node.kind === \"get\" || node.kind === \"set\") {\n    this._method(node, print);\n  } else {\n    if (node.computed) {\n      this.push(\"[\");\n      print.plain(node.key);\n      this.push(\"]\");\n    } else {\n      // print `({ foo: foo = 5 } = {})` as `({ foo = 5 } = {});`\n      if (t.isAssignmentPattern(node.value) && t.isIdentifier(node.key) && node.key.name === node.value.left.name) {\n        print.plain(node.value);\n        return;\n      }\n\n      print.plain(node.key);\n\n      // shorthand!\n      if (node.shorthand && t.isIdentifier(node.key) && t.isIdentifier(node.value) && node.key.name === node.value.name) {\n        return;\n      }\n    }\n\n    this.push(\":\");\n    this.space();\n    print.plain(node.value);\n  }\n}\n\n/**\n * Prints ArrayExpression, prints elements.\n */\n\nfunction ArrayExpression(node, print) {\n  var elems = node.elements;\n  var len = elems.length;\n\n  this.push(\"[\");\n  print.printInnerComments();\n\n  for (var i = 0; i < elems.length; i++) {\n    var elem = elems[i];\n    if (elem) {\n      if (i > 0) this.space();\n      print.plain(elem);\n      if (i < len - 1) this.push(\",\");\n    } else {\n      // If the array expression ends with a hole, that hole\n      // will be ignored by the interpreter, but if it ends with\n      // two (or more) holes, we need to write out two (or more)\n      // commas so that the resulting code is interpreted with\n      // both (all) of the holes.\n      this.push(\",\");\n    }\n  }\n\n  this.push(\"]\");\n}\n\n/**\n * Alias ArrayExpression printer as ArrayPattern.\n */\n\nexports.ArrayPattern = ArrayExpression;\n\n/**\n * Prints Literal, prints value, regex, raw, handles val type.\n */\n\nfunction Literal(node) {\n  this.push(\"\"); // hack: catch up indentation\n  this._push(this._Literal(node));\n}\n\nfunction _Literal(node) {\n  var val = node.value;\n\n  if (node.regex) {\n    return \"/\" + node.regex.pattern + \"/\" + node.regex.flags;\n  }\n\n  // just use the raw property if our current value is equivalent to the one we got\n  // when we populated raw\n  if (node.raw != null && node.rawValue != null && val === node.rawValue) {\n    return node.raw;\n  }\n\n  switch (typeof val) {\n    case \"string\":\n      return this._stringLiteral(val);\n\n    case \"number\":\n      return val + \"\";\n\n    case \"boolean\":\n      return val ? \"true\" : \"false\";\n\n    default:\n      if (val === null) {\n        return \"null\";\n      } else {\n        throw new Error(\"Invalid Literal type\");\n      }\n  }\n}\n\n/**\n * Prints string literals, handles format.\n */\n\nfunction _stringLiteral(val) {\n  val = JSON.stringify(val);\n\n  // escape illegal js but valid json unicode characters\n  val = val.replace(/[\\u000A\\u000D\\u2028\\u2029]/g, function (c) {\n    return \"\\\\u\" + (\"0000\" + c.charCodeAt(0).toString(16)).slice(-4);\n  });\n\n  if (this.format.quotes === \"single\") {\n    // remove double quotes\n    val = val.slice(1, -1);\n\n    // unescape double quotes\n    val = val.replace(/\\\\\"/g, '\"');\n\n    // escape single quotes\n    val = val.replace(/'/g, \"\\\\'\");\n\n    // add single quotes\n    val = \"'\" + val + \"'\";\n  }\n\n  return val;\n}"]}