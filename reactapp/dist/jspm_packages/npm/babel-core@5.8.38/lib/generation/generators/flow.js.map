{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/generation/generators/flow.js"],"names":["exports","__esModule","AnyTypeAnnotation","ArrayTypeAnnotation","BooleanTypeAnnotation","BooleanLiteralTypeAnnotation","DeclareClass","DeclareFunction","DeclareInterface","DeclareModule","DeclareTypeAlias","DeclareVariable","FunctionTypeAnnotation","FunctionTypeParam","InterfaceExtends","_interfaceish","InterfaceDeclaration","IntersectionTypeAnnotation","MixedTypeAnnotation","NullableTypeAnnotation","NullLiteralTypeAnnotation","NumberTypeAnnotation","StringLiteralTypeAnnotation","StringTypeAnnotation","ThisTypeAnnotation","TupleTypeAnnotation","TypeofTypeAnnotation","TypeAlias","TypeAnnotation","TypeParameterInstantiation","ObjectTypeAnnotation","ObjectTypeCallProperty","ObjectTypeIndexer","ObjectTypeProperty","QualifiedTypeIdentifier","UnionTypeAnnotation","TypeCastExpression","VoidTypeAnnotation","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_types","require","t","push","node","print","plain","elementType","value","id","typeAnnotation","semicolon","space","body","parent","typeParameters","list","params","rest","length","type","returnType","name","optional","ClassImplements","GenericTypeAnnotation","join","separator","mixins","types","_types2","NumberLiteralTypeAnnotation","Literal","_stringLiteral","argument","right","iterator","TypeParameterDeclaration","_this","props","properties","concat","callProperties","indexers","indent","isFunctionTypeAnnotation","qualification","expression"],"mappings":"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","file":"flow.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\nexports.AnyTypeAnnotation = AnyTypeAnnotation;\nexports.ArrayTypeAnnotation = ArrayTypeAnnotation;\nexports.BooleanTypeAnnotation = BooleanTypeAnnotation;\nexports.BooleanLiteralTypeAnnotation = BooleanLiteralTypeAnnotation;\nexports.DeclareClass = DeclareClass;\nexports.DeclareFunction = DeclareFunction;\nexports.DeclareInterface = DeclareInterface;\nexports.DeclareModule = DeclareModule;\nexports.DeclareTypeAlias = DeclareTypeAlias;\nexports.DeclareVariable = DeclareVariable;\nexports.FunctionTypeAnnotation = FunctionTypeAnnotation;\nexports.FunctionTypeParam = FunctionTypeParam;\nexports.InterfaceExtends = InterfaceExtends;\nexports._interfaceish = _interfaceish;\nexports.InterfaceDeclaration = InterfaceDeclaration;\nexports.IntersectionTypeAnnotation = IntersectionTypeAnnotation;\nexports.MixedTypeAnnotation = MixedTypeAnnotation;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.NullLiteralTypeAnnotation = NullLiteralTypeAnnotation;\nexports.NumberTypeAnnotation = NumberTypeAnnotation;\nexports.StringLiteralTypeAnnotation = StringLiteralTypeAnnotation;\nexports.StringTypeAnnotation = StringTypeAnnotation;\nexports.ThisTypeAnnotation = ThisTypeAnnotation;\nexports.TupleTypeAnnotation = TupleTypeAnnotation;\nexports.TypeofTypeAnnotation = TypeofTypeAnnotation;\nexports.TypeAlias = TypeAlias;\nexports.TypeAnnotation = TypeAnnotation;\nexports.TypeParameterInstantiation = TypeParameterInstantiation;\nexports.ObjectTypeAnnotation = ObjectTypeAnnotation;\nexports.ObjectTypeCallProperty = ObjectTypeCallProperty;\nexports.ObjectTypeIndexer = ObjectTypeIndexer;\nexports.ObjectTypeProperty = ObjectTypeProperty;\nexports.QualifiedTypeIdentifier = QualifiedTypeIdentifier;\nexports.UnionTypeAnnotation = UnionTypeAnnotation;\nexports.TypeCastExpression = TypeCastExpression;\nexports.VoidTypeAnnotation = VoidTypeAnnotation;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Prints AnyTypeAnnotation.\n */\n\nfunction AnyTypeAnnotation() {\n  this.push(\"any\");\n}\n\n/**\n * Prints ArrayTypeAnnotation, prints elementType.\n */\n\nfunction ArrayTypeAnnotation(node, print) {\n  print.plain(node.elementType);\n  this.push(\"[\");\n  this.push(\"]\");\n}\n\n/**\n * Prints BooleanTypeAnnotation.\n */\n\nfunction BooleanTypeAnnotation() {\n  this.push(\"bool\");\n}\n\n/**\n * Prints BooleanLiteralTypeAnnotation.\n */\n\nfunction BooleanLiteralTypeAnnotation(node) {\n  this.push(node.value ? \"true\" : \"false\");\n}\n\n/**\n * Prints DeclareClass, prints node.\n */\n\nfunction DeclareClass(node, print) {\n  this.push(\"declare class \");\n  this._interfaceish(node, print);\n}\n\n/**\n * Prints DeclareFunction, prints id and id.typeAnnotation.\n */\n\nfunction DeclareFunction(node, print) {\n  this.push(\"declare function \");\n  print.plain(node.id);\n  print.plain(node.id.typeAnnotation.typeAnnotation);\n  this.semicolon();\n}\n\n/**\n * Prints DeclareInterface.\n */\n\nfunction DeclareInterface(node, print) {\n  this.push(\"declare \");\n  this.InterfaceDeclaration(node, print);\n}\n\n/**\n * Prints DeclareModule, prints id and body.\n */\n\nfunction DeclareModule(node, print) {\n  this.push(\"declare module \");\n  print.plain(node.id);\n  this.space();\n  print.plain(node.body);\n}\n\n/**\n * Prints DeclareTypeAlias.\n */\n\nfunction DeclareTypeAlias(node, print) {\n  this.push(\"declare \");\n  this.TypeAlias(node, print);\n}\n\n/**\n * Prints DeclareVariable, prints id and id.typeAnnotation.\n */\n\nfunction DeclareVariable(node, print) {\n  this.push(\"declare var \");\n  print.plain(node.id);\n  print.plain(node.id.typeAnnotation);\n  this.semicolon();\n}\n\n/**\n * Prints FunctionTypeAnnotation, prints typeParameters, params, and rest.\n */\n\nfunction FunctionTypeAnnotation(node, print, parent) {\n  print.plain(node.typeParameters);\n  this.push(\"(\");\n  print.list(node.params);\n\n  if (node.rest) {\n    if (node.params.length) {\n      this.push(\",\");\n      this.space();\n    }\n    this.push(\"...\");\n    print.plain(node.rest);\n  }\n\n  this.push(\")\");\n\n  // this node type is overloaded, not sure why but it makes it EXTREMELY annoying\n  if (parent.type === \"ObjectTypeProperty\" || parent.type === \"ObjectTypeCallProperty\" || parent.type === \"DeclareFunction\") {\n    this.push(\":\");\n  } else {\n    this.space();\n    this.push(\"=>\");\n  }\n\n  this.space();\n  print.plain(node.returnType);\n}\n\n/**\n * Prints FunctionTypeParam, prints name and typeAnnotation, handles optional.\n */\n\nfunction FunctionTypeParam(node, print) {\n  print.plain(node.name);\n  if (node.optional) this.push(\"?\");\n  this.push(\":\");\n  this.space();\n  print.plain(node.typeAnnotation);\n}\n\n/**\n * Prints InterfaceExtends, prints id and typeParameters.\n */\n\nfunction InterfaceExtends(node, print) {\n  print.plain(node.id);\n  print.plain(node.typeParameters);\n}\n\n/**\n * Alias InterfaceExtends printer as ClassImplements,\n * and InterfaceExtends printer as GenericTypeAnnotation.\n */\n\nexports.ClassImplements = InterfaceExtends;\nexports.GenericTypeAnnotation = InterfaceExtends;\n\n/**\n * Prints interface-like node, prints id, typeParameters, extends, and body.\n */\n\nfunction _interfaceish(node, print) {\n  print.plain(node.id);\n  print.plain(node.typeParameters);\n  if (node[\"extends\"].length) {\n    this.push(\" extends \");\n    print.join(node[\"extends\"], { separator: \", \" });\n  }\n  if (node.mixins && node.mixins.length) {\n    this.push(\" mixins \");\n    print.join(node.mixins, { separator: \", \" });\n  }\n  this.space();\n  print.plain(node.body);\n}\n\n/**\n * Prints InterfaceDeclaration, prints node.\n */\n\nfunction InterfaceDeclaration(node, print) {\n  this.push(\"interface \");\n  this._interfaceish(node, print);\n}\n\n/**\n * Prints IntersectionTypeAnnotation, prints types.\n */\n\nfunction IntersectionTypeAnnotation(node, print) {\n  print.join(node.types, { separator: \" & \" });\n}\n\n/**\n * Prints MixedTypeAnnotation.\n */\n\nfunction MixedTypeAnnotation() {\n  this.push(\"mixed\");\n}\n\n/**\n * Prints NullableTypeAnnotation, prints typeAnnotation.\n */\n\nfunction NullableTypeAnnotation(node, print) {\n  this.push(\"?\");\n  print.plain(node.typeAnnotation);\n}\n\n/**\n * Prints NullLiteralTypeAnnotation, prints value.\n */\n\nfunction NullLiteralTypeAnnotation() {\n  this.push(\"null\");\n}\n\n/**\n * Prints NumberLiteralTypeAnnotation, prints value.\n */\n\nvar _types2 = require(\"./types\");\n\nexports.NumberLiteralTypeAnnotation = _types2.Literal;\n\n/**\n * Prints NumberTypeAnnotation.\n */\n\nfunction NumberTypeAnnotation() {\n  this.push(\"number\");\n}\n\n/**\n * Prints StringLiteralTypeAnnotation, prints value.\n */\n\nfunction StringLiteralTypeAnnotation(node) {\n  this.push(this._stringLiteral(node.value));\n}\n\n/**\n * Prints StringTypeAnnotation.\n */\n\nfunction StringTypeAnnotation() {\n  this.push(\"string\");\n}\n\n/**\n * Prints ThisTypeAnnotation, prints this.\n */\n\nfunction ThisTypeAnnotation() {\n  this.push(\"this\");\n}\n\n/**\n * Prints TupleTypeAnnotation, prints types.\n */\n\nfunction TupleTypeAnnotation(node, print) {\n  this.push(\"[\");\n  print.join(node.types, { separator: \", \" });\n  this.push(\"]\");\n}\n\n/**\n * Prints TypeofTypeAnnotation, prints argument.\n */\n\nfunction TypeofTypeAnnotation(node, print) {\n  this.push(\"typeof \");\n  print.plain(node.argument);\n}\n\n/**\n * Prints TypeAlias, prints id, typeParameters, and right.\n */\n\nfunction TypeAlias(node, print) {\n  this.push(\"type \");\n  print.plain(node.id);\n  print.plain(node.typeParameters);\n  this.space();\n  this.push(\"=\");\n  this.space();\n  print.plain(node.right);\n  this.semicolon();\n}\n\n/**\n * Prints TypeAnnotation, prints typeAnnotation, handles optional.\n */\n\nfunction TypeAnnotation(node, print) {\n  this.push(\":\");\n  this.space();\n  if (node.optional) this.push(\"?\");\n  print.plain(node.typeAnnotation);\n}\n\n/**\n * Prints TypeParameterInstantiation, prints params.\n */\n\nfunction TypeParameterInstantiation(node, print) {\n  this.push(\"<\");\n  print.join(node.params, {\n    separator: \", \",\n    iterator: function iterator(node) {\n      print.plain(node.typeAnnotation);\n    }\n  });\n  this.push(\">\");\n}\n\n/**\n * Alias TypeParameterInstantiation printer as TypeParameterDeclaration\n */\n\nexports.TypeParameterDeclaration = TypeParameterInstantiation;\n\n/**\n * Prints ObjectTypeAnnotation, prints properties, callProperties, and indexers.\n */\n\nfunction ObjectTypeAnnotation(node, print) {\n  // istanbul ignore next\n\n  var _this = this;\n\n  this.push(\"{\");\n  var props = node.properties.concat(node.callProperties, node.indexers);\n\n  if (props.length) {\n    this.space();\n\n    print.list(props, {\n      separator: false,\n      indent: true,\n      iterator: function iterator() {\n        if (props.length !== 1) {\n          _this.semicolon();\n          _this.space();\n        }\n      }\n    });\n\n    this.space();\n  }\n\n  this.push(\"}\");\n}\n\n/**\n * Prints ObjectTypeCallProperty, prints value, handles static.\n */\n\nfunction ObjectTypeCallProperty(node, print) {\n  if (node[\"static\"]) this.push(\"static \");\n  print.plain(node.value);\n}\n\n/**\n * Prints ObjectTypeIndexer, prints id, key, and value, handles static.\n */\n\nfunction ObjectTypeIndexer(node, print) {\n  if (node[\"static\"]) this.push(\"static \");\n  this.push(\"[\");\n  print.plain(node.id);\n  this.push(\":\");\n  this.space();\n  print.plain(node.key);\n  this.push(\"]\");\n  this.push(\":\");\n  this.space();\n  print.plain(node.value);\n}\n\n/**\n * Prints ObjectTypeProperty, prints static, key, and value.\n */\n\nfunction ObjectTypeProperty(node, print) {\n  if (node[\"static\"]) this.push(\"static \");\n  print.plain(node.key);\n  if (node.optional) this.push(\"?\");\n  if (!t.isFunctionTypeAnnotation(node.value)) {\n    this.push(\":\");\n    this.space();\n  }\n  print.plain(node.value);\n}\n\n/**\n * Prints QualifiedTypeIdentifier, prints qualification and id.\n */\n\nfunction QualifiedTypeIdentifier(node, print) {\n  print.plain(node.qualification);\n  this.push(\".\");\n  print.plain(node.id);\n}\n\n/**\n * Prints UnionTypeAnnotation, prints types.\n */\n\nfunction UnionTypeAnnotation(node, print) {\n  print.join(node.types, { separator: \" | \" });\n}\n\n/**\n * Prints TypeCastExpression, prints expression and typeAnnotation.\n */\n\nfunction TypeCastExpression(node, print) {\n  this.push(\"(\");\n  print.plain(node.expression);\n  print.plain(node.typeAnnotation);\n  this.push(\")\");\n}\n\n/**\n * Prints VoidTypeAnnotation.\n */\n\nfunction VoidTypeAnnotation() {\n  this.push(\"void\");\n}"]}