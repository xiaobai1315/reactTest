{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/generation/generators/expressions.js"],"names":["exports","__esModule","UnaryExpression","DoExpression","ParenthesizedExpression","UpdateExpression","ConditionalExpression","NewExpression","SequenceExpression","ThisExpression","Super","Decorator","CallExpression","EmptyStatement","ExpressionStatement","AssignmentPattern","AssignmentExpression","BindExpression","MemberExpression","MetaProperty","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_interopRequireDefault","_isInteger","require","_isInteger2","_lodashLangIsNumber","_lodashLangIsNumber2","_node","_node2","_types","t","SCIENTIFIC_NOTATION","ZERO_DECIMAL_INTEGER","NON_DECIMAL_NUMERIC_LITERAL","node","print","needsSpace","test","operator","arg","argument","isUpdateExpression","isUnaryExpression","push","plain","space","body","expression","prefix","consequent","alternate","callee","list","arguments","expressions","newline","isPrettyCall","_prettyCall","format","retainLines","compact","separator","indent","dedent","buildYieldAwait","keyword","delegate","all","terminatorState","startTerminatorless","endTerminatorless","YieldExpression","AwaitExpression","semicolon","left","right","parent","parens","_inForStatementInit","needsParens","spaces","object","BinaryExpression","LogicalExpression","computed","isMemberExpression","property","TypeError","isLiteral","value","val","_Literal","endsWith","meta"],"mappings":"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","file":"expressions.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\nexports.UnaryExpression = UnaryExpression;\nexports.DoExpression = DoExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.NewExpression = NewExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ThisExpression = ThisExpression;\nexports.Super = Super;\nexports.Decorator = Decorator;\nexports.CallExpression = CallExpression;\nexports.EmptyStatement = EmptyStatement;\nexports.ExpressionStatement = ExpressionStatement;\nexports.AssignmentPattern = AssignmentPattern;\nexports.AssignmentExpression = AssignmentExpression;\nexports.BindExpression = BindExpression;\nexports.MemberExpression = MemberExpression;\nexports.MetaProperty = MetaProperty;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _isInteger = require(\"is-integer\");\n\nvar _isInteger2 = _interopRequireDefault(_isInteger);\n\nvar _lodashLangIsNumber = require(\"lodash/lang/isNumber\");\n\nvar _lodashLangIsNumber2 = _interopRequireDefault(_lodashLangIsNumber);\n\nvar _node = require(\"../node\");\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * RegExp for testing scientific notation in literals.\n */\n\nvar SCIENTIFIC_NOTATION = /e/i;\nvar ZERO_DECIMAL_INTEGER = /\\.0+$/;\n\n/**\n * RegExp for testing if a numeric literal is\n * a BinaryIntegerLiteral, OctalIntegerLiteral or HexIntegerLiteral.\n */\n\nvar NON_DECIMAL_NUMERIC_LITERAL = /^0(b|o|x)/i;\n\n/**\n * Prints UnaryExpression, prints operator and argument.\n */\n\nfunction UnaryExpression(node, print) {\n  var needsSpace = /[a-z]$/.test(node.operator);\n  var arg = node.argument;\n\n  if (t.isUpdateExpression(arg) || t.isUnaryExpression(arg)) {\n    needsSpace = true;\n  }\n\n  if (t.isUnaryExpression(arg) && arg.operator === \"!\") {\n    needsSpace = false;\n  }\n\n  this.push(node.operator);\n  if (needsSpace) this.push(\" \");\n  print.plain(node.argument);\n}\n\n/**\n * Prints DoExpression, prints body.\n */\n\nfunction DoExpression(node, print) {\n  this.push(\"do\");\n  this.space();\n  print.plain(node.body);\n}\n\n/**\n * Prints ParenthesizedExpression, prints expression.\n */\n\nfunction ParenthesizedExpression(node, print) {\n  this.push(\"(\");\n  print.plain(node.expression);\n  this.push(\")\");\n}\n\n/**\n * Prints UpdateExpression, prints operator and argument.\n */\n\nfunction UpdateExpression(node, print) {\n  if (node.prefix) {\n    this.push(node.operator);\n    print.plain(node.argument);\n  } else {\n    print.plain(node.argument);\n    this.push(node.operator);\n  }\n}\n\n/**\n * Prints ConditionalExpression, prints test, consequent, and alternate.\n */\n\nfunction ConditionalExpression(node, print) {\n  print.plain(node.test);\n  this.space();\n  this.push(\"?\");\n  this.space();\n  print.plain(node.consequent);\n  this.space();\n  this.push(\":\");\n  this.space();\n  print.plain(node.alternate);\n}\n\n/**\n * Prints NewExpression, prints callee and arguments.\n */\n\nfunction NewExpression(node, print) {\n  this.push(\"new \");\n  print.plain(node.callee);\n  this.push(\"(\");\n  print.list(node.arguments);\n  this.push(\")\");\n}\n\n/**\n * Prints SequenceExpression.expressions.\n */\n\nfunction SequenceExpression(node, print) {\n  print.list(node.expressions);\n}\n\n/**\n * Prints ThisExpression.\n */\n\nfunction ThisExpression() {\n  this.push(\"this\");\n}\n\n/**\n * Prints Super.\n */\n\nfunction Super() {\n  this.push(\"super\");\n}\n\n/**\n * Prints Decorator, prints expression.\n */\n\nfunction Decorator(node, print) {\n  this.push(\"@\");\n  print.plain(node.expression);\n  this.newline();\n}\n\n/**\n * Prints CallExpression, prints callee and arguments.\n */\n\nfunction CallExpression(node, print) {\n  print.plain(node.callee);\n\n  this.push(\"(\");\n\n  var isPrettyCall = node._prettyCall && !this.format.retainLines && !this.format.compact;\n\n  var separator;\n  if (isPrettyCall) {\n    separator = \",\\n\";\n    this.newline();\n    this.indent();\n  }\n\n  print.list(node.arguments, { separator: separator });\n\n  if (isPrettyCall) {\n    this.newline();\n    this.dedent();\n  }\n\n  this.push(\")\");\n}\n\n/**\n * Builds yield or await expression printer.\n * Prints delegate, all, and argument.\n */\n\nvar buildYieldAwait = function buildYieldAwait(keyword) {\n  return function (node, print) {\n    this.push(keyword);\n\n    if (node.delegate || node.all) {\n      this.push(\"*\");\n    }\n\n    if (node.argument) {\n      this.push(\" \");\n      var terminatorState = this.startTerminatorless();\n      print.plain(node.argument);\n      this.endTerminatorless(terminatorState);\n    }\n  };\n};\n\n/**\n * Create YieldExpression and AwaitExpression printers.\n */\n\nvar YieldExpression = buildYieldAwait(\"yield\");\nexports.YieldExpression = YieldExpression;\nvar AwaitExpression = buildYieldAwait(\"await\");\n\nexports.AwaitExpression = AwaitExpression;\n/**\n * Prints EmptyStatement.\n */\n\nfunction EmptyStatement() {\n  this.semicolon();\n}\n\n/**\n * Prints ExpressionStatement, prints expression.\n */\n\nfunction ExpressionStatement(node, print) {\n  print.plain(node.expression);\n  this.semicolon();\n}\n\n/**\n * Prints AssignmentPattern, prints left and right.\n */\n\nfunction AssignmentPattern(node, print) {\n  print.plain(node.left);\n  this.push(\" = \");\n  print.plain(node.right);\n}\n\n/**\n * Prints AssignmentExpression, prints left, operator, and right.\n */\n\nfunction AssignmentExpression(node, print, parent) {\n  // Somewhere inside a for statement `init` node but doesn't usually\n  // needs a paren except for `in` expressions: `for (a in b ? a : b;;)`\n  var parens = this._inForStatementInit && node.operator === \"in\" && !_node2[\"default\"].needsParens(node, parent);\n\n  if (parens) {\n    this.push(\"(\");\n  }\n\n  // todo: add cases where the spaces can be dropped when in compact mode\n  print.plain(node.left);\n\n  var spaces = node.operator === \"in\" || node.operator === \"instanceof\";\n  spaces = true; // todo: https://github.com/babel/babel/issues/1835\n  this.space(spaces);\n\n  this.push(node.operator);\n\n  if (!spaces) {\n    // space is mandatory to avoid outputting <!--\n    // http://javascript.spec.whatwg.org/#comment-syntax\n    spaces = node.operator === \"<\" && t.isUnaryExpression(node.right, { prefix: true, operator: \"!\" }) && t.isUnaryExpression(node.right.argument, { prefix: true, operator: \"--\" });\n  }\n\n  this.space(spaces);\n\n  print.plain(node.right);\n\n  if (parens) {\n    this.push(\")\");\n  }\n}\n\n/**\n * Prints BindExpression, prints object and callee.\n */\n\nfunction BindExpression(node, print) {\n  print.plain(node.object);\n  this.push(\"::\");\n  print.plain(node.callee);\n}\n\n/**\n * Alias ClassDeclaration printer as ClassExpression,\n * and AssignmentExpression printer as LogicalExpression.\n */\n\nexports.BinaryExpression = AssignmentExpression;\nexports.LogicalExpression = AssignmentExpression;\n\n/**\n * Print MemberExpression, prints object, property, and value. Handles computed.\n */\n\nfunction MemberExpression(node, print) {\n  var obj = node.object;\n  print.plain(obj);\n\n  if (!node.computed && t.isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  var computed = node.computed;\n  if (t.isLiteral(node.property) && _lodashLangIsNumber2[\"default\"](node.property.value)) {\n    computed = true;\n  }\n\n  if (computed) {\n    this.push(\"[\");\n    print.plain(node.property);\n    this.push(\"]\");\n  } else {\n    if (t.isLiteral(node.object)) {\n      var val = this._Literal(node.object);\n      if (_isInteger2[\"default\"](+val) && !ZERO_DECIMAL_INTEGER.test(val) && !SCIENTIFIC_NOTATION.test(val) && !this.endsWith(\".\") && !NON_DECIMAL_NUMERIC_LITERAL.test(val)) {\n        this.push(\".\");\n      }\n    }\n\n    this.push(\".\");\n    print.plain(node.property);\n  }\n}\n\n/**\n * Print MetaProperty, prints meta and property.\n */\n\nfunction MetaProperty(node, print) {\n  print.plain(node.meta);\n  this.push(\".\");\n  print.plain(node.property);\n}"]}