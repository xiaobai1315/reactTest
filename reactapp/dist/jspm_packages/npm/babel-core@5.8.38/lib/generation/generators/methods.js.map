{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/generation/generators/methods.js"],"names":["exports","__esModule","_params","_method","FunctionExpression","ArrowFunctionExpression","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_types","require","t","node","print","_this","plain","typeParameters","push","list","params","iterator","optional","typeAnnotation","returnType","value","kind","generator","async","computed","space","body","id","FunctionDeclaration","length","isIdentifier","bodyNeedsParens","isObjectExpression"],"mappings":"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","file":"methods.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\nexports._params = _params;\nexports._method = _method;\nexports.FunctionExpression = FunctionExpression;\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Prints nodes with params, prints typeParameters, params, and returnType, handles optional params.\n */\n\nfunction _params(node, print) {\n  // istanbul ignore next\n\n  var _this = this;\n\n  print.plain(node.typeParameters);\n  this.push(\"(\");\n  print.list(node.params, {\n    iterator: function iterator(node) {\n      if (node.optional) _this.push(\"?\");\n      print.plain(node.typeAnnotation);\n    }\n  });\n  this.push(\")\");\n\n  if (node.returnType) {\n    print.plain(node.returnType);\n  }\n}\n\n/**\n * Prints method-like nodes, prints key, value, and body, handles async, generator, computed, and get or set.\n */\n\nfunction _method(node, print) {\n  var value = node.value;\n  var kind = node.kind;\n  var key = node.key;\n\n  if (kind === \"method\" || kind === \"init\") {\n    if (value.generator) {\n      this.push(\"*\");\n    }\n  }\n\n  if (kind === \"get\" || kind === \"set\") {\n    this.push(kind + \" \");\n  }\n\n  if (value.async) this.push(\"async \");\n\n  if (node.computed) {\n    this.push(\"[\");\n    print.plain(key);\n    this.push(\"]\");\n  } else {\n    print.plain(key);\n  }\n\n  this._params(value, print);\n  this.space();\n  print.plain(value.body);\n}\n\n/**\n * Prints FunctionExpression, prints id and body, handles async and generator.\n */\n\nfunction FunctionExpression(node, print) {\n  if (node.async) this.push(\"async \");\n  this.push(\"function\");\n  if (node.generator) this.push(\"*\");\n\n  if (node.id) {\n    this.push(\" \");\n    print.plain(node.id);\n  } else {\n    this.space();\n  }\n\n  this._params(node, print);\n  this.space();\n  print.plain(node.body);\n}\n\n/**\n * Alias FunctionExpression printer as FunctionDeclaration.\n */\n\nexports.FunctionDeclaration = FunctionExpression;\n\n/**\n * Prints ArrowFunctionExpression, prints params and body, handles async.\n * Leaves out parentheses when single param.\n */\n\nfunction ArrowFunctionExpression(node, print) {\n  if (node.async) this.push(\"async \");\n\n  if (node.params.length === 1 && t.isIdentifier(node.params[0])) {\n    print.plain(node.params[0]);\n  } else {\n    this._params(node, print);\n  }\n\n  this.push(\" => \");\n\n  var bodyNeedsParens = t.isObjectExpression(node.body);\n\n  if (bodyNeedsParens) {\n    this.push(\"(\");\n  }\n\n  print.plain(node.body);\n\n  if (bodyNeedsParens) {\n    this.push(\")\");\n  }\n}"]}