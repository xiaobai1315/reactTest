{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/generation/generators/template-literals.js"],"names":["exports","__esModule","TaggedTemplateExpression","TemplateElement","TemplateLiteral","node","print","plain","tag","quasi","_push","value","raw","push","quasis","len","length","i","expressions"],"mappings":"AAAA;AACA;AACA;;;;AAIA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACAD,QAAQE,wBAAR,GAAmCA,wBAAnC;AACAF,QAAQG,eAAR,GAA0BA,eAA1B;AACAH,QAAQI,eAAR,GAA0BA,eAA1B;;AAEA,SAASF,wBAAT,CAAkCG,IAAlC,EAAwCC,KAAxC,EAA+C;AAC7CA,QAAMC,KAAN,CAAYF,KAAKG,GAAjB;AACAF,QAAMC,KAAN,CAAYF,KAAKI,KAAjB;AACD;;AAED;;;;AAIA,SAASN,eAAT,CAAyBE,IAAzB,EAA+B;AAC7B,OAAKK,KAAL,CAAWL,KAAKM,KAAL,CAAWC,GAAtB;AACD;;AAED;;;;AAIA,SAASR,eAAT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;AACpC,OAAKO,IAAL,CAAU,GAAV;;AAEA,MAAIC,SAAST,KAAKS,MAAlB;AACA,MAAIC,MAAMD,OAAOE,MAAjB;;AAEA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,GAApB,EAAyBE,GAAzB,EAA8B;AAC5BX,UAAMC,KAAN,CAAYO,OAAOG,CAAP,CAAZ;;AAEA,QAAIA,IAAI,CAAJ,GAAQF,GAAZ,EAAiB;AACf,WAAKF,IAAL,CAAU,KAAV;AACAP,YAAMC,KAAN,CAAYF,KAAKa,WAAL,CAAiBD,CAAjB,CAAZ;AACA,WAAKJ,IAAL,CAAU,IAAV;AACD;AACF;;AAED,OAAKH,KAAL,CAAW,GAAX;AACD","file":"template-literals.js","sourcesContent":["/* */ \n\"format cjs\";\n/**\n * Prints TaggedTemplateExpression, prints tag and quasi.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nexports.TemplateElement = TemplateElement;\nexports.TemplateLiteral = TemplateLiteral;\n\nfunction TaggedTemplateExpression(node, print) {\n  print.plain(node.tag);\n  print.plain(node.quasi);\n}\n\n/**\n * Prints TemplateElement, prints value.\n */\n\nfunction TemplateElement(node) {\n  this._push(node.value.raw);\n}\n\n/**\n * Prints TemplateLiteral, prints quasis, and expressions.\n */\n\nfunction TemplateLiteral(node, print) {\n  this.push(\"`\");\n\n  var quasis = node.quasis;\n  var len = quasis.length;\n\n  for (var i = 0; i < len; i++) {\n    print.plain(quasis[i]);\n\n    if (i + 1 < len) {\n      this.push(\"${ \");\n      print.plain(node.expressions[i]);\n      this.push(\" }\");\n    }\n  }\n\n  this._push(\"`\");\n}"]}