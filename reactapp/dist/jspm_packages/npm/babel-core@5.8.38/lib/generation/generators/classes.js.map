{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/generation/generators/classes.js"],"names":["exports","__esModule","ClassDeclaration","ClassBody","ClassProperty","MethodDefinition","node","print","list","decorators","separator","push","id","plain","typeParameters","superClass","superTypeParameters","join","space","body","ClassExpression","length","printInnerComments","newline","indent","sequence","dedent","rightBrace","key","typeAnnotation","value","semicolon","_method"],"mappings":"AAAA;AACA;AACA;;;;AAIA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACAD,QAAQE,gBAAR,GAA2BA,gBAA3B;AACAF,QAAQG,SAAR,GAAoBA,SAApB;AACAH,QAAQI,aAAR,GAAwBA,aAAxB;AACAJ,QAAQK,gBAAR,GAA2BA,gBAA3B;;AAEA,SAASH,gBAAT,CAA0BI,IAA1B,EAAgCC,KAAhC,EAAuC;AACrCA,QAAMC,IAAN,CAAWF,KAAKG,UAAhB,EAA4B,EAAEC,WAAW,EAAb,EAA5B;AACA,OAAKC,IAAL,CAAU,OAAV;;AAEA,MAAIL,KAAKM,EAAT,EAAa;AACX,SAAKD,IAAL,CAAU,GAAV;AACAJ,UAAMM,KAAN,CAAYP,KAAKM,EAAjB;AACD;;AAEDL,QAAMM,KAAN,CAAYP,KAAKQ,cAAjB;;AAEA,MAAIR,KAAKS,UAAT,EAAqB;AACnB,SAAKJ,IAAL,CAAU,WAAV;AACAJ,UAAMM,KAAN,CAAYP,KAAKS,UAAjB;AACAR,UAAMM,KAAN,CAAYP,KAAKU,mBAAjB;AACD;;AAED,MAAIV,KAAK,YAAL,CAAJ,EAAwB;AACtB,SAAKK,IAAL,CAAU,cAAV;AACAJ,UAAMU,IAAN,CAAWX,KAAK,YAAL,CAAX,EAA+B,EAAEI,WAAW,IAAb,EAA/B;AACD;;AAED,OAAKQ,KAAL;AACAX,QAAMM,KAAN,CAAYP,KAAKa,IAAjB;AACD;;AAED;;;;AAIAnB,QAAQoB,eAAR,GAA0BlB,gBAA1B;;AAEA;;;;AAIA,SAASC,SAAT,CAAmBG,IAAnB,EAAyBC,KAAzB,EAAgC;AAC9B,OAAKI,IAAL,CAAU,GAAV;AACA,MAAIL,KAAKa,IAAL,CAAUE,MAAV,KAAqB,CAAzB,EAA4B;AAC1Bd,UAAMe,kBAAN;AACA,SAAKX,IAAL,CAAU,GAAV;AACD,GAHD,MAGO;AACL,SAAKY,OAAL;;AAEA,SAAKC,MAAL;AACAjB,UAAMkB,QAAN,CAAenB,KAAKa,IAApB;AACA,SAAKO,MAAL;;AAEA,SAAKC,UAAL;AACD;AACF;;AAED;;;;;AAKA,SAASvB,aAAT,CAAuBE,IAAvB,EAA6BC,KAA7B,EAAoC;AAClCA,QAAMC,IAAN,CAAWF,KAAKG,UAAhB,EAA4B,EAAEC,WAAW,EAAb,EAA5B;;AAEA,MAAIJ,KAAK,QAAL,CAAJ,EAAoB,KAAKK,IAAL,CAAU,SAAV;AACpBJ,QAAMM,KAAN,CAAYP,KAAKsB,GAAjB;AACArB,QAAMM,KAAN,CAAYP,KAAKuB,cAAjB;AACA,MAAIvB,KAAKwB,KAAT,EAAgB;AACd,SAAKZ,KAAL;AACA,SAAKP,IAAL,CAAU,GAAV;AACA,SAAKO,KAAL;AACAX,UAAMM,KAAN,CAAYP,KAAKwB,KAAjB;AACD;AACD,OAAKC,SAAL;AACD;;AAED;;;;AAIA,SAAS1B,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuC;AACrCA,QAAMC,IAAN,CAAWF,KAAKG,UAAhB,EAA4B,EAAEC,WAAW,EAAb,EAA5B;;AAEA,MAAIJ,KAAK,QAAL,CAAJ,EAAoB;AAClB,SAAKK,IAAL,CAAU,SAAV;AACD;;AAED,OAAKqB,OAAL,CAAa1B,IAAb,EAAmBC,KAAnB;AACD","file":"classes.js","sourcesContent":["/* */ \n\"format cjs\";\n/**\n * Print ClassDeclaration, prints decorators, typeParameters, extends, implements, and body.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.ClassDeclaration = ClassDeclaration;\nexports.ClassBody = ClassBody;\nexports.ClassProperty = ClassProperty;\nexports.MethodDefinition = MethodDefinition;\n\nfunction ClassDeclaration(node, print) {\n  print.list(node.decorators, { separator: \"\" });\n  this.push(\"class\");\n\n  if (node.id) {\n    this.push(\" \");\n    print.plain(node.id);\n  }\n\n  print.plain(node.typeParameters);\n\n  if (node.superClass) {\n    this.push(\" extends \");\n    print.plain(node.superClass);\n    print.plain(node.superTypeParameters);\n  }\n\n  if (node[\"implements\"]) {\n    this.push(\" implements \");\n    print.join(node[\"implements\"], { separator: \", \" });\n  }\n\n  this.space();\n  print.plain(node.body);\n}\n\n/**\n * Alias ClassDeclaration printer as ClassExpression.\n */\n\nexports.ClassExpression = ClassDeclaration;\n\n/**\n * Print ClassBody, collapses empty blocks, prints body.\n */\n\nfunction ClassBody(node, print) {\n  this.push(\"{\");\n  if (node.body.length === 0) {\n    print.printInnerComments();\n    this.push(\"}\");\n  } else {\n    this.newline();\n\n    this.indent();\n    print.sequence(node.body);\n    this.dedent();\n\n    this.rightBrace();\n  }\n}\n\n/**\n * Print ClassProperty, prints decorators, static, key, typeAnnotation, and value.\n * Also: semicolons, deal with it.\n */\n\nfunction ClassProperty(node, print) {\n  print.list(node.decorators, { separator: \"\" });\n\n  if (node[\"static\"]) this.push(\"static \");\n  print.plain(node.key);\n  print.plain(node.typeAnnotation);\n  if (node.value) {\n    this.space();\n    this.push(\"=\");\n    this.space();\n    print.plain(node.value);\n  }\n  this.semicolon();\n}\n\n/**\n * Print MethodDefinition, prints decorations, static, and method.\n */\n\nfunction MethodDefinition(node, print) {\n  print.list(node.decorators, { separator: \"\" });\n\n  if (node[\"static\"]) {\n    this.push(\"static \");\n  }\n\n  this._method(node, print);\n}"]}