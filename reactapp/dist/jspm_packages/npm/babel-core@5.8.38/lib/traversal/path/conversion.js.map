{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/traversal/path/conversion.js"],"names":["exports","__esModule","toComputedKey","ensureBlock","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_types","require","t","node","isMemberExpression","property","isProperty","ReferenceError","computed","isIdentifier","literal","name"],"mappings":"AAAA;AACA;AACA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACAD,QAAQE,aAAR,GAAwBA,aAAxB;AACAF,QAAQG,WAAR,GAAsBA,WAAtB;AACA;;AAEA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,OAAOA,IAAIJ,UAAf,EAA2B;AAAE,WAAOI,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIC,SAAS,EAAb,CAAiB,IAAID,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AAAE,YAAIG,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,GAA1C,CAAJ,EAAoDD,OAAOC,GAAP,IAAcF,IAAIE,GAAJ,CAAd;AAAyB;AAAE,KAACD,OAAO,SAAP,IAAoBD,GAApB,CAAyB,OAAOC,MAAP;AAAgB;AAAE;;AAEhR,IAAIM,SAASC,QAAQ,aAAR,CAAb;;AAEA,IAAIC,IAAIV,wBAAwBQ,MAAxB,CAAR;;AAEA;;;;AAIA,SAASV,aAAT,GAAyB;AACvB,MAAIa,OAAO,KAAKA,IAAhB;;AAEA,MAAIR,GAAJ;AACA,MAAI,KAAKS,kBAAL,EAAJ,EAA+B;AAC7BT,UAAMQ,KAAKE,QAAX;AACD,GAFD,MAEO,IAAI,KAAKC,UAAL,EAAJ,EAAuB;AAC5BX,UAAMQ,KAAKR,GAAX;AACD,GAFM,MAEA;AACL,UAAM,IAAIY,cAAJ,CAAmB,MAAnB,CAAN;AACD;;AAED,MAAI,CAACJ,KAAKK,QAAV,EAAoB;AAClB,QAAIN,EAAEO,YAAF,CAAed,GAAf,CAAJ,EAAyBA,MAAMO,EAAEQ,OAAF,CAAUf,IAAIgB,IAAd,CAAN;AAC1B;;AAED,SAAOhB,GAAP;AACD;;AAED;;;;AAIA,SAASJ,WAAT,GAAuB;AACrB,SAAOW,EAAEX,WAAF,CAAc,KAAKY,IAAnB,CAAP;AACD","file":"conversion.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * [Please add a description.]\n */\n\nfunction toComputedKey() {\n  var node = this.node;\n\n  var key;\n  if (this.isMemberExpression()) {\n    key = node.property;\n  } else if (this.isProperty()) {\n    key = node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!node.computed) {\n    if (t.isIdentifier(key)) key = t.literal(key.name);\n  }\n\n  return key;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction ensureBlock() {\n  return t.ensureBlock(this.node);\n}"]}