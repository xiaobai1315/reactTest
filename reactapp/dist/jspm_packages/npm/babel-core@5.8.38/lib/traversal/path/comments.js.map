{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/traversal/path/comments.js"],"names":["exports","__esModule","shareCommentsWithSiblings","addComment","addComments","node","trailing","trailingComments","leading","leadingComments","prev","getSibling","key","next","type","content","line","value","comments","concat"],"mappings":"AAAA;AACA;AACA;;;;AAIA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACAD,QAAQE,yBAAR,GAAoCA,yBAApC;AACAF,QAAQG,UAAR,GAAqBA,UAArB;AACAH,QAAQI,WAAR,GAAsBA,WAAtB;;AAEA,SAASF,yBAAT,GAAqC;AACnC,MAAIG,OAAO,KAAKA,IAAhB;AACA,MAAI,CAACA,IAAL,EAAW;;AAEX,MAAIC,WAAWD,KAAKE,gBAApB;AACA,MAAIC,UAAUH,KAAKI,eAAnB;AACA,MAAI,CAACH,QAAD,IAAa,CAACE,OAAlB,EAA2B;;AAE3B,MAAIE,OAAO,KAAKC,UAAL,CAAgB,KAAKC,GAAL,GAAW,CAA3B,CAAX;AACA,MAAIC,OAAO,KAAKF,UAAL,CAAgB,KAAKC,GAAL,GAAW,CAA3B,CAAX;;AAEA,MAAI,CAACF,KAAKL,IAAV,EAAgBK,OAAOG,IAAP;AAChB,MAAI,CAACA,KAAKR,IAAV,EAAgBQ,OAAOH,IAAP;;AAEhBA,OAAKN,WAAL,CAAiB,UAAjB,EAA6BI,OAA7B;AACAK,OAAKT,WAAL,CAAiB,SAAjB,EAA4BE,QAA5B;AACD;;AAED;;;;AAIA,SAASH,UAAT,CAAoBW,IAApB,EAA0BC,OAA1B,EAAmCC,IAAnC,EAAyC;AACvC,OAAKZ,WAAL,CAAiBU,IAAjB,EAAuB,CAAC;AACtBA,UAAME,OAAO,aAAP,GAAuB,cADP;AAEtBC,WAAOF;AAFe,GAAD,CAAvB;AAID;;AAED;;;;AAIA,SAASX,WAAT,CAAqBU,IAArB,EAA2BI,QAA3B,EAAqC;AACnC,MAAI,CAACA,QAAL,EAAe;;AAEf,MAAIb,OAAO,KAAKA,IAAhB;AACA,MAAI,CAACA,IAAL,EAAW;;AAEX,MAAIO,MAAME,OAAO,UAAjB;;AAEA,MAAIT,KAAKO,GAAL,CAAJ,EAAe;AACbP,SAAKO,GAAL,IAAYP,KAAKO,GAAL,EAAUO,MAAV,CAAiBD,QAAjB,CAAZ;AACD,GAFD,MAEO;AACLb,SAAKO,GAAL,IAAYM,QAAZ;AACD;AACF","file":"comments.js","sourcesContent":["/* */ \n\"format cjs\";\n/**\n * Share comments amongst siblings.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\n\nfunction shareCommentsWithSiblings() {\n  var node = this.node;\n  if (!node) return;\n\n  var trailing = node.trailingComments;\n  var leading = node.leadingComments;\n  if (!trailing && !leading) return;\n\n  var prev = this.getSibling(this.key - 1);\n  var next = this.getSibling(this.key + 1);\n\n  if (!prev.node) prev = next;\n  if (!next.node) next = prev;\n\n  prev.addComments(\"trailing\", leading);\n  next.addComments(\"leading\", trailing);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction addComment(type, content, line) {\n  this.addComments(type, [{\n    type: line ? \"CommentLine\" : \"CommentBlock\",\n    value: content\n  }]);\n}\n\n/**\n * Give node `comments` of the specified `type`.\n */\n\nfunction addComments(type, comments) {\n  if (!comments) return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var key = type + \"Comments\";\n\n  if (node[key]) {\n    node[key] = node[key].concat(comments);\n  } else {\n    node[key] = comments;\n  }\n}"]}