{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/traversal/path/modification.js"],"names":["exports","__esModule","insertBefore","_containerInsert","_containerInsertBefore","_containerInsertAfter","_maybePopFromStatements","insertAfter","updateSiblingKeys","_verifyNodeList","unshiftContainer","pushContainer","hoist","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_interopRequireDefault","_libHoister","require","_libHoister2","_index","_index2","_types","t","nodes","_assertUnremoved","parentPath","isExpressionStatement","isLabeledStatement","isNodeType","isForStatement","node","push","replaceExpressionWithStatements","Array","isArray","container","isStatementOrBlock","blockStatement","Error","from","length","paths","i","to","splice","context","path","create","parent","listKey","queueNode","get","last","isIdentifier","expression","isCompletionRecord","pop","temp","scope","generateDeclaredUidIdentifier","unshift","expressionStatement","assignmentExpression","fromIndex","incrementBy","_paths","constructor","type","replaceWith","arguments","undefined","hoister","run"],"mappings":"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","file":"modification.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports._maybePopFromStatements = _maybePopFromStatements;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _libHoister = require(\"./lib/hoister\");\n\nvar _libHoister2 = _interopRequireDefault(_libHoister);\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Insert the provided nodes before the current one.\n */\n\nfunction insertBefore(nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {\n    return this.parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") || this.parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    this.replaceExpressionWithStatements(nodes);\n  } else {\n    this._maybePopFromStatements(nodes);\n    if (Array.isArray(this.container)) {\n      return this._containerInsertBefore(nodes);\n    } else if (this.isStatementOrBlock()) {\n      if (this.node) nodes.push(this.node);\n      this.node = this.container[this.key] = t.blockStatement(nodes);\n    } else {\n      throw new Error(\"We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\");\n    }\n  }\n\n  return [this];\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n\n  var paths = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    var to = from + i;\n    var node = nodes[i];\n    this.container.splice(to, 0, node);\n\n    if (this.context) {\n      var path = this.context.create(this.parent, this.container, to, this.listKey);\n      paths.push(path);\n      this.queueNode(path);\n    } else {\n      paths.push(_index2[\"default\"].get({\n        parentPath: this,\n        parent: node,\n        container: this.container,\n        listKey: this.listKey,\n        key: to\n      }));\n    }\n  }\n\n  return paths;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction _maybePopFromStatements(nodes) {\n  var last = nodes[nodes.length - 1];\n  if (t.isExpressionStatement(last) && t.isIdentifier(last.expression) && !this.isCompletionRecord()) {\n    nodes.pop();\n  }\n}\n\n/**\n * Insert the provided nodes after the current one. When inserting nodes after an\n * expression, ensure that the completion record is correct by pushing the current node.\n */\n\nfunction insertAfter(nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {\n    return this.parentPath.insertAfter(nodes);\n  } else if (this.isNodeType(\"Expression\") || this.parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      var temp = this.scope.generateDeclaredUidIdentifier();\n      nodes.unshift(t.expressionStatement(t.assignmentExpression(\"=\", temp, this.node)));\n      nodes.push(t.expressionStatement(temp));\n    }\n    this.replaceExpressionWithStatements(nodes);\n  } else {\n    this._maybePopFromStatements(nodes);\n    if (Array.isArray(this.container)) {\n      return this._containerInsertAfter(nodes);\n    } else if (this.isStatementOrBlock()) {\n      if (this.node) nodes.unshift(this.node);\n      this.node = this.container[this.key] = t.blockStatement(nodes);\n    } else {\n      throw new Error(\"We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\");\n    }\n  }\n\n  return [this];\n}\n\n/**\n * Update all sibling node paths after `fromIndex` by `incrementBy`.\n */\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  var paths = this.parent._paths;\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction _verifyNodeList(nodes) {\n  if (nodes.constructor !== Array) {\n    nodes = [nodes];\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (!node) {\n      throw new Error(\"Node list has falsy node with the index of \" + i);\n    } else if (typeof node !== \"object\") {\n      throw new Error(\"Node list contains a non-object node with the index of \" + i);\n    } else if (!node.type) {\n      throw new Error(\"Node list contains a node without a type with the index of \" + i);\n    } else if (node instanceof _index2[\"default\"]) {\n      nodes[i] = node.node;\n    }\n  }\n\n  return nodes;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  // get the first path and insert our nodes before it, if it doesn't exist then it\n  // doesn't matter, our nodes will be inserted anyway\n\n  var container = this.node[listKey];\n  var path = _index2[\"default\"].get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey: listKey,\n    key: 0\n  });\n\n  return path.insertBefore(nodes);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  // get an invisible path that represents the last node + 1 and replace it with our\n  // nodes, effectively inlining it\n\n  var container = this.node[listKey];\n  var i = container.length;\n  var path = _index2[\"default\"].get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey: listKey,\n    key: i\n  });\n\n  return path.replaceWith(nodes, true);\n}\n\n/**\n * Hoist the current node to the highest scope possible and return a UID\n * referencing it.\n */\n\nfunction hoist() {\n  var scope = arguments.length <= 0 || arguments[0] === undefined ? this.scope : arguments[0];\n\n  var hoister = new _libHoister2[\"default\"](this, scope);\n  return hoister.run();\n}"]}