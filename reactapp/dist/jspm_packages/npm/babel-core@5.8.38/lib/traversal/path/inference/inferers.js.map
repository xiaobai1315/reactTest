{"version":3,"sources":["../../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/traversal/path/inference/inferers.js"],"names":["exports","__esModule","VariableDeclarator","TypeCastExpression","NewExpression","TemplateLiteral","UnaryExpression","BinaryExpression","LogicalExpression","ConditionalExpression","SequenceExpression","AssignmentExpression","UpdateExpression","Literal","ObjectExpression","ArrayExpression","RestElement","CallExpression","TaggedTemplateExpression","_interopRequire","obj","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","call","_types","require","t","_infererReference","Identifier","id","get","isIdentifier","getTypeAnnotation","node","typeAnnotation","validParent","genericTypeAnnotation","callee","stringTypeAnnotation","operator","voidTypeAnnotation","NUMBER_UNARY_OPERATORS","indexOf","numberTypeAnnotation","STRING_UNARY_OPERATORS","BOOLEAN_UNARY_OPERATORS","booleanTypeAnnotation","NUMBER_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","right","left","isBaseType","unionTypeAnnotation","createUnionTypeAnnotation","pop","value","regex","identifier","Func","Function","Class","resolveCall","resolve","isFunction","is","returnType"],"mappings":"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","file":"inferers.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.Literal = Literal;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\n// istanbul ignore next\n\nfunction _interopRequire(obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; }\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\nvar _infererReference = require(\"./inferer-reference\");\n\nexports.Identifier = _interopRequire(_infererReference);\n\n/**\n * [Please add a description.]\n */\n\nfunction VariableDeclarator() {\n  var id = this.get(\"id\");\n\n  if (id.isIdentifier()) {\n    return this.get(\"init\").getTypeAnnotation();\n  } else {\n    return;\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\n/**\n * [Please add a description.]\n */\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    // only resolve identifier callee\n    return t.genericTypeAnnotation(node.callee);\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction TemplateLiteral() {\n  return t.stringTypeAnnotation();\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction UnaryExpression(node) {\n  var operator = node.operator;\n\n  if (operator === \"void\") {\n    return t.voidTypeAnnotation();\n  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.stringTypeAnnotation();\n  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction BinaryExpression(node) {\n  var operator = node.operator;\n\n  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    var right = this.get(\"right\");\n    var left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      // both numbers so this will be a number\n      return t.numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      // one is a string so the result will be a string\n      return t.stringTypeAnnotation();\n    }\n\n    // unsure if left and right are strings or numbers so stay on the safe side\n    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction LogicalExpression() {\n  return t.createUnionTypeAnnotation([this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()]);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction ConditionalExpression() {\n  return t.createUnionTypeAnnotation([this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()]);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction UpdateExpression(node) {\n  var operator = node.operator;\n  if (operator === \"++\" || operator === \"--\") {\n    return t.numberTypeAnnotation();\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction Literal(node) {\n  var value = node.value;\n  if (typeof value === \"string\") return t.stringTypeAnnotation();\n  if (typeof value === \"number\") return t.numberTypeAnnotation();\n  if (typeof value === \"boolean\") return t.booleanTypeAnnotation();\n  if (value === null) return t.voidTypeAnnotation();\n  if (node.regex) return t.genericTypeAnnotation(t.identifier(\"RegExp\"));\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction ObjectExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Object\"));\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction ArrayExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Array\"));\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\n/**\n * [Please add a description.]\n */\n\nfunction Func() {\n  return t.genericTypeAnnotation(t.identifier(\"Function\"));\n}\n\nexports.Function = Func;\nexports.Class = Func;\n\n/**\n * [Please add a description.]\n */\n\nfunction CallExpression() {\n  return resolveCall(this.get(\"callee\"));\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return t.genericTypeAnnotation(t.identifier(\"AsyncIterator\"));\n      } else {\n        return t.genericTypeAnnotation(t.identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {\n        // todo: get union type of all return arguments\n      }\n    }\n  }\n}"]}