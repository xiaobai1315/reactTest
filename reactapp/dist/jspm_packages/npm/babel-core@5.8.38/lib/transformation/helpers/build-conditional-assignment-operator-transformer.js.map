{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/transformation/helpers/build-conditional-assignment-operator-transformer.js"],"names":["exports","__esModule","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_interopRequireDefault","_explodeAssignableExpression","require","_explodeAssignableExpression2","_types","t","opts","buildAssignment","left","right","assignmentExpression","ExpressionStatement","node","parent","scope","file","isCompletionRecord","expr","expression","is","nodes","exploded","push","ifStatement","build","uid","expressionStatement","ref","AssignmentExpression","logicalExpression","module"],"mappings":"AAAA;AACA;AACA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACA;;AAEA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,OAAOA,IAAIF,UAAf,EAA2B;AAAE,WAAOE,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIC,SAAS,EAAb,CAAiB,IAAID,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AAAE,YAAIG,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,GAA1C,CAAJ,EAAoDD,OAAOC,GAAP,IAAcF,IAAIE,GAAJ,CAAd;AAAyB;AAAE,KAACD,OAAO,SAAP,IAAoBD,GAApB,CAAyB,OAAOC,MAAP;AAAgB;AAAE;;AAEhR;;AAEA,SAASM,sBAAT,CAAgCP,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIF,UAAX,GAAwBE,GAAxB,GAA8B,EAAE,WAAWA,GAAb,EAArC;AAA0D;;AAEjG,IAAIQ,+BAA+BC,QAAQ,iCAAR,CAAnC;;AAEA,IAAIC,gCAAgCH,uBAAuBC,4BAAvB,CAApC;;AAEA,IAAIG,SAASF,QAAQ,aAAR,CAAb;;AAEA,IAAIG,IAAIb,wBAAwBY,MAAxB,CAAR;;AAEA;;;;AAIAd,QAAQ,SAAR,IAAqB,UAAUA,OAAV,EAAmBgB,IAAnB,EAAyB;;AAE5C;;;;AAIA,MAAIC,kBAAkB,SAASA,eAAT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;AAC1D,WAAOJ,EAAEK,oBAAF,CAAuB,GAAvB,EAA4BF,IAA5B,EAAkCC,KAAlC,CAAP;AACD,GAFD;;AAIA;;;;AAIAnB,UAAQqB,mBAAR,GAA8B,UAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqC;AACjE;AACA,QAAI,KAAKC,kBAAL,EAAJ,EAA+B;;AAE/B,QAAIC,OAAOL,KAAKM,UAAhB;AACA,QAAI,CAACZ,KAAKa,EAAL,CAAQF,IAAR,EAAcF,IAAd,CAAL,EAA0B;;AAE1B,QAAIK,QAAQ,EAAZ;;AAEA,QAAIC,WAAWlB,8BAA8B,SAA9B,EAAyCc,KAAKT,IAA9C,EAAoDY,KAApD,EAA2DL,IAA3D,EAAiED,KAAjE,CAAf;;AAEAM,UAAME,IAAN,CAAWjB,EAAEkB,WAAF,CAAcjB,KAAKkB,KAAL,CAAWH,SAASI,GAApB,EAAyBV,IAAzB,CAAd,EAA8CV,EAAEqB,mBAAF,CAAsBnB,gBAAgBc,SAASM,GAAzB,EAA8BV,KAAKR,KAAnC,CAAtB,CAA9C,CAAX;;AAEA,WAAOW,KAAP;AACD,GAdD;;AAgBA;;;;AAIA9B,UAAQsC,oBAAR,GAA+B,UAAUhB,IAAV,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqC;AAClE,QAAI,CAACT,KAAKa,EAAL,CAAQP,IAAR,EAAcG,IAAd,CAAL,EAA0B;;AAE1B,QAAIK,QAAQ,EAAZ;AACA,QAAIC,WAAWlB,8BAA8B,SAA9B,EAAyCS,KAAKJ,IAA9C,EAAoDY,KAApD,EAA2DL,IAA3D,EAAiED,KAAjE,CAAf;;AAEAM,UAAME,IAAN,CAAWjB,EAAEwB,iBAAF,CAAoB,IAApB,EAA0BvB,KAAKkB,KAAL,CAAWH,SAASI,GAApB,EAAyBV,IAAzB,CAA1B,EAA0DR,gBAAgBc,SAASM,GAAzB,EAA8Bf,KAAKH,KAAnC,CAA1D,CAAX;;AAEA;AACAW,UAAME,IAAN,CAAWD,SAASM,GAApB;;AAEA,WAAOP,KAAP;AACD,GAZD;AAaD,CA/CD;;AAiDAU,OAAOxC,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"build-conditional-assignment-operator-transformer.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _explodeAssignableExpression = require(\"./explode-assignable-expression\");\n\nvar _explodeAssignableExpression2 = _interopRequireDefault(_explodeAssignableExpression);\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * [Please add a description.]\n */\n\nexports[\"default\"] = function (exports, opts) {\n\n  /**\n   * [Please add a description.]\n   */\n\n  var buildAssignment = function buildAssignment(left, right) {\n    return t.assignmentExpression(\"=\", left, right);\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  exports.ExpressionStatement = function (node, parent, scope, file) {\n    // hit the `AssignmentExpression` one below\n    if (this.isCompletionRecord()) return;\n\n    var expr = node.expression;\n    if (!opts.is(expr, file)) return;\n\n    var nodes = [];\n\n    var exploded = _explodeAssignableExpression2[\"default\"](expr.left, nodes, file, scope);\n\n    nodes.push(t.ifStatement(opts.build(exploded.uid, file), t.expressionStatement(buildAssignment(exploded.ref, expr.right))));\n\n    return nodes;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  exports.AssignmentExpression = function (node, parent, scope, file) {\n    if (!opts.is(node, file)) return;\n\n    var nodes = [];\n    var exploded = _explodeAssignableExpression2[\"default\"](node.left, nodes, file, scope);\n\n    nodes.push(t.logicalExpression(\"&&\", opts.build(exploded.uid, file), buildAssignment(exploded.ref, node.right)));\n\n    // todo: duplicate expression node\n    nodes.push(exploded.ref);\n\n    return nodes;\n  };\n};\n\nmodule.exports = exports[\"default\"];"]}