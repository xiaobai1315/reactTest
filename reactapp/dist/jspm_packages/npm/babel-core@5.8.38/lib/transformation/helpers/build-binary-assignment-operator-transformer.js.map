{"version":3,"sources":["../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/transformation/helpers/build-binary-assignment-operator-transformer.js"],"names":["exports","__esModule","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_interopRequireDefault","_explodeAssignableExpression","require","_explodeAssignableExpression2","_types","t","opts","isAssignment","node","operator","buildAssignment","left","right","assignmentExpression","ExpressionStatement","parent","scope","file","isCompletionRecord","expr","expression","nodes","exploded","push","expressionStatement","ref","build","uid","AssignmentExpression","BinaryExpression","module"],"mappings":"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","file":"build-binary-assignment-operator-transformer.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _explodeAssignableExpression = require(\"./explode-assignable-expression\");\n\nvar _explodeAssignableExpression2 = _interopRequireDefault(_explodeAssignableExpression);\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * [Please add a description.]\n */\n\nexports[\"default\"] = function (opts) {\n  var exports = {};\n\n  /**\n   * [Please add a description.]\n   */\n\n  var isAssignment = function isAssignment(node) {\n    return node.operator === opts.operator + \"=\";\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  var buildAssignment = function buildAssignment(left, right) {\n    return t.assignmentExpression(\"=\", left, right);\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  exports.ExpressionStatement = function (node, parent, scope, file) {\n    // hit the `AssignmentExpression` one below\n    if (this.isCompletionRecord()) return;\n\n    var expr = node.expression;\n    if (!isAssignment(expr)) return;\n\n    var nodes = [];\n    var exploded = _explodeAssignableExpression2[\"default\"](expr.left, nodes, file, scope, true);\n\n    nodes.push(t.expressionStatement(buildAssignment(exploded.ref, opts.build(exploded.uid, expr.right))));\n\n    return nodes;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  exports.AssignmentExpression = function (node, parent, scope, file) {\n    if (!isAssignment(node)) return;\n\n    var nodes = [];\n    var exploded = _explodeAssignableExpression2[\"default\"](node.left, nodes, file, scope);\n    nodes.push(buildAssignment(exploded.ref, opts.build(exploded.uid, node.right)));\n    return nodes;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  exports.BinaryExpression = function (node) {\n    if (node.operator !== opts.operator) return;\n    return opts.build(node.left, node.right);\n  };\n\n  return exports;\n};\n\nmodule.exports = exports[\"default\"];"]}