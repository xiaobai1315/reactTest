{"version":3,"sources":["../../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/transformation/transformers/es7/function-bind.js"],"names":["exports","__esModule","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_types","require","t","metadata","optional","stage","getTempId","scope","id","path","getData","generateDeclaredUidIdentifier","setData","getStaticContext","bind","object","callee","isStatic","inferBindContext","staticContext","tempId","sequenceExpression","assignmentExpression","visitor","CallExpression","node","parent","isBindExpression","context","memberExpression","identifier","arguments","unshift","BindExpression","callExpression"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACA;;AAEA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,OAAOA,IAAIF,UAAf,EAA2B;AAAE,WAAOE,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIC,SAAS,EAAb,CAAiB,IAAID,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AAAE,YAAIG,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,GAA1C,CAAJ,EAAoDD,OAAOC,GAAP,IAAcF,IAAIE,GAAJ,CAAd;AAAyB;AAAE,KAACD,OAAO,SAAP,IAAoBD,GAApB,CAAyB,OAAOC,MAAP;AAAgB;AAAE;;AAEhR,IAAIM,SAASC,QAAQ,gBAAR,CAAb;;AAEA,IAAIC,IAAIV,wBAAwBQ,MAAxB,CAAR;;AAEA,IAAIG,WAAW;AACbC,YAAU,IADG;AAEbC,SAAO;AAFM,CAAf;;AAKAf,QAAQa,QAAR,GAAmBA,QAAnB;AACA;;;;AAIA,SAASG,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAIC,KAAKD,MAAME,IAAN,CAAWC,OAAX,CAAmB,cAAnB,CAAT;AACA,MAAIF,EAAJ,EAAQ,OAAOA,EAAP;;AAERA,OAAKD,MAAMI,6BAAN,CAAoC,SAApC,CAAL;AACA,SAAOJ,MAAME,IAAN,CAAWG,OAAX,CAAmB,cAAnB,EAAmCJ,EAAnC,CAAP;AACD;;AAED;;;;AAIA,SAASK,gBAAT,CAA0BC,IAA1B,EAAgCP,KAAhC,EAAuC;AACrC,MAAIQ,SAASD,KAAKC,MAAL,IAAeD,KAAKE,MAAL,CAAYD,MAAxC;AACA,SAAOR,MAAMU,QAAN,CAAeF,MAAf,KAA0BA,MAAjC;AACD;;AAED;;;;AAIA,SAASG,gBAAT,CAA0BJ,IAA1B,EAAgCP,KAAhC,EAAuC;AACrC,MAAIY,gBAAgBN,iBAAiBC,IAAjB,EAAuBP,KAAvB,CAApB;AACA,MAAIY,aAAJ,EAAmB,OAAOA,aAAP;;AAEnB,MAAIC,SAASd,UAAUC,KAAV,CAAb;AACA,MAAIO,KAAKC,MAAT,EAAiB;AACfD,SAAKE,MAAL,GAAcd,EAAEmB,kBAAF,CAAqB,CAACnB,EAAEoB,oBAAF,CAAuB,GAAvB,EAA4BF,MAA5B,EAAoCN,KAAKC,MAAzC,CAAD,EAAmDD,KAAKE,MAAxD,CAArB,CAAd;AACD,GAFD,MAEO;AACLF,SAAKE,MAAL,CAAYD,MAAZ,GAAqBb,EAAEoB,oBAAF,CAAuB,GAAvB,EAA4BF,MAA5B,EAAoCN,KAAKE,MAAL,CAAYD,MAAhD,CAArB;AACD;AACD,SAAOK,MAAP;AACD;;AAED;;;;AAIA,IAAIG,UAAU;;AAEZ;;;;AAIAC,kBAAgB,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,MAA9B,EAAsCnB,KAAtC,EAA6C;AAC3D,QAAIO,OAAOW,KAAKT,MAAhB;AACA,QAAI,CAACd,EAAEyB,gBAAF,CAAmBb,IAAnB,CAAL,EAA+B;;AAE/B,QAAIc,UAAUV,iBAAiBJ,IAAjB,EAAuBP,KAAvB,CAAd;AACAkB,SAAKT,MAAL,GAAcd,EAAE2B,gBAAF,CAAmBf,KAAKE,MAAxB,EAAgCd,EAAE4B,UAAF,CAAa,MAAb,CAAhC,CAAd;AACAL,SAAKM,SAAL,CAAeC,OAAf,CAAuBJ,OAAvB;AACD,GAbW;;AAeZ;;;;AAIAK,kBAAgB,SAASA,cAAT,CAAwBR,IAAxB,EAA8BC,MAA9B,EAAsCnB,KAAtC,EAA6C;AAC3D,QAAIqB,UAAUV,iBAAiBO,IAAjB,EAAuBlB,KAAvB,CAAd;AACA,WAAOL,EAAEgC,cAAF,CAAiBhC,EAAE2B,gBAAF,CAAmBJ,KAAKT,MAAxB,EAAgCd,EAAE4B,UAAF,CAAa,MAAb,CAAhC,CAAjB,EAAwE,CAACF,OAAD,CAAxE,CAAP;AACD;AAtBW,CAAd;AAwBAtC,QAAQiC,OAAR,GAAkBA,OAAlB","file":"function-bind.js","sourcesContent":["/* */ \n\"format cjs\";\n// https://github.com/zenparsing/es-function-bind\n\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\nvar metadata = {\n  optional: true,\n  stage: 0\n};\n\nexports.metadata = metadata;\n/**\n * [Please add a description.]\n */\n\nfunction getTempId(scope) {\n  var id = scope.path.getData(\"functionBind\");\n  if (id) return id;\n\n  id = scope.generateDeclaredUidIdentifier(\"context\");\n  return scope.path.setData(\"functionBind\", id);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction getStaticContext(bind, scope) {\n  var object = bind.object || bind.callee.object;\n  return scope.isStatic(object) && object;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction inferBindContext(bind, scope) {\n  var staticContext = getStaticContext(bind, scope);\n  if (staticContext) return staticContext;\n\n  var tempId = getTempId(scope);\n  if (bind.object) {\n    bind.callee = t.sequenceExpression([t.assignmentExpression(\"=\", tempId, bind.object), bind.callee]);\n  } else {\n    bind.callee.object = t.assignmentExpression(\"=\", tempId, bind.callee.object);\n  }\n  return tempId;\n}\n\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  CallExpression: function CallExpression(node, parent, scope) {\n    var bind = node.callee;\n    if (!t.isBindExpression(bind)) return;\n\n    var context = inferBindContext(bind, scope);\n    node.callee = t.memberExpression(bind.callee, t.identifier(\"call\"));\n    node.arguments.unshift(context);\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  BindExpression: function BindExpression(node, parent, scope) {\n    var context = inferBindContext(node, scope);\n    return t.callExpression(t.memberExpression(node.callee, t.identifier(\"bind\")), [context]);\n  }\n};\nexports.visitor = visitor;"]}