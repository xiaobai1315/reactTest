{"version":3,"sources":["../../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/transformation/transformers/es6/destructuring.js"],"names":["exports","__esModule","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_messages","require","messages","_types","t","metadata","group","visitor","ForXStatement","node","parent","scope","file","left","isPattern","temp","generateUidIdentifier","variableDeclaration","variableDeclarator","ensureBlock","body","unshift","isVariableDeclaration","pattern","declarations","id","kind","nodes","destructuring","DestructuringTransformer","init","block","concat","Function","hasDestructuring","_arr","params","_i","length","i","ref","isAssignmentPattern","_pattern","inherits","blockHoist","CatchClause","param","AssignmentExpression","operator","isCompletionRecord","parentPath","isExpressionStatement","generateUidIdentifierBasedOnNode","right","push","isArrayExpression","arrays","name","expressionStatement","VariableDeclaration","isForXStatement","variableDeclarationHasPattern","declar","patternId","buildVariableAssignment","isProgram","isBlockStatement","errorWithNode","get","hasRest","elements","isRestElement","arrayUnpackVisitor","ReferencedIdentifier","state","bindings","deopt","stop","opts","op","isMemberExpression","assignmentExpression","_blockHoist","buildVariableDeclaration","isObjectPattern","pushObjectPattern","isArrayPattern","pushArrayPattern","pushAssignmentPattern","toArray","count","isLoose","isIdentifier","valueRef","tempValueRef","tempConditional","conditionalExpression","binaryExpression","identifier","tempValueDefault","pushObjectSpread","objRef","spreadProp","spreadPropIndex","keys","properties","prop","isSpreadProperty","computed","literal","arrayExpression","value","callExpression","addHelper","argument","pushObjectProperty","propRef","isLiteral","memberExpression","isStatic","canUnpackArrayPattern","arr","_arr2","_i2","elem","_arr3","_i3","isSpreadElement","getBindingIdentifiers","traverse","pushUnpackedArrayPattern","slice","arrayRef","elemRef","memo","maybeGenerateMemoised"],"mappings":"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","file":"destructuring.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _messages = require(\"../../../messages\");\n\nvar messages = _interopRequireWildcard(_messages);\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\nvar metadata = {\n  group: \"builtin-advanced\"\n};\n\nexports.metadata = metadata;\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  ForXStatement: function ForXStatement(node, parent, scope, file) {\n    var left = node.left;\n\n    if (t.isPattern(left)) {\n      // for ({ length: k } in { abc: 3 });\n\n      var temp = scope.generateUidIdentifier(\"ref\");\n\n      node.left = t.variableDeclaration(\"var\", [t.variableDeclarator(temp)]);\n\n      this.ensureBlock();\n\n      node.body.body.unshift(t.variableDeclaration(\"var\", [t.variableDeclarator(left, temp)]));\n\n      return;\n    }\n\n    if (!t.isVariableDeclaration(left)) return;\n\n    var pattern = left.declarations[0].id;\n    if (!t.isPattern(pattern)) return;\n\n    var key = scope.generateUidIdentifier(\"ref\");\n    node.left = t.variableDeclaration(left.kind, [t.variableDeclarator(key, null)]);\n\n    var nodes = [];\n\n    var destructuring = new DestructuringTransformer({\n      kind: left.kind,\n      file: file,\n      scope: scope,\n      nodes: nodes\n    });\n\n    destructuring.init(pattern, key);\n\n    this.ensureBlock();\n\n    var block = node.body;\n    block.body = nodes.concat(block.body);\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  Function: function Function(node, parent, scope, file) {\n    var hasDestructuring = false;\n    var _arr = node.params;\n    for (var _i = 0; _i < _arr.length; _i++) {\n      var pattern = _arr[_i];\n      if (t.isPattern(pattern)) {\n        hasDestructuring = true;\n        break;\n      }\n    }\n    if (!hasDestructuring) return;\n\n    var nodes = [];\n\n    for (var i = 0; i < node.params.length; i++) {\n      var pattern = node.params[i];\n      if (!t.isPattern(pattern)) continue;\n\n      var ref = scope.generateUidIdentifier(\"ref\");\n      if (t.isAssignmentPattern(pattern)) {\n        var _pattern = pattern;\n        pattern = pattern.left;\n        _pattern.left = ref;\n      } else {\n        node.params[i] = ref;\n      }\n\n      t.inherits(ref, pattern);\n\n      var destructuring = new DestructuringTransformer({\n        blockHoist: node.params.length - i,\n        nodes: nodes,\n        scope: scope,\n        file: file,\n        kind: \"let\"\n      });\n\n      destructuring.init(pattern, ref);\n    }\n\n    this.ensureBlock();\n\n    var block = node.body;\n    block.body = nodes.concat(block.body);\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  CatchClause: function CatchClause(node, parent, scope, file) {\n    var pattern = node.param;\n    if (!t.isPattern(pattern)) return;\n\n    var ref = scope.generateUidIdentifier(\"ref\");\n    node.param = ref;\n\n    var nodes = [];\n\n    var destructuring = new DestructuringTransformer({\n      kind: \"let\",\n      file: file,\n      scope: scope,\n      nodes: nodes\n    });\n    destructuring.init(pattern, ref);\n\n    node.body.body = nodes.concat(node.body.body);\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  AssignmentExpression: function AssignmentExpression(node, parent, scope, file) {\n    if (!t.isPattern(node.left)) return;\n\n    var nodes = [];\n\n    var destructuring = new DestructuringTransformer({\n      operator: node.operator,\n      file: file,\n      scope: scope,\n      nodes: nodes\n    });\n\n    var ref;\n    if (this.isCompletionRecord() || !this.parentPath.isExpressionStatement()) {\n      ref = scope.generateUidIdentifierBasedOnNode(node.right, \"ref\");\n\n      nodes.push(t.variableDeclaration(\"var\", [t.variableDeclarator(ref, node.right)]));\n\n      if (t.isArrayExpression(node.right)) {\n        destructuring.arrays[ref.name] = true;\n      }\n    }\n\n    destructuring.init(node.left, ref || node.right);\n\n    if (ref) {\n      nodes.push(t.expressionStatement(ref));\n    }\n\n    return nodes;\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  VariableDeclaration: function VariableDeclaration(node, parent, scope, file) {\n    if (t.isForXStatement(parent)) return;\n    if (!variableDeclarationHasPattern(node)) return;\n\n    var nodes = [];\n    var declar;\n\n    for (var i = 0; i < node.declarations.length; i++) {\n      declar = node.declarations[i];\n\n      var patternId = declar.init;\n      var pattern = declar.id;\n\n      var destructuring = new DestructuringTransformer({\n        nodes: nodes,\n        scope: scope,\n        kind: node.kind,\n        file: file\n      });\n\n      if (t.isPattern(pattern)) {\n        destructuring.init(pattern, patternId);\n\n        if (+i !== node.declarations.length - 1) {\n          // we aren't the last declarator so let's just make the\n          // last transformed node inherit from us\n          t.inherits(nodes[nodes.length - 1], declar);\n        }\n      } else {\n        nodes.push(t.inherits(destructuring.buildVariableAssignment(declar.id, declar.init), declar));\n      }\n    }\n\n    if (!t.isProgram(parent) && !t.isBlockStatement(parent)) {\n      // https://github.com/babel/babel/issues/113\n      // for (let [x] = [0]; false;) {}\n\n      declar = null;\n\n      for (i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        declar = declar || t.variableDeclaration(node.kind, []);\n\n        if (!t.isVariableDeclaration(node) && declar.kind !== node.kind) {\n          throw file.errorWithNode(node, messages.get(\"invalidParentForThisNode\"));\n        }\n\n        declar.declarations = declar.declarations.concat(node.declarations);\n      }\n\n      return declar;\n    }\n\n    return nodes;\n  }\n};\n\nexports.visitor = visitor;\n/**\n * Test if a VariableDeclaration's declarations contains any Patterns.\n */\n\nfunction variableDeclarationHasPattern(node) {\n  for (var i = 0; i < node.declarations.length; i++) {\n    if (t.isPattern(node.declarations[i].id)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Test if an ArrayPattern's elements contain any RestElements.\n */\n\nfunction hasRest(pattern) {\n  for (var i = 0; i < pattern.elements.length; i++) {\n    if (t.isRestElement(pattern.elements[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * [Please add a description.]\n */\n\nvar arrayUnpackVisitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  ReferencedIdentifier: function ReferencedIdentifier(node, parent, scope, state) {\n    if (state.bindings[node.name]) {\n      state.deopt = true;\n      this.stop();\n    }\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nvar DestructuringTransformer = (function () {\n  function DestructuringTransformer(opts) {\n    _classCallCheck(this, DestructuringTransformer);\n\n    this.blockHoist = opts.blockHoist;\n    this.operator = opts.operator;\n    this.arrays = {};\n    this.nodes = opts.nodes || [];\n    this.scope = opts.scope;\n    this.file = opts.file;\n    this.kind = opts.kind;\n  }\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.buildVariableAssignment = function buildVariableAssignment(id, init) {\n    var op = this.operator;\n    if (t.isMemberExpression(id)) op = \"=\";\n\n    var node;\n\n    if (op) {\n      node = t.expressionStatement(t.assignmentExpression(op, id, init));\n    } else {\n      node = t.variableDeclaration(this.kind, [t.variableDeclarator(id, init)]);\n    }\n\n    node._blockHoist = this.blockHoist;\n\n    return node;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.buildVariableDeclaration = function buildVariableDeclaration(id, init) {\n    var declar = t.variableDeclaration(\"var\", [t.variableDeclarator(id, init)]);\n    declar._blockHoist = this.blockHoist;\n    return declar;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.push = function push(id, init) {\n    if (t.isObjectPattern(id)) {\n      this.pushObjectPattern(id, init);\n    } else if (t.isArrayPattern(id)) {\n      this.pushArrayPattern(id, init);\n    } else if (t.isAssignmentPattern(id)) {\n      this.pushAssignmentPattern(id, init);\n    } else {\n      this.nodes.push(this.buildVariableAssignment(id, init));\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.toArray = function toArray(node, count) {\n    if (this.file.isLoose(\"es6.destructuring\") || t.isIdentifier(node) && this.arrays[node.name]) {\n      return node;\n    } else {\n      return this.scope.toArray(node, count);\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushAssignmentPattern = function pushAssignmentPattern(pattern, valueRef) {\n    // we need to assign the current value of the assignment to avoid evaluating\n    // it more than once\n\n    var tempValueRef = this.scope.generateUidIdentifierBasedOnNode(valueRef);\n\n    var declar = t.variableDeclaration(\"var\", [t.variableDeclarator(tempValueRef, valueRef)]);\n    declar._blockHoist = this.blockHoist;\n    this.nodes.push(declar);\n\n    //\n\n    var tempConditional = t.conditionalExpression(t.binaryExpression(\"===\", tempValueRef, t.identifier(\"undefined\")), pattern.right, tempValueRef);\n\n    var left = pattern.left;\n    if (t.isPattern(left)) {\n      var tempValueDefault = t.expressionStatement(t.assignmentExpression(\"=\", tempValueRef, tempConditional));\n      tempValueDefault._blockHoist = this.blockHoist;\n\n      this.nodes.push(tempValueDefault);\n      this.push(left, tempValueRef);\n    } else {\n      this.nodes.push(this.buildVariableAssignment(left, tempConditional));\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushObjectSpread = function pushObjectSpread(pattern, objRef, spreadProp, spreadPropIndex) {\n    // get all the keys that appear in this object before the current spread\n\n    var keys = [];\n\n    for (var i = 0; i < pattern.properties.length; i++) {\n      var prop = pattern.properties[i];\n\n      // we've exceeded the index of the spread property to all properties to the\n      // right need to be ignored\n      if (i >= spreadPropIndex) break;\n\n      // ignore other spread properties\n      if (t.isSpreadProperty(prop)) continue;\n\n      var key = prop.key;\n      if (t.isIdentifier(key) && !prop.computed) key = t.literal(prop.key.name);\n      keys.push(key);\n    }\n\n    keys = t.arrayExpression(keys);\n\n    //\n\n    var value = t.callExpression(this.file.addHelper(\"object-without-properties\"), [objRef, keys]);\n    this.nodes.push(this.buildVariableAssignment(spreadProp.argument, value));\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushObjectProperty = function pushObjectProperty(prop, propRef) {\n    if (t.isLiteral(prop.key)) prop.computed = true;\n\n    var pattern = prop.value;\n    var objRef = t.memberExpression(propRef, prop.key, prop.computed);\n\n    if (t.isPattern(pattern)) {\n      this.push(pattern, objRef);\n    } else {\n      this.nodes.push(this.buildVariableAssignment(pattern, objRef));\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushObjectPattern = function pushObjectPattern(pattern, objRef) {\n    // https://github.com/babel/babel/issues/681\n\n    if (!pattern.properties.length) {\n      this.nodes.push(t.expressionStatement(t.callExpression(this.file.addHelper(\"object-destructuring-empty\"), [objRef])));\n    }\n\n    // if we have more than one properties in this pattern and the objectRef is a\n    // member expression then we need to assign it to a temporary variable so it's\n    // only evaluated once\n\n    if (pattern.properties.length > 1 && !this.scope.isStatic(objRef)) {\n      var temp = this.scope.generateUidIdentifierBasedOnNode(objRef);\n      this.nodes.push(this.buildVariableDeclaration(temp, objRef));\n      objRef = temp;\n    }\n\n    //\n\n    for (var i = 0; i < pattern.properties.length; i++) {\n      var prop = pattern.properties[i];\n      if (t.isSpreadProperty(prop)) {\n        this.pushObjectSpread(pattern, objRef, prop, i);\n      } else {\n        this.pushObjectProperty(prop, objRef);\n      }\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.canUnpackArrayPattern = function canUnpackArrayPattern(pattern, arr) {\n    // not an array so there's no way we can deal with this\n    if (!t.isArrayExpression(arr)) return false;\n\n    // pattern has less elements than the array and doesn't have a rest so some\n    // elements wont be evaluated\n    if (pattern.elements.length > arr.elements.length) return;\n    if (pattern.elements.length < arr.elements.length && !hasRest(pattern)) return false;\n\n    var _arr2 = pattern.elements;\n    for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n      var elem = _arr2[_i2];\n      // deopt on holes\n      if (!elem) return false;\n\n      // deopt on member expressions as they may be included in the RHS\n      if (t.isMemberExpression(elem)) return false;\n    }\n\n    var _arr3 = arr.elements;\n    for (var _i3 = 0; _i3 < _arr3.length; _i3++) {\n      var elem = _arr3[_i3];\n      // deopt on spread elements\n      if (t.isSpreadElement(elem)) return false;\n    }\n\n    // deopt on reference to left side identifiers\n    var bindings = t.getBindingIdentifiers(pattern);\n    var state = { deopt: false, bindings: bindings };\n    this.scope.traverse(arr, arrayUnpackVisitor, state);\n    return !state.deopt;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushUnpackedArrayPattern = function pushUnpackedArrayPattern(pattern, arr) {\n    for (var i = 0; i < pattern.elements.length; i++) {\n      var elem = pattern.elements[i];\n      if (t.isRestElement(elem)) {\n        this.push(elem.argument, t.arrayExpression(arr.elements.slice(i)));\n      } else {\n        this.push(elem, arr.elements[i]);\n      }\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushArrayPattern = function pushArrayPattern(pattern, arrayRef) {\n    if (!pattern.elements) return;\n\n    // optimise basic array destructuring of an array expression\n    //\n    // we can't do this to a pattern of unequal size to it's right hand\n    // array expression as then there will be values that wont be evaluated\n    //\n    // eg: var [a, b] = [1, 2];\n\n    if (this.canUnpackArrayPattern(pattern, arrayRef)) {\n      return this.pushUnpackedArrayPattern(pattern, arrayRef);\n    }\n\n    // if we have a rest then we need all the elements so don't tell\n    // `scope.toArray` to only get a certain amount\n\n    var count = !hasRest(pattern) && pattern.elements.length;\n\n    // so we need to ensure that the `arrayRef` is an array, `scope.toArray` will\n    // return a locally bound identifier if it's been inferred to be an array,\n    // otherwise it'll be a call to a helper that will ensure it's one\n\n    var toArray = this.toArray(arrayRef, count);\n\n    if (t.isIdentifier(toArray)) {\n      // we've been given an identifier so it must have been inferred to be an\n      // array\n      arrayRef = toArray;\n    } else {\n      arrayRef = this.scope.generateUidIdentifierBasedOnNode(arrayRef);\n      this.arrays[arrayRef.name] = true;\n      this.nodes.push(this.buildVariableDeclaration(arrayRef, toArray));\n    }\n\n    //\n\n    for (var i = 0; i < pattern.elements.length; i++) {\n      var elem = pattern.elements[i];\n\n      // hole\n      if (!elem) continue;\n\n      var elemRef;\n\n      if (t.isRestElement(elem)) {\n        elemRef = this.toArray(arrayRef);\n\n        if (i > 0) {\n          elemRef = t.callExpression(t.memberExpression(elemRef, t.identifier(\"slice\")), [t.literal(i)]);\n        }\n\n        // set the element to the rest element argument since we've dealt with it\n        // being a rest already\n        elem = elem.argument;\n      } else {\n        elemRef = t.memberExpression(arrayRef, t.literal(i), true);\n      }\n\n      this.push(elem, elemRef);\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.init = function init(pattern, ref) {\n    // trying to destructure a value that we can't evaluate more than once so we\n    // need to save it to a variable\n\n    if (!t.isArrayExpression(ref) && !t.isMemberExpression(ref)) {\n      var memo = this.scope.maybeGenerateMemoised(ref, true);\n      if (memo) {\n        this.nodes.push(this.buildVariableDeclaration(memo, ref));\n        ref = memo;\n      }\n    }\n\n    //\n\n    this.push(pattern, ref);\n\n    return this.nodes;\n  };\n\n  return DestructuringTransformer;\n})();"]}