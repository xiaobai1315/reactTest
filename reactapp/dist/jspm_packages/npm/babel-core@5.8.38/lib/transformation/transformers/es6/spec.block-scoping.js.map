{"version":3,"sources":["../../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/transformation/transformers/es6/spec.block-scoping.js"],"names":["exports","__esModule","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_types","require","t","buildAssert","node","file","callExpression","addHelper","literal","name","references","scope","state","declared","letRefs","getBindingIdentifier","refVisitor","ReferencedIdentifier","parent","isFor","left","assert","skip","isUpdateExpression","_ignoreBlockScopingTDZ","parentPath","replaceWith","sequenceExpression","logicalExpression","AssignmentExpression","exit","nodes","ids","getBindingIdentifiers","id","push","length","map","expressionStatement","metadata","optional","group","visitor","_letReferences","traverse"],"mappings":"AAAA;AACA;AACA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACA;;AAEA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,OAAOA,IAAIF,UAAf,EAA2B;AAAE,WAAOE,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIC,SAAS,EAAb,CAAiB,IAAID,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AAAE,YAAIG,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,GAA1C,CAAJ,EAAoDD,OAAOC,GAAP,IAAcF,IAAIE,GAAJ,CAAd;AAAyB;AAAE,KAACD,OAAO,SAAP,IAAoBD,GAApB,CAAyB,OAAOC,MAAP;AAAgB;AAAE;;AAEhR,IAAIM,SAASC,QAAQ,gBAAR,CAAb;;AAEA,IAAIC,IAAIV,wBAAwBQ,MAAxB,CAAR;;AAEA;;;;AAIA,SAASG,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiC;AAC/B,SAAOH,EAAEI,cAAF,CAAiBD,KAAKE,SAAL,CAAe,yBAAf,CAAjB,EAA4D,CAACH,IAAD,EAAOF,EAAEM,OAAF,CAAUJ,KAAKK,IAAf,CAAP,EAA6BJ,KAAKE,SAAL,CAAe,oBAAf,CAA7B,CAA5D,CAAP;AACD;;AAED;;;;AAIA,SAASG,UAAT,CAAoBN,IAApB,EAA0BO,KAA1B,EAAiCC,KAAjC,EAAwC;AACtC,MAAIC,WAAWD,MAAME,OAAN,CAAcV,KAAKK,IAAnB,CAAf;AACA,MAAI,CAACI,QAAL,EAAe,OAAO,KAAP;;AAEf;AACA,SAAOF,MAAMI,oBAAN,CAA2BX,KAAKK,IAAhC,MAA0CI,QAAjD;AACD;;AAED;;;;AAIA,IAAIG,aAAa;;AAEf;;;;AAIAC,wBAAsB,SAASA,oBAAT,CAA8Bb,IAA9B,EAAoCc,MAApC,EAA4CP,KAA5C,EAAmDC,KAAnD,EAA0D;AAC9E,QAAIV,EAAEiB,KAAF,CAAQD,MAAR,KAAmBA,OAAOE,IAAP,KAAgBhB,IAAvC,EAA6C;;AAE7C,QAAI,CAACM,WAAWN,IAAX,EAAiBO,KAAjB,EAAwBC,KAAxB,CAAL,EAAqC;;AAErC,QAAIS,SAASlB,YAAYC,IAAZ,EAAkBQ,MAAMP,IAAxB,CAAb;;AAEA,SAAKiB,IAAL;;AAEA,QAAIpB,EAAEqB,kBAAF,CAAqBL,MAArB,CAAJ,EAAkC;AAChC,UAAIA,OAAOM,sBAAX,EAAmC;AACnC,WAAKC,UAAL,CAAgBC,WAAhB,CAA4BxB,EAAEyB,kBAAF,CAAqB,CAACN,MAAD,EAASH,MAAT,CAArB,CAA5B;AACD,KAHD,MAGO;AACL,aAAOhB,EAAE0B,iBAAF,CAAoB,IAApB,EAA0BP,MAA1B,EAAkCjB,IAAlC,CAAP;AACD;AACF,GArBc;;AAuBf;;;;AAIAyB,wBAAsB;AACpBC,UAAM,SAASA,IAAT,CAAc1B,IAAd,EAAoBc,MAApB,EAA4BP,KAA5B,EAAmCC,KAAnC,EAA0C;AAC9C,UAAIR,KAAKoB,sBAAT,EAAiC;;AAEjC,UAAIO,QAAQ,EAAZ;AACA,UAAIC,MAAM,KAAKC,qBAAL,EAAV;;AAEA,WAAK,IAAIxB,IAAT,IAAiBuB,GAAjB,EAAsB;AACpB,YAAIE,KAAKF,IAAIvB,IAAJ,CAAT;;AAEA,YAAIC,WAAWwB,EAAX,EAAevB,KAAf,EAAsBC,KAAtB,CAAJ,EAAkC;AAChCmB,gBAAMI,IAAN,CAAWhC,YAAY+B,EAAZ,EAAgBtB,MAAMP,IAAtB,CAAX;AACD;AACF;;AAED,UAAI0B,MAAMK,MAAV,EAAkB;AAChBhC,aAAKoB,sBAAL,GAA8B,IAA9B;AACAO,cAAMI,IAAN,CAAW/B,IAAX;AACA,eAAO2B,MAAMM,GAAN,CAAUnC,EAAEoC,mBAAZ,CAAP;AACD;AACF;AApBmB;AA3BP,CAAjB;;AAmDA,IAAIC,WAAW;AACbC,YAAU,IADG;AAEbC,SAAO;AAFM,CAAf;;AAKAnD,QAAQiD,QAAR,GAAmBA,QAAnB;AACA;;;;AAIA,IAAIG,UAAU;;AAEZ;;;;AAIA,iCAA+B;AAC7BZ,UAAM,SAASA,IAAT,CAAc1B,IAAd,EAAoBc,MAApB,EAA4BP,KAA5B,EAAmCN,IAAnC,EAAyC;AAC7C,UAAIS,UAAUV,KAAKuC,cAAnB;AACA,UAAI,CAAC7B,OAAL,EAAc;;AAEd,WAAK8B,QAAL,CAAc5B,UAAd,EAA0B;AACxBF,iBAASA,OADe;AAExBT,cAAMA;AAFkB,OAA1B;AAID;AAT4B;AANnB,CAAd;AAkBAf,QAAQoD,OAAR,GAAkBA,OAAlB","file":"spec.block-scoping.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * [Please add a description.]\n */\n\nfunction buildAssert(node, file) {\n  return t.callExpression(file.addHelper(\"temporal-assert-defined\"), [node, t.literal(node.name), file.addHelper(\"temporal-undefined\")]);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction references(node, scope, state) {\n  var declared = state.letRefs[node.name];\n  if (!declared) return false;\n\n  // declared node is different in this scope\n  return scope.getBindingIdentifier(node.name) === declared;\n}\n\n/**\n * [Please add a description.]\n */\n\nvar refVisitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  ReferencedIdentifier: function ReferencedIdentifier(node, parent, scope, state) {\n    if (t.isFor(parent) && parent.left === node) return;\n\n    if (!references(node, scope, state)) return;\n\n    var assert = buildAssert(node, state.file);\n\n    this.skip();\n\n    if (t.isUpdateExpression(parent)) {\n      if (parent._ignoreBlockScopingTDZ) return;\n      this.parentPath.replaceWith(t.sequenceExpression([assert, parent]));\n    } else {\n      return t.logicalExpression(\"&&\", assert, node);\n    }\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  AssignmentExpression: {\n    exit: function exit(node, parent, scope, state) {\n      if (node._ignoreBlockScopingTDZ) return;\n\n      var nodes = [];\n      var ids = this.getBindingIdentifiers();\n\n      for (var name in ids) {\n        var id = ids[name];\n\n        if (references(id, scope, state)) {\n          nodes.push(buildAssert(id, state.file));\n        }\n      }\n\n      if (nodes.length) {\n        node._ignoreBlockScopingTDZ = true;\n        nodes.push(node);\n        return nodes.map(t.expressionStatement);\n      }\n    }\n  }\n};\n\nvar metadata = {\n  optional: true,\n  group: \"builtin-advanced\"\n};\n\nexports.metadata = metadata;\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  \"Program|Loop|BlockStatement\": {\n    exit: function exit(node, parent, scope, file) {\n      var letRefs = node._letReferences;\n      if (!letRefs) return;\n\n      this.traverse(refVisitor, {\n        letRefs: letRefs,\n        file: file\n      });\n    }\n  }\n};\nexports.visitor = visitor;"]}