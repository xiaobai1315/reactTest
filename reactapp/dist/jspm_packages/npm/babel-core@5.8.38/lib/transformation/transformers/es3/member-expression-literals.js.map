{"version":3,"sources":["../../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/transformation/transformers/es3/member-expression-literals.js"],"names":["exports","__esModule","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_types","require","t","metadata","group","visitor","MemberExpression","exit","node","prop","property","computed","isIdentifier","isValidIdentifier","name","literal"],"mappings":"AAAA;AACA;AACA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACA;;AAEA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,OAAOA,IAAIF,UAAf,EAA2B;AAAE,WAAOE,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIC,SAAS,EAAb,CAAiB,IAAID,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AAAE,YAAIG,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,GAA1C,CAAJ,EAAoDD,OAAOC,GAAP,IAAcF,IAAIE,GAAJ,CAAd;AAAyB;AAAE,KAACD,OAAO,SAAP,IAAoBD,GAApB,CAAyB,OAAOC,MAAP;AAAgB;AAAE;;AAEhR,IAAIM,SAASC,QAAQ,gBAAR,CAAb;;AAEA,IAAIC,IAAIV,wBAAwBQ,MAAxB,CAAR;;AAEA,IAAIG,WAAW;AACbC,SAAO;AADM,CAAf;;AAIAd,QAAQa,QAAR,GAAmBA,QAAnB;AACA;;;;;;;;;;;;;;;;;;AAkBA,IAAIE,UAAU;;AAEZ;;;;;AAKAC,oBAAkB;AAChBC,UAAM,SAASA,IAAT,CAAcC,IAAd,EAAoB;AACxB,UAAIC,OAAOD,KAAKE,QAAhB;AACA,UAAI,CAACF,KAAKG,QAAN,IAAkBT,EAAEU,YAAF,CAAeH,IAAf,CAAlB,IAA0C,CAACP,EAAEW,iBAAF,CAAoBJ,KAAKK,IAAzB,CAA/C,EAA+E;AAC7E;AACAN,aAAKE,QAAL,GAAgBR,EAAEa,OAAF,CAAUN,KAAKK,IAAf,CAAhB;AACAN,aAAKG,QAAL,GAAgB,IAAhB;AACD;AACF;AARe;AAPN,CAAd;AAkBArB,QAAQe,OAAR,GAAkBA,OAAlB","file":"member-expression-literals.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\nvar metadata = {\n  group: \"builtin-trailing\"\n};\n\nexports.metadata = metadata;\n/**\n * Turn member expression reserved word properties into literals.\n *\n * @example\n *\n * **In**\n *\n * ```javascript\n * foo.catch;\n * ```\n *\n * **Out**\n *\n * ```javascript\n * foo[\"catch\"];\n * ```\n */\n\nvar visitor = {\n\n  /**\n   * Look for non-computed properties with names that are not valid identifiers.\n   * Turn them into computed properties with literal names.\n   */\n\n  MemberExpression: {\n    exit: function exit(node) {\n      var prop = node.property;\n      if (!node.computed && t.isIdentifier(prop) && !t.isValidIdentifier(prop.name)) {\n        // foo.default -> foo[\"default\"]\n        node.property = t.literal(prop.name);\n        node.computed = true;\n      }\n    }\n  }\n};\nexports.visitor = visitor;"]}