{"version":3,"sources":["../../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/transformation/transformers/es6/for-of.js"],"names":["exports","__esModule","_ForOfStatementArray","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_messages","require","messages","_util","util","_types","t","visitor","ForOfStatement","node","parent","scope","file","get","isArrayExpression","callback","spec","isLoose","loose","build","declar","loop","block","body","ensureBlock","push","concat","inherits","replaceParent","parentPath","replaceWithMultiple","dangerouslyRemove","nodes","right","isIdentifier","hasBinding","name","uid","generateUidIdentifier","variableDeclaration","variableDeclarator","iterationKey","template","BODY","KEY","ARR","iterationValue","memberExpression","left","isVariableDeclaration","declarations","init","unshift","expressionStatement","assignmentExpression","isLabeledStatement","labeledStatement","label","id","isPattern","isMemberExpression","kind","errorWithNode","type","iteratorKey","isArrayKey","LOOP_OBJECT","IS_ARRAY","OBJECT","INDEX","ID","shift","stepKey","stepValue","identifier","ITERATOR_HAD_ERROR_KEY","ITERATOR_COMPLETION","ITERATOR_ERROR_KEY","ITERATOR_KEY","STEP_KEY","isLabeledParent","tryBody"],"mappings":"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","file":"for-of.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\nexports._ForOfStatementArray = _ForOfStatementArray;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _messages = require(\"../../../messages\");\n\nvar messages = _interopRequireWildcard(_messages);\n\nvar _util = require(\"../../../util\");\n\nvar util = _interopRequireWildcard(_util);\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  ForOfStatement: function ForOfStatement(node, parent, scope, file) {\n    if (this.get(\"right\").isArrayExpression()) {\n      return _ForOfStatementArray.call(this, node, scope, file);\n    }\n\n    var callback = spec;\n    if (file.isLoose(\"es6.forOf\")) callback = loose;\n\n    var build = callback(node, parent, scope, file);\n    var declar = build.declar;\n    var loop = build.loop;\n    var block = loop.body;\n\n    // ensure that it's a block so we can take all its statements\n    this.ensureBlock();\n\n    // add the value declaration to the new loop body\n    if (declar) {\n      block.body.push(declar);\n    }\n\n    // push the rest of the original loop body onto our new body\n    block.body = block.body.concat(node.body.body);\n\n    t.inherits(loop, node);\n    t.inherits(loop.body, node.body);\n\n    if (build.replaceParent) {\n      this.parentPath.replaceWithMultiple(build.node);\n      this.dangerouslyRemove();\n    } else {\n      return build.node;\n    }\n  }\n};\n\nexports.visitor = visitor;\n/**\n * [Please add a description.]\n */\n\nfunction _ForOfStatementArray(node, scope) {\n  var nodes = [];\n  var right = node.right;\n\n  if (!t.isIdentifier(right) || !scope.hasBinding(right.name)) {\n    var uid = scope.generateUidIdentifier(\"arr\");\n    nodes.push(t.variableDeclaration(\"var\", [t.variableDeclarator(uid, right)]));\n    right = uid;\n  }\n\n  var iterationKey = scope.generateUidIdentifier(\"i\");\n\n  var loop = util.template(\"for-of-array\", {\n    BODY: node.body,\n    KEY: iterationKey,\n    ARR: right\n  });\n\n  t.inherits(loop, node);\n  t.ensureBlock(loop);\n\n  var iterationValue = t.memberExpression(right, iterationKey, true);\n\n  var left = node.left;\n  if (t.isVariableDeclaration(left)) {\n    left.declarations[0].init = iterationValue;\n    loop.body.body.unshift(left);\n  } else {\n    loop.body.body.unshift(t.expressionStatement(t.assignmentExpression(\"=\", left, iterationValue)));\n  }\n\n  if (this.parentPath.isLabeledStatement()) {\n    loop = t.labeledStatement(this.parentPath.node.label, loop);\n  }\n\n  nodes.push(loop);\n\n  return nodes;\n}\n\n/**\n * [Please add a description.]\n */\n\nvar loose = function loose(node, parent, scope, file) {\n  var left = node.left;\n  var declar, id;\n\n  if (t.isIdentifier(left) || t.isPattern(left) || t.isMemberExpression(left)) {\n    // for (i of test), for ({ i } of test)\n    id = left;\n  } else if (t.isVariableDeclaration(left)) {\n    // for (var i of test)\n    id = scope.generateUidIdentifier(\"ref\");\n    declar = t.variableDeclaration(left.kind, [t.variableDeclarator(left.declarations[0].id, id)]);\n  } else {\n    throw file.errorWithNode(left, messages.get(\"unknownForHead\", left.type));\n  }\n\n  var iteratorKey = scope.generateUidIdentifier(\"iterator\");\n  var isArrayKey = scope.generateUidIdentifier(\"isArray\");\n\n  var loop = util.template(\"for-of-loose\", {\n    LOOP_OBJECT: iteratorKey,\n    IS_ARRAY: isArrayKey,\n    OBJECT: node.right,\n    INDEX: scope.generateUidIdentifier(\"i\"),\n    ID: id\n  });\n\n  if (!declar) {\n    // no declaration so we need to remove the variable declaration at the top of\n    // the for-of-loose template\n    loop.body.body.shift();\n  }\n\n  //\n\n  return {\n    declar: declar,\n    node: loop,\n    loop: loop\n  };\n};\n\n/**\n * [Please add a description.]\n */\n\nvar spec = function spec(node, parent, scope, file) {\n  var left = node.left;\n  var declar;\n\n  var stepKey = scope.generateUidIdentifier(\"step\");\n  var stepValue = t.memberExpression(stepKey, t.identifier(\"value\"));\n\n  if (t.isIdentifier(left) || t.isPattern(left) || t.isMemberExpression(left)) {\n    // for (i of test), for ({ i } of test)\n    declar = t.expressionStatement(t.assignmentExpression(\"=\", left, stepValue));\n  } else if (t.isVariableDeclaration(left)) {\n    // for (var i of test)\n    declar = t.variableDeclaration(left.kind, [t.variableDeclarator(left.declarations[0].id, stepValue)]);\n  } else {\n    throw file.errorWithNode(left, messages.get(\"unknownForHead\", left.type));\n  }\n\n  //\n\n  var iteratorKey = scope.generateUidIdentifier(\"iterator\");\n\n  var template = util.template(\"for-of\", {\n    ITERATOR_HAD_ERROR_KEY: scope.generateUidIdentifier(\"didIteratorError\"),\n    ITERATOR_COMPLETION: scope.generateUidIdentifier(\"iteratorNormalCompletion\"),\n    ITERATOR_ERROR_KEY: scope.generateUidIdentifier(\"iteratorError\"),\n    ITERATOR_KEY: iteratorKey,\n    STEP_KEY: stepKey,\n    OBJECT: node.right,\n    BODY: null\n  });\n\n  var isLabeledParent = t.isLabeledStatement(parent);\n\n  var tryBody = template[3].block.body;\n  var loop = tryBody[0];\n\n  if (isLabeledParent) {\n    tryBody[0] = t.labeledStatement(parent.label, loop);\n  }\n\n  //\n\n  return {\n    replaceParent: isLabeledParent,\n    declar: declar,\n    loop: loop,\n    node: template\n  };\n};"]}