{"version":3,"sources":["../../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/transformation/transformers/spec/block-scoped-functions.js"],"names":["exports","__esModule","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_types","require","t","statementList","path","paths","get","i","length","_path","func","node","isFunctionDeclaration","declar","variableDeclaration","variableDeclarator","id","toExpression","_blockHoist","replaceWith","visitor","BlockStatement","parent","isFunction","body","isExportDeclaration","SwitchCase"],"mappings":"AAAA;AACA;AACA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACA;;AAEA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,OAAOA,IAAIF,UAAf,EAA2B;AAAE,WAAOE,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIC,SAAS,EAAb,CAAiB,IAAID,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AAAE,YAAIG,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,GAA1C,CAAJ,EAAoDD,OAAOC,GAAP,IAAcF,IAAIE,GAAJ,CAAd;AAAyB;AAAE,KAACD,OAAO,SAAP,IAAoBD,GAApB,CAAyB,OAAOC,MAAP;AAAgB;AAAE;;AAEhR,IAAIM,SAASC,QAAQ,gBAAR,CAAb;;AAEA,IAAIC,IAAIV,wBAAwBQ,MAAxB,CAAR;;AAEA;;;;AAIA,SAASG,aAAT,CAAuBR,GAAvB,EAA4BS,IAA5B,EAAkC;AAChC,MAAIC,QAAQD,KAAKE,GAAL,CAASX,GAAT,CAAZ;;AAEA,OAAK,IAAIY,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;AACrC,QAAIE,QAAQJ,MAAME,CAAN,CAAZ;;AAEA,QAAIG,OAAOD,MAAME,IAAjB;AACA,QAAI,CAACT,EAAEU,qBAAF,CAAwBF,IAAxB,CAAL,EAAoC;;AAEpC,QAAIG,SAASX,EAAEY,mBAAF,CAAsB,KAAtB,EAA6B,CAACZ,EAAEa,kBAAF,CAAqBL,KAAKM,EAA1B,EAA8Bd,EAAEe,YAAF,CAAeP,IAAf,CAA9B,CAAD,CAA7B,CAAb;;AAEA;AACAG,WAAOK,WAAP,GAAqB,CAArB;;AAEA;AACAR,SAAKM,EAAL,GAAU,IAAV;;AAEAP,UAAMU,WAAN,CAAkBN,MAAlB;AACD;AACF;;AAED;;;;AAIA,IAAIO,UAAU;;AAEZ;;;;AAIAC,kBAAgB,SAASA,cAAT,CAAwBV,IAAxB,EAA8BW,MAA9B,EAAsC;AACpD,QAAIpB,EAAEqB,UAAF,CAAaD,MAAb,KAAwBA,OAAOE,IAAP,KAAgBb,IAAxC,IAAgDT,EAAEuB,mBAAF,CAAsBH,MAAtB,CAApD,EAAmF;AACjF;AACD;;AAEDnB,kBAAc,MAAd,EAAsB,IAAtB;AACD,GAZW;;AAcZ;;;;AAIAuB,cAAY,SAASA,UAAT,GAAsB;AAChCvB,kBAAc,YAAd,EAA4B,IAA5B;AACD;AApBW,CAAd;AAsBAb,QAAQ8B,OAAR,GAAkBA,OAAlB","file":"block-scoped-functions.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * [Please add a description.]\n */\n\nfunction statementList(key, path) {\n  var paths = path.get(key);\n\n  for (var i = 0; i < paths.length; i++) {\n    var _path = paths[i];\n\n    var func = _path.node;\n    if (!t.isFunctionDeclaration(func)) continue;\n\n    var declar = t.variableDeclaration(\"let\", [t.variableDeclarator(func.id, t.toExpression(func))]);\n\n    // hoist it up above everything else\n    declar._blockHoist = 2;\n\n    // todo: name this\n    func.id = null;\n\n    _path.replaceWith(declar);\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  BlockStatement: function BlockStatement(node, parent) {\n    if (t.isFunction(parent) && parent.body === node || t.isExportDeclaration(parent)) {\n      return;\n    }\n\n    statementList(\"body\", this);\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  SwitchCase: function SwitchCase() {\n    statementList(\"consequent\", this);\n  }\n};\nexports.visitor = visitor;"]}