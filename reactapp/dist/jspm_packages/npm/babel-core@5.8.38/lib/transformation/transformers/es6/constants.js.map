{"version":3,"sources":["../../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/transformation/transformers/es6/constants.js"],"names":["exports","__esModule","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_messages","require","messages","visitor","Scope","node","parent","scope","name","bindings","binding","kind","_arr","constantViolations","_i","length","violation","errorWithNode","get","VariableDeclaration"],"mappings":"AAAA;AACA;AACA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACA;;AAEA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,OAAOA,IAAIF,UAAf,EAA2B;AAAE,WAAOE,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIC,SAAS,EAAb,CAAiB,IAAID,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AAAE,YAAIG,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,GAA1C,CAAJ,EAAoDD,OAAOC,GAAP,IAAcF,IAAIE,GAAJ,CAAd;AAAyB;AAAE,KAACD,OAAO,SAAP,IAAoBD,GAApB,CAAyB,OAAOC,MAAP;AAAgB;AAAE;;AAEhR,IAAIM,YAAYC,QAAQ,mBAAR,CAAhB;;AAEA,IAAIC,WAAWV,wBAAwBQ,SAAxB,CAAf;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,IAAIG,UAAU;;AAEZ;;;;;AAKAC,SAAO,SAASA,KAAT,CAAeC,IAAf,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoC;AACzC,SAAK,IAAIC,IAAT,IAAiBD,MAAME,QAAvB,EAAiC;AAC/B,UAAIC,UAAUH,MAAME,QAAN,CAAeD,IAAf,CAAd;;AAEA;AACA,UAAIE,QAAQC,IAAR,KAAiB,OAAjB,IAA4BD,QAAQC,IAAR,KAAiB,QAAjD,EAA2D;;AAE3D,UAAIC,OAAOF,QAAQG,kBAAnB;AACA,WAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKF,KAAKG,MAA3B,EAAmCD,IAAnC,EAAyC;AACvC,YAAIE,YAAYJ,KAAKE,EAAL,CAAhB;AACA,cAAME,UAAUC,aAAV,CAAwBf,SAASgB,GAAT,CAAa,UAAb,EAAyBV,IAAzB,CAAxB,CAAN;AACD;AACF;AACF,GApBW;;AAsBZ;;;;;AAKAW,uBAAqB,SAASA,mBAAT,CAA6Bd,IAA7B,EAAmC;AACtD,QAAIA,KAAKM,IAAL,KAAc,OAAlB,EAA2BN,KAAKM,IAAL,GAAY,KAAZ;AAC5B;AA7BW,CAAd;AA+BArB,QAAQa,OAAR,GAAkBA,OAAlB","file":"constants.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _messages = require(\"../../../messages\");\n\nvar messages = _interopRequireWildcard(_messages);\n\n/**\n * Turn constants into variables.\n * Ensure there are no constant violations in any scope.\n *\n * @example\n *\n * **In**\n *\n * ```javascript\n * const MULTIPLIER = 5;\n * ```\n *\n * **Out**\n *\n * ```javascript\n * var MULTIPLIER = 5;\n * ```\n */\n\nvar visitor = {\n\n  /**\n   * Look for any constants (or modules) in scope.\n   * If they have any `constantViolations` throw an error.\n   */\n\n  Scope: function Scope(node, parent, scope) {\n    for (var name in scope.bindings) {\n      var binding = scope.bindings[name];\n\n      // not a constant\n      if (binding.kind !== \"const\" && binding.kind !== \"module\") continue;\n\n      var _arr = binding.constantViolations;\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var violation = _arr[_i];\n        throw violation.errorWithNode(messages.get(\"readOnly\", name));\n      }\n    }\n  },\n\n  /**\n   * Look for constants.\n   * Turn them into `let` variables.\n   */\n\n  VariableDeclaration: function VariableDeclaration(node) {\n    if (node.kind === \"const\") node.kind = \"let\";\n  }\n};\nexports.visitor = visitor;"]}