{"version":3,"sources":["../../../../../../../../jspm_packages/npm/babel-core@5.8.38/lib/transformation/transformers/es6/modules.js"],"names":["exports","__esModule","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","_types","require","t","keepBlockHoist","node","nodes","_blockHoist","i","length","metadata","group","visitor","ImportDeclaration","parent","scope","file","importKind","specifiers","_arr","_i","specifier","moduleFormatter","importSpecifier","importDeclaration","ExportAllDeclaration","exportAllDeclaration","ExportDefaultDeclaration","exportDeclaration","ExportNamedDeclaration","get","isTypeAlias","declaration","isVariableDeclaration","declar","declarations","init","identifier","exportSpecifier"],"mappings":"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","file":"modules.js","sourcesContent":["/* */ \n\"format cjs\";\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\nfunction keepBlockHoist(node, nodes) {\n  if (node._blockHoist) {\n    for (var i = 0; i < nodes.length; i++) {\n      nodes[i]._blockHoist = node._blockHoist;\n    }\n  }\n}\n\nvar metadata = {\n  group: \"builtin-modules\"\n};\n\nexports.metadata = metadata;\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  ImportDeclaration: function ImportDeclaration(node, parent, scope, file) {\n    // flow type\n    if (node.importKind === \"type\" || node.importKind === \"typeof\") return;\n\n    var nodes = [];\n\n    if (node.specifiers.length) {\n      var _arr = node.specifiers;\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var specifier = _arr[_i];\n        file.moduleFormatter.importSpecifier(specifier, node, nodes, scope);\n      }\n    } else {\n      file.moduleFormatter.importDeclaration(node, nodes, scope);\n    }\n\n    if (nodes.length === 1) {\n      // inherit `_blockHoist` - this is for `_blockHoist` in File.prototype.addImport\n      nodes[0]._blockHoist = node._blockHoist;\n    }\n\n    return nodes;\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  ExportAllDeclaration: function ExportAllDeclaration(node, parent, scope, file) {\n    var nodes = [];\n    file.moduleFormatter.exportAllDeclaration(node, nodes, scope);\n    keepBlockHoist(node, nodes);\n    return nodes;\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  ExportDefaultDeclaration: function ExportDefaultDeclaration(node, parent, scope, file) {\n    var nodes = [];\n    file.moduleFormatter.exportDeclaration(node, nodes, scope);\n    keepBlockHoist(node, nodes);\n    return nodes;\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  ExportNamedDeclaration: function ExportNamedDeclaration(node, parent, scope, file) {\n    // flow type\n    if (this.get(\"declaration\").isTypeAlias()) return;\n\n    var nodes = [];\n\n    if (node.declaration) {\n      // make sure variable exports have an initializer\n      // this is done here to avoid duplicating it in the module formatters\n      if (t.isVariableDeclaration(node.declaration)) {\n        var declar = node.declaration.declarations[0];\n        declar.init = declar.init || t.identifier(\"undefined\");\n      }\n\n      file.moduleFormatter.exportDeclaration(node, nodes, scope);\n    } else if (node.specifiers) {\n      for (var i = 0; i < node.specifiers.length; i++) {\n        file.moduleFormatter.exportSpecifier(node.specifiers[i], node, nodes, scope);\n      }\n    }\n\n    keepBlockHoist(node, nodes);\n\n    return nodes;\n  }\n};\nexports.visitor = visitor;"]}