{"version":3,"sources":["../../../../jspm_packages/npm/history@4.7.2/DOMUtils.js"],"names":["exports","__esModule","canUseDOM","window","document","createElement","addEventListener","node","event","listener","attachEvent","removeEventListener","detachEvent","getConfirmation","message","callback","confirm","supportsHistory","ua","navigator","userAgent","indexOf","history","supportsPopStateOnHashChange","supportsGoWithoutReloadUsingHash","isExtraneousPopstateEvent","state","undefined"],"mappings":"AAAA;AACA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACA,IAAIC,YAAYF,QAAQE,SAAR,GAAoB,CAAC,EAAE,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,OAAOC,QAAxC,IAAoDD,OAAOC,QAAP,CAAgBC,aAAtE,CAArC;;AAEA,IAAIC,mBAAmBN,QAAQM,gBAAR,GAA2B,SAASA,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiD;AACjG,SAAOF,KAAKD,gBAAL,GAAwBC,KAAKD,gBAAL,CAAsBE,KAAtB,EAA6BC,QAA7B,EAAuC,KAAvC,CAAxB,GAAwEF,KAAKG,WAAL,CAAiB,OAAOF,KAAxB,EAA+BC,QAA/B,CAA/E;AACD,CAFD;;AAIA,IAAIE,sBAAsBX,QAAQW,mBAAR,GAA8B,SAASA,mBAAT,CAA6BJ,IAA7B,EAAmCC,KAAnC,EAA0CC,QAA1C,EAAoD;AAC1G,SAAOF,KAAKI,mBAAL,GAA2BJ,KAAKI,mBAAL,CAAyBH,KAAzB,EAAgCC,QAAhC,EAA0C,KAA1C,CAA3B,GAA8EF,KAAKK,WAAL,CAAiB,OAAOJ,KAAxB,EAA+BC,QAA/B,CAArF;AACD,CAFD;;AAIA,IAAII,kBAAkBb,QAAQa,eAAR,GAA0B,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AAC1F,SAAOA,SAASZ,OAAOa,OAAP,CAAeF,OAAf,CAAT,CAAP;AACD,CAFD,C,CAEG;;AAEH;;;;;;;AAOA,IAAIG,kBAAkBjB,QAAQiB,eAAR,GAA0B,SAASA,eAAT,GAA2B;AACzE,MAAIC,KAAKf,OAAOgB,SAAP,CAAiBC,SAA1B;;AAEA,MAAI,CAACF,GAAGG,OAAH,CAAW,YAAX,MAA6B,CAAC,CAA9B,IAAmCH,GAAGG,OAAH,CAAW,aAAX,MAA8B,CAAC,CAAnE,KAAyEH,GAAGG,OAAH,CAAW,eAAX,MAAgC,CAAC,CAA1G,IAA+GH,GAAGG,OAAH,CAAW,QAAX,MAAyB,CAAC,CAAzI,IAA8IH,GAAGG,OAAH,CAAW,eAAX,MAAgC,CAAC,CAAnL,EAAsL,OAAO,KAAP;;AAEtL,SAAOlB,OAAOmB,OAAP,IAAkB,eAAenB,OAAOmB,OAA/C;AACD,CAND;;AAQA;;;;AAIA,IAAIC,+BAA+BvB,QAAQuB,4BAAR,GAAuC,SAASA,4BAAT,GAAwC;AAChH,SAAOpB,OAAOgB,SAAP,CAAiBC,SAAjB,CAA2BC,OAA3B,CAAmC,SAAnC,MAAkD,CAAC,CAA1D;AACD,CAFD;;AAIA;;;AAGA,IAAIG,mCAAmCxB,QAAQwB,gCAAR,GAA2C,SAASA,gCAAT,GAA4C;AAC5H,SAAOrB,OAAOgB,SAAP,CAAiBC,SAAjB,CAA2BC,OAA3B,CAAmC,SAAnC,MAAkD,CAAC,CAA1D;AACD,CAFD;;AAIA;;;;;AAKA,IAAII,4BAA4BzB,QAAQyB,yBAAR,GAAoC,SAASA,yBAAT,CAAmCjB,KAAnC,EAA0C;AAC5G,SAAOA,MAAMkB,KAAN,KAAgBC,SAAhB,IAA6BR,UAAUC,SAAV,CAAoBC,OAApB,CAA4B,OAA5B,MAAyC,CAAC,CAA9E;AACD,CAFD","file":"DOMUtils.js","sourcesContent":["/* */ \n'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\n\nvar removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\n\nvar getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\nvar supportsHistory = exports.supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n\n  return window.history && 'pushState' in window.history;\n};\n\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\nvar supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\nvar supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\nvar isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};"]}