{"version":3,"sources":["../../../../jspm_packages/npm/loose-envify@1.3.1/replace.js"],"names":["process","jsTokens","require","default","processEnvRe","spaceOrCommentRe","replace","src","envs","test","out","purge","some","env","_","indexOf","lastIndex","parts","match","i","length","prevCodeToken","getAdjacentCodeToken","nextCodeToken","replacement","getReplacementString","push","join","dir","part","name","j","JSON","stringify","module","exports"],"mappings":";;AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjB;;AACA,MAAIC,WAAWC,QAAQ,WAAR,EAAqBC,OAApC;AACA,MAAIC,eAAe,oCAAnB;AACA,MAAIC,mBAAmB,gBAAvB;AACA,WAASC,OAAT,CAAiBC,GAAjB,EAAsBC,IAAtB,EAA4B;AAC1B,QAAI,CAACJ,aAAaK,IAAb,CAAkBF,GAAlB,CAAL,EAA6B;AAC3B,aAAOA,GAAP;AACD;AACD,QAAIG,MAAM,EAAV;AACA,QAAIC,QAAQH,KAAKI,IAAL,CAAU,UAASC,GAAT,EAAc;AAClC,aAAOA,IAAIC,CAAJ,IAASD,IAAIC,CAAJ,CAAMC,OAAN,CAAc,OAAd,MAA2B,CAAC,CAA5C;AACD,KAFW,CAAZ;AAGAd,aAASe,SAAT,GAAqB,CAArB;AACA,QAAIC,QAAQV,IAAIW,KAAJ,CAAUjB,QAAV,CAAZ;AACA,SAAK,IAAIkB,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;AACrC,UAAIF,MAAME,CAAN,MAAa,SAAb,IAA0BF,MAAME,IAAI,CAAV,MAAiB,GAA3C,IAAkDF,MAAME,IAAI,CAAV,MAAiB,KAAnE,IAA4EF,MAAME,IAAI,CAAV,MAAiB,GAAjG,EAAsG;AACpG,YAAIE,gBAAgBC,qBAAqB,CAAC,CAAtB,EAAyBL,KAAzB,EAAgCE,CAAhC,CAApB;AACA,YAAII,gBAAgBD,qBAAqB,CAArB,EAAwBL,KAAxB,EAA+BE,IAAI,CAAnC,CAApB;AACA,YAAIK,cAAcC,qBAAqBjB,IAArB,EAA2BS,MAAME,IAAI,CAAV,CAA3B,EAAyCR,KAAzC,CAAlB;AACA,YAAIU,kBAAkB,GAAlB,IAAyBE,kBAAkB,GAA3C,IAAkDA,kBAAkB,GAApE,IAA2E,OAAOC,WAAP,KAAuB,QAAtG,EAAgH;AAC9Gd,cAAIgB,IAAJ,CAASF,WAAT;AACAL,eAAK,CAAL;AACA;AACD;AACF;AACDT,UAAIgB,IAAJ,CAAST,MAAME,CAAN,CAAT;AACD;AACD,WAAOT,IAAIiB,IAAJ,CAAS,EAAT,CAAP;AACD;AACD,WAASL,oBAAT,CAA8BM,GAA9B,EAAmCX,KAAnC,EAA0CE,CAA1C,EAA6C;AAC3C,WAAO,IAAP,EAAa;AACX,UAAIU,OAAOZ,MAAME,KAAKS,GAAX,CAAX;AACA,UAAI,CAACvB,iBAAiBI,IAAjB,CAAsBoB,IAAtB,CAAL,EAAkC;AAChC,eAAOA,IAAP;AACD;AACF;AACF;AACD,WAASJ,oBAAT,CAA8BjB,IAA9B,EAAoCsB,IAApC,EAA0CnB,KAA1C,EAAiD;AAC/C,SAAK,IAAIoB,IAAI,CAAb,EAAgBA,IAAIvB,KAAKY,MAAzB,EAAiCW,GAAjC,EAAsC;AACpC,UAAIlB,MAAML,KAAKuB,CAAL,CAAV;AACA,UAAI,OAAOlB,IAAIiB,IAAJ,CAAP,KAAqB,WAAzB,EAAsC;AACpC,eAAOE,KAAKC,SAAL,CAAepB,IAAIiB,IAAJ,CAAf,CAAP;AACD;AACF;AACD,QAAInB,KAAJ,EAAW;AACT,aAAO,WAAP;AACD;AACF;AACDuB,SAAOC,OAAP,GAAiB7B,OAAjB;AACD,CAlDD,EAkDGJ,QAAQ,SAAR,CAlDH","file":"replace.js","sourcesContent":["/* */ \n(function(process) {\n  'use strict';\n  var jsTokens = require('js-tokens').default;\n  var processEnvRe = /\\bprocess\\.env\\.[_$a-zA-Z][$\\w]+\\b/;\n  var spaceOrCommentRe = /^(?:\\s|\\/[/*])/;\n  function replace(src, envs) {\n    if (!processEnvRe.test(src)) {\n      return src;\n    }\n    var out = [];\n    var purge = envs.some(function(env) {\n      return env._ && env._.indexOf('purge') !== -1;\n    });\n    jsTokens.lastIndex = 0;\n    var parts = src.match(jsTokens);\n    for (var i = 0; i < parts.length; i++) {\n      if (parts[i] === 'process' && parts[i + 1] === '.' && parts[i + 2] === 'env' && parts[i + 3] === '.') {\n        var prevCodeToken = getAdjacentCodeToken(-1, parts, i);\n        var nextCodeToken = getAdjacentCodeToken(1, parts, i + 4);\n        var replacement = getReplacementString(envs, parts[i + 4], purge);\n        if (prevCodeToken !== '.' && nextCodeToken !== '.' && nextCodeToken !== '=' && typeof replacement === 'string') {\n          out.push(replacement);\n          i += 4;\n          continue;\n        }\n      }\n      out.push(parts[i]);\n    }\n    return out.join('');\n  }\n  function getAdjacentCodeToken(dir, parts, i) {\n    while (true) {\n      var part = parts[i += dir];\n      if (!spaceOrCommentRe.test(part)) {\n        return part;\n      }\n    }\n  }\n  function getReplacementString(envs, name, purge) {\n    for (var j = 0; j < envs.length; j++) {\n      var env = envs[j];\n      if (typeof env[name] !== 'undefined') {\n        return JSON.stringify(env[name]);\n      }\n    }\n    if (purge) {\n      return 'undefined';\n    }\n  }\n  module.exports = replace;\n})(require('process'));\n"]}