{"version":3,"sources":["../../../../jspm_packages/npm/assert@1.4.1/test.js"],"names":["Buffer","process","nodeAssert","require","ourAssert","keys","Object","env","TEST_NATIVE","tests","makeBlock","f","args","Array","prototype","slice","call","arguments","apply","assert","what","test","throws","AssertionError","doesNotThrow","ok","equal","undefined","notEqual","strictEqual","notStrictEqual","deepStrictEqual","notDeepStrictEqual","deepEqual","Date","re1","lastIndex","a","b","a1","a2","Symbol","String","Number","Boolean","global","Uint8Array","Uint16Array","thrower","errorConstructor","aethrow","TypeError","threw","e","ifError","Error","err","c","gotError","testAssertionMessage","actual","expected","toString","join","NaN","Infinity","getOwnPropertyNames","length","message","split"],"mappings":"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","file":"test.js","sourcesContent":["/* */ \n(function(Buffer, process) {\n  var nodeAssert = require('assert');\n  var ourAssert = require('./assert');\n  var keys = Object.keys;\n  if (process.env.TEST_NATIVE === true) {\n    tests(nodeAssert, 'node assert');\n  } else {\n    tests(ourAssert, 'our assert');\n  }\n  function makeBlock(f) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return function() {\n      return f.apply(this, args);\n    };\n  }\n  function tests(assert, what) {\n    test('assert.ok', function() {\n      assert.throws(makeBlock(assert, false), assert.AssertionError, 'ok(false)');\n      assert.doesNotThrow(makeBlock(assert, true), assert.AssertionError, 'ok(true)');\n      assert.doesNotThrow(makeBlock(assert, 'test', 'ok(\\'test\\')'));\n      assert.throws(makeBlock(assert.ok, false), assert.AssertionError, 'ok(false)');\n      assert.doesNotThrow(makeBlock(assert.ok, true), assert.AssertionError, 'ok(true)');\n      assert.doesNotThrow(makeBlock(assert.ok, 'test'), 'ok(\\'test\\')');\n    });\n    test('assert.equal', function() {\n      assert.throws(makeBlock(assert.equal, true, false), assert.AssertionError, 'equal');\n      assert.doesNotThrow(makeBlock(assert.equal, null, null), 'equal');\n      assert.doesNotThrow(makeBlock(assert.equal, undefined, undefined), 'equal');\n      assert.doesNotThrow(makeBlock(assert.equal, null, undefined), 'equal');\n      assert.doesNotThrow(makeBlock(assert.equal, true, true), 'equal');\n      assert.doesNotThrow(makeBlock(assert.equal, 2, '2'), 'equal');\n      assert.doesNotThrow(makeBlock(assert.notEqual, true, false), 'notEqual');\n      assert.throws(makeBlock(assert.notEqual, true, true), assert.AssertionError, 'notEqual');\n    });\n    test('assert.strictEqual', function() {\n      assert.throws(makeBlock(assert.strictEqual, 2, '2'), assert.AssertionError, 'strictEqual');\n      assert.throws(makeBlock(assert.strictEqual, null, undefined), assert.AssertionError, 'strictEqual');\n      assert.doesNotThrow(makeBlock(assert.notStrictEqual, 2, '2'), 'notStrictEqual');\n    });\n    test('assert.deepStrictEqual', function() {\n      assert.throws(makeBlock(assert.deepStrictEqual, [2], ['2']), assert.AssertionError, 'deepStrictEqual');\n      assert.throws(makeBlock(assert.deepStrictEqual, [null], [undefined]), assert.AssertionError, 'deepStrictEqual');\n      assert.doesNotThrow(makeBlock(assert.notDeepStrictEqual, [2], ['2']), 'notDeepStrictEqual');\n    });\n    test('assert.deepEqual - 7.2', function() {\n      assert.doesNotThrow(makeBlock(assert.deepEqual, new Date(2000, 3, 14), new Date(2000, 3, 14)), 'deepEqual date');\n      assert.throws(makeBlock(assert.deepEqual, new Date(), new Date(2000, 3, 14)), assert.AssertionError, 'deepEqual date');\n    });\n    test('assert.deepEqual - 7.3', function() {\n      assert.doesNotThrow(makeBlock(assert.deepEqual, /a/, /a/));\n      assert.doesNotThrow(makeBlock(assert.deepEqual, /a/g, /a/g));\n      assert.doesNotThrow(makeBlock(assert.deepEqual, /a/i, /a/i));\n      assert.doesNotThrow(makeBlock(assert.deepEqual, /a/m, /a/m));\n      assert.doesNotThrow(makeBlock(assert.deepEqual, /a/igm, /a/igm));\n      assert.throws(makeBlock(assert.deepEqual, /ab/, /a/));\n      assert.throws(makeBlock(assert.deepEqual, /a/g, /a/));\n      assert.throws(makeBlock(assert.deepEqual, /a/i, /a/));\n      assert.throws(makeBlock(assert.deepEqual, /a/m, /a/));\n      assert.throws(makeBlock(assert.deepEqual, /a/igm, /a/im));\n      var re1 = /a/;\n      re1.lastIndex = 3;\n      assert.throws(makeBlock(assert.deepEqual, re1, /a/));\n    });\n    test('assert.deepEqual - 7.4', function() {\n      assert.doesNotThrow(makeBlock(assert.deepEqual, 4, '4'), 'deepEqual == check');\n      assert.doesNotThrow(makeBlock(assert.deepEqual, true, 1), 'deepEqual == check');\n      assert.throws(makeBlock(assert.deepEqual, 4, '5'), assert.AssertionError, 'deepEqual == check');\n    });\n    test('assert.deepEqual - 7.5', function() {\n      assert.doesNotThrow(makeBlock(assert.deepEqual, {a: 4}, {a: 4}));\n      assert.doesNotThrow(makeBlock(assert.deepEqual, {\n        a: 4,\n        b: '2'\n      }, {\n        a: 4,\n        b: '2'\n      }));\n      assert.doesNotThrow(makeBlock(assert.deepEqual, [4], ['4']));\n      assert.throws(makeBlock(assert.deepEqual, {a: 4}, {\n        a: 4,\n        b: true\n      }), assert.AssertionError);\n      assert.doesNotThrow(makeBlock(assert.deepEqual, ['a'], {0: 'a'}));\n      assert.doesNotThrow(makeBlock(assert.deepEqual, {\n        a: 4,\n        b: '1'\n      }, {\n        b: '1',\n        a: 4\n      }));\n      var a1 = [1, 2, 3];\n      var a2 = [1, 2, 3];\n      a1.a = 'test';\n      a1.b = true;\n      a2.b = true;\n      a2.a = 'test';\n      assert.throws(makeBlock(assert.deepEqual, keys(a1), keys(a2)), assert.AssertionError);\n      assert.doesNotThrow(makeBlock(assert.deepEqual, a1, a2));\n    });\n    test('assert.deepEqual - ES6 primitives', function() {\n      assert.throws(makeBlock(assert.deepEqual, null, {}), assert.AssertionError);\n      assert.throws(makeBlock(assert.deepEqual, undefined, {}), assert.AssertionError);\n      assert.throws(makeBlock(assert.deepEqual, 'a', ['a']), assert.AssertionError);\n      assert.throws(makeBlock(assert.deepEqual, 'a', {0: 'a'}), assert.AssertionError);\n      assert.throws(makeBlock(assert.deepEqual, 1, {}), assert.AssertionError);\n      assert.throws(makeBlock(assert.deepEqual, true, {}), assert.AssertionError);\n      if (typeof Symbol === 'symbol') {\n        assert.throws(makeBlock(assert.deepEqual, Symbol(), {}), assert.AssertionError);\n      }\n    });\n    test('assert.deepEqual - object wrappers', function() {\n      assert.doesNotThrow(makeBlock(assert.deepEqual, new String('a'), ['a']));\n      assert.doesNotThrow(makeBlock(assert.deepEqual, new String('a'), {0: 'a'}));\n      assert.doesNotThrow(makeBlock(assert.deepEqual, new Number(1), {}));\n      assert.doesNotThrow(makeBlock(assert.deepEqual, new Boolean(true), {}));\n    });\n    test('assert.deepEqual - Buffers', function() {\n      assert.doesNotThrow(makeBlock(assert.deepEqual, new Buffer([1, 2, 3]), new Buffer([1, 2, 3])));\n      if (typeof global.Uint8Array === 'function') {\n        assert.throws(makeBlock(assert.deepEqual, new Buffer([1, 2, 3]), new Uint8Array([1, 2, 3])));\n      }\n      if (typeof global.Uint16Array === 'function') {\n        assert.doesNotThrow(makeBlock(assert.deepEqual, new Uint16Array([1, 2, 3]), new Uint16Array([1, 2, 3])));\n      }\n    });\n    function thrower(errorConstructor) {\n      throw new errorConstructor('test');\n    }\n    test('assert - Testing the throwing', function() {\n      var aethrow = makeBlock(thrower, assert.AssertionError);\n      aethrow = makeBlock(thrower, assert.AssertionError);\n      assert.throws(makeBlock(thrower, assert.AssertionError), assert.AssertionError, 'message');\n      assert.throws(makeBlock(thrower, assert.AssertionError), assert.AssertionError);\n      assert.throws(makeBlock(thrower, assert.AssertionError));\n      assert.throws(makeBlock(thrower, TypeError));\n      var threw = false;\n      try {\n        assert.throws(makeBlock(thrower, TypeError), assert.AssertionError);\n      } catch (e) {\n        threw = true;\n        assert.ok(e instanceof TypeError, 'type');\n      }\n      assert.equal(true, threw, 'a.throws with an explicit error is eating extra errors', assert.AssertionError);\n      threw = false;\n      try {\n        assert.doesNotThrow(makeBlock(thrower, TypeError), assert.AssertionError);\n      } catch (e) {\n        threw = true;\n        assert.ok(e instanceof TypeError);\n      }\n      assert.equal(true, threw, 'a.doesNotThrow with an explicit error is eating extra errors');\n      try {\n        assert.doesNotThrow(makeBlock(thrower, TypeError), TypeError);\n      } catch (e) {\n        threw = true;\n        assert.ok(e instanceof assert.AssertionError);\n      }\n      assert.equal(true, threw, 'a.doesNotThrow is not catching type matching errors');\n    });\n    test('assert.ifError', function() {\n      assert.throws(function() {\n        assert.ifError(new Error('test error'));\n      });\n      assert.doesNotThrow(function() {\n        assert.ifError(null);\n      });\n      assert.doesNotThrow(function() {\n        assert.ifError();\n      });\n    });\n    test('assert - make sure that validating using constructor really works', function() {\n      var threw = false;\n      try {\n        assert.throws(function() {\n          throw ({});\n        }, Array);\n      } catch (e) {\n        threw = true;\n      }\n      assert.ok(threw, 'wrong constructor validation');\n    });\n    test('assert -  use a RegExp to validate error message', function() {\n      assert.throws(makeBlock(thrower, TypeError), /test/);\n    });\n    test('assert - se a fn to validate error object', function() {\n      assert.throws(makeBlock(thrower, TypeError), function(err) {\n        if ((err instanceof TypeError) && /test/.test(err)) {\n          return true;\n        }\n      });\n    });\n    test('assert - Make sure deepEqual doesn\\'t loop forever on circular refs', function() {\n      var b = {};\n      b.b = b;\n      var c = {};\n      c.b = c;\n      var gotError = false;\n      var equal = true;\n      try {\n        equal = assert.deepEqual(b, c);\n      } catch (e) {\n        gotError = true;\n      }\n      assert.ok(gotError || !equal, gotError ? 'got error' : 'are equal');\n    });\n    test('assert - Ensure reflexivity of deepEqual with `arguments` objects', function() {\n      var args = (function() {\n        return arguments;\n      })();\n      assert.throws(makeBlock(assert.deepEqual, [], args), assert.AssertionError);\n      assert.throws(makeBlock(assert.deepEqual, args, []), assert.AssertionError);\n    });\n    test('assert - test assertion message', function() {\n      function testAssertionMessage(actual, expected) {\n        try {\n          assert.equal(actual, '');\n        } catch (e) {\n          assert.equal(e.toString(), ['AssertionError:', expected, '==', '\\'\\''].join(' '));\n        }\n      }\n      testAssertionMessage(undefined, 'undefined');\n      testAssertionMessage(null, 'null');\n      testAssertionMessage(true, 'true');\n      testAssertionMessage(false, 'false');\n      testAssertionMessage(0, '0');\n      testAssertionMessage(100, '100');\n      testAssertionMessage(NaN, 'NaN');\n      testAssertionMessage(Infinity, 'Infinity');\n      testAssertionMessage(-Infinity, '-Infinity');\n      testAssertionMessage('', '\"\"');\n      testAssertionMessage('foo', '\\'foo\\'');\n      testAssertionMessage([], '[]');\n      testAssertionMessage([1, 2, 3], '[ 1, 2, 3 ]');\n      testAssertionMessage(new Buffer([1, 2, 3]), '<Buffer 01 02 03>');\n      if (typeof global.Uint8Array === 'function' && Object.getOwnPropertyNames(new Uint8Array([])).length === 0) {\n        testAssertionMessage(new Uint8Array([1, 2, 3]), '{ \\'0\\': 1, \\'1\\': 2, \\'2\\': 3 }');\n      }\n      testAssertionMessage(/a/, '/a/');\n      testAssertionMessage(function f() {}, '[Function: f]');\n      testAssertionMessage({}, '{}');\n      testAssertionMessage({\n        a: undefined,\n        b: null\n      }, '{ a: undefined, b: null }');\n      testAssertionMessage({\n        a: NaN,\n        b: Infinity,\n        c: -Infinity\n      }, '{ a: NaN, b: Infinity, c: -Infinity }');\n    });\n    test('assert - regressions from node.js testcase', function() {\n      var threw = false;\n      try {\n        assert.throws(function() {\n          assert.ifError(null);\n        });\n      } catch (e) {\n        threw = true;\n        assert.equal(e.message, 'Missing expected exception..');\n      }\n      assert.ok(threw);\n      try {\n        assert.equal(1, 2);\n      } catch (e) {\n        assert.equal(e.toString().split('\\n')[0], 'AssertionError: 1 == 2');\n      }\n      try {\n        assert.equal(1, 2, 'oh no');\n      } catch (e) {\n        assert.equal(e.toString().split('\\n')[0], 'AssertionError: oh no');\n      }\n    });\n  }\n})(require('buffer').Buffer, require('process'));\n"]}