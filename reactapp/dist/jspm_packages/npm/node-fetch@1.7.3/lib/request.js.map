{"version":3,"sources":["../../../../../jspm_packages/npm/node-fetch@1.7.3/lib/request.js"],"names":["parse_url","require","parse","Headers","Body","module","exports","Request","input","init","url","url_parsed","method","redirect","headers","follow","undefined","compress","counter","agent","call","body","_clone","timeout","size","protocol","hostname","port","path","auth","prototype","Object","create","clone"],"mappings":";;AAAA;AACA,IAAIA,YAAYC,QAAQ,KAAR,EAAeC,KAA/B;AACA,IAAIC,UAAUF,QAAQ,WAAR,CAAd;AACA,IAAIG,OAAOH,QAAQ,QAAR,CAAX;AACAI,OAAOC,OAAP,GAAiBC,OAAjB;AACA,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,IAAxB,EAA8B;AAC5B,MAAIC,GAAJ,EACIC,UADJ;AAEA,MAAI,EAAEH,iBAAiBD,OAAnB,CAAJ,EAAiC;AAC/BG,UAAMF,KAAN;AACAG,iBAAaX,UAAUU,GAAV,CAAb;AACAF,YAAQ,EAAR;AACD,GAJD,MAIO;AACLE,UAAMF,MAAME,GAAZ;AACAC,iBAAaX,UAAUU,GAAV,CAAb;AACD;AACDD,SAAOA,QAAQ,EAAf;AACA,OAAKG,MAAL,GAAcH,KAAKG,MAAL,IAAeJ,MAAMI,MAArB,IAA+B,KAA7C;AACA,OAAKC,QAAL,GAAgBJ,KAAKI,QAAL,IAAiBL,MAAMK,QAAvB,IAAmC,QAAnD;AACA,OAAKC,OAAL,GAAe,IAAIX,OAAJ,CAAYM,KAAKK,OAAL,IAAgBN,MAAMM,OAAtB,IAAiC,EAA7C,CAAf;AACA,OAAKJ,GAAL,GAAWA,GAAX;AACA,OAAKK,MAAL,GAAcN,KAAKM,MAAL,KAAgBC,SAAhB,GAA4BP,KAAKM,MAAjC,GAA0CP,MAAMO,MAAN,KAAiBC,SAAjB,GAA6BR,MAAMO,MAAnC,GAA4C,EAApG;AACA,OAAKE,QAAL,GAAgBR,KAAKQ,QAAL,KAAkBD,SAAlB,GAA8BP,KAAKQ,QAAnC,GAA8CT,MAAMS,QAAN,KAAmBD,SAAnB,GAA+BR,MAAMS,QAArC,GAAgD,IAA9G;AACA,OAAKC,OAAL,GAAeT,KAAKS,OAAL,IAAgBV,MAAMU,OAAtB,IAAiC,CAAhD;AACA,OAAKC,KAAL,GAAaV,KAAKU,KAAL,IAAcX,MAAMW,KAAjC;AACAf,OAAKgB,IAAL,CAAU,IAAV,EAAgBX,KAAKY,IAAL,IAAa,KAAKC,MAAL,CAAYd,KAAZ,CAA7B,EAAiD;AAC/Ce,aAASd,KAAKc,OAAL,IAAgBf,MAAMe,OAAtB,IAAiC,CADK;AAE/CC,UAAMf,KAAKe,IAAL,IAAahB,MAAMgB,IAAnB,IAA2B;AAFc,GAAjD;AAIA,OAAKC,QAAL,GAAgBd,WAAWc,QAA3B;AACA,OAAKC,QAAL,GAAgBf,WAAWe,QAA3B;AACA,OAAKC,IAAL,GAAYhB,WAAWgB,IAAvB;AACA,OAAKC,IAAL,GAAYjB,WAAWiB,IAAvB;AACA,OAAKC,IAAL,GAAYlB,WAAWkB,IAAvB;AACD;AACDtB,QAAQuB,SAAR,GAAoBC,OAAOC,MAAP,CAAc5B,KAAK0B,SAAnB,CAApB;AACAvB,QAAQuB,SAAR,CAAkBG,KAAlB,GAA0B,YAAW;AACnC,SAAO,IAAI1B,OAAJ,CAAY,IAAZ,CAAP;AACD,CAFD","file":"request.js","sourcesContent":["/* */ \nvar parse_url = require('url').parse;\nvar Headers = require('./headers');\nvar Body = require('./body');\nmodule.exports = Request;\nfunction Request(input, init) {\n  var url,\n      url_parsed;\n  if (!(input instanceof Request)) {\n    url = input;\n    url_parsed = parse_url(url);\n    input = {};\n  } else {\n    url = input.url;\n    url_parsed = parse_url(url);\n  }\n  init = init || {};\n  this.method = init.method || input.method || 'GET';\n  this.redirect = init.redirect || input.redirect || 'follow';\n  this.headers = new Headers(init.headers || input.headers || {});\n  this.url = url;\n  this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n  this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n  this.counter = init.counter || input.counter || 0;\n  this.agent = init.agent || input.agent;\n  Body.call(this, init.body || this._clone(input), {\n    timeout: init.timeout || input.timeout || 0,\n    size: init.size || input.size || 0\n  });\n  this.protocol = url_parsed.protocol;\n  this.hostname = url_parsed.hostname;\n  this.port = url_parsed.port;\n  this.path = url_parsed.path;\n  this.auth = url_parsed.auth;\n}\nRequest.prototype = Object.create(Body.prototype);\nRequest.prototype.clone = function() {\n  return new Request(this);\n};\n"]}