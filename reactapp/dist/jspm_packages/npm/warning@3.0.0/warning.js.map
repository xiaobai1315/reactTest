{"version":3,"sources":["../../../../jspm_packages/npm/warning@3.0.0/warning.js"],"names":["process","__DEV__","env","NODE_ENV","warning","condition","format","args","len","arguments","length","Array","key","undefined","Error","test","argIndex","message","replace","console","error","x","module","exports","require"],"mappings":";;AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjB;;AACA,MAAIC,UAAUD,QAAQE,GAAR,CAAYC,QAAZ,KAAyB,YAAvC;AACA,MAAIC,UAAU,mBAAW,CAAE,CAA3B;AACA,MAAIH,OAAJ,EAAa;AACXG,cAAU,iBAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAC1C,UAAIC,MAAMC,UAAUC,MAApB;AACAH,aAAO,IAAII,KAAJ,CAAUH,MAAM,CAAN,GAAUA,MAAM,CAAhB,GAAoB,CAA9B,CAAP;AACA,WAAK,IAAII,MAAM,CAAf,EAAkBA,MAAMJ,GAAxB,EAA6BI,KAA7B,EAAoC;AAClCL,aAAKK,MAAM,CAAX,IAAgBH,UAAUG,GAAV,CAAhB;AACD;AACD,UAAIN,WAAWO,SAAf,EAA0B;AACxB,cAAM,IAAIC,KAAJ,CAAU,8DAA8D,kBAAxE,CAAN;AACD;AACD,UAAIR,OAAOI,MAAP,GAAgB,EAAhB,IAAuB,UAAD,CAAaK,IAAb,CAAkBT,MAAlB,CAA1B,EAAqD;AACnD,cAAM,IAAIQ,KAAJ,CAAU,iEAAiE,uDAAjE,GAA2HR,MAArI,CAAN;AACD;AACD,UAAI,CAACD,SAAL,EAAgB;AACd,YAAIW,WAAW,CAAf;AACA,YAAIC,UAAU,cAAcX,OAAOY,OAAP,CAAe,KAAf,EAAsB,YAAW;AAC3D,iBAAOX,KAAKS,UAAL,CAAP;AACD,SAF2B,CAA5B;AAGA,YAAI,OAAOG,OAAP,KAAmB,WAAvB,EAAoC;AAClCA,kBAAQC,KAAR,CAAcH,OAAd;AACD;AACD,YAAI;AACF,gBAAM,IAAIH,KAAJ,CAAUG,OAAV,CAAN;AACD,SAFD,CAEE,OAAOI,CAAP,EAAU,CAAE;AACf;AACF,KAxBD;AAyBD;AACDC,SAAOC,OAAP,GAAiBnB,OAAjB;AACD,CAhCD,EAgCGoB,QAAQ,SAAR,CAhCH","file":"warning.js","sourcesContent":["/* */ \n(function(process) {\n  'use strict';\n  var __DEV__ = process.env.NODE_ENV !== 'production';\n  var warning = function() {};\n  if (__DEV__) {\n    warning = function(condition, format, args) {\n      var len = arguments.length;\n      args = new Array(len > 2 ? len - 2 : 0);\n      for (var key = 2; key < len; key++) {\n        args[key - 2] = arguments[key];\n      }\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n      if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n        throw new Error('The warning format should be able to uniquely identify this ' + 'warning. Please, use a more descriptive format than: ' + format);\n      }\n      if (!condition) {\n        var argIndex = 0;\n        var message = 'Warning: ' + format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n        if (typeof console !== 'undefined') {\n          console.error(message);\n        }\n        try {\n          throw new Error(message);\n        } catch (x) {}\n      }\n    };\n  }\n  module.exports = warning;\n})(require('process'));\n"]}