{"version":3,"sources":["../../../../../jspm_packages/npm/iconv-lite@0.4.19/encodings/utf16.js"],"names":["Buffer","require","exports","utf16be","Utf16BECodec","prototype","encoder","Utf16BEEncoder","decoder","Utf16BEDecoder","bomAware","write","str","buf","i","length","tmp","end","overflowByte","buf2","j","slice","toString","utf16","Utf16Codec","codecOptions","iconv","Utf16Encoder","Utf16Decoder","options","codec","addBOM","undefined","getEncoder","initialBytes","initialBytesLen","push","concat","encoding","detectEncoding","defaultEncoding","getDecoder","res","trail","enc","asciiCharsLE","asciiCharsBE","_len","Math","min"],"mappings":"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","file":"utf16.js","sourcesContent":["/* */ \n(function(Buffer) {\n  \"use strict\";\n  var Buffer = require('buffer').Buffer;\n  exports.utf16be = Utf16BECodec;\n  function Utf16BECodec() {}\n  Utf16BECodec.prototype.encoder = Utf16BEEncoder;\n  Utf16BECodec.prototype.decoder = Utf16BEDecoder;\n  Utf16BECodec.prototype.bomAware = true;\n  function Utf16BEEncoder() {}\n  Utf16BEEncoder.prototype.write = function(str) {\n    var buf = new Buffer(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n      var tmp = buf[i];\n      buf[i] = buf[i + 1];\n      buf[i + 1] = tmp;\n    }\n    return buf;\n  };\n  Utf16BEEncoder.prototype.end = function() {};\n  function Utf16BEDecoder() {\n    this.overflowByte = -1;\n  }\n  Utf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n      return '';\n    var buf2 = new Buffer(buf.length + 1),\n        i = 0,\n        j = 0;\n    if (this.overflowByte !== -1) {\n      buf2[0] = buf[0];\n      buf2[1] = this.overflowByte;\n      i = 1;\n      j = 2;\n    }\n    for (; i < buf.length - 1; i += 2, j += 2) {\n      buf2[j] = buf[i + 1];\n      buf2[j + 1] = buf[i];\n    }\n    this.overflowByte = (i == buf.length - 1) ? buf[buf.length - 1] : -1;\n    return buf2.slice(0, j).toString('ucs2');\n  };\n  Utf16BEDecoder.prototype.end = function() {};\n  exports.utf16 = Utf16Codec;\n  function Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n  }\n  Utf16Codec.prototype.encoder = Utf16Encoder;\n  Utf16Codec.prototype.decoder = Utf16Decoder;\n  function Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n      options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n  }\n  Utf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n  };\n  Utf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n  };\n  function Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n    this.options = options || {};\n    this.iconv = codec.iconv;\n  }\n  Utf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n      this.initialBytes.push(buf);\n      this.initialBytesLen += buf.length;\n      if (this.initialBytesLen < 16)\n        return '';\n      var buf = Buffer.concat(this.initialBytes),\n          encoding = detectEncoding(buf, this.options.defaultEncoding);\n      this.decoder = this.iconv.getDecoder(encoding, this.options);\n      this.initialBytes.length = this.initialBytesLen = 0;\n    }\n    return this.decoder.write(buf);\n  };\n  Utf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n      var buf = Buffer.concat(this.initialBytes),\n          encoding = detectEncoding(buf, this.options.defaultEncoding);\n      this.decoder = this.iconv.getDecoder(encoding, this.options);\n      var res = this.decoder.write(buf),\n          trail = this.decoder.end();\n      return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n  };\n  function detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n    if (buf.length >= 2) {\n      if (buf[0] == 0xFE && buf[1] == 0xFF)\n        enc = 'utf-16be';\n      else if (buf[0] == 0xFF && buf[1] == 0xFE)\n        enc = 'utf-16le';\n      else {\n        var asciiCharsLE = 0,\n            asciiCharsBE = 0,\n            _len = Math.min(buf.length - (buf.length % 2), 64);\n        for (var i = 0; i < _len; i += 2) {\n          if (buf[i] === 0 && buf[i + 1] !== 0)\n            asciiCharsBE++;\n          if (buf[i] !== 0 && buf[i + 1] === 0)\n            asciiCharsLE++;\n        }\n        if (asciiCharsBE > asciiCharsLE)\n          enc = 'utf-16be';\n        else if (asciiCharsBE < asciiCharsLE)\n          enc = 'utf-16le';\n      }\n    }\n    return enc;\n  }\n})(require('buffer').Buffer);\n"]}