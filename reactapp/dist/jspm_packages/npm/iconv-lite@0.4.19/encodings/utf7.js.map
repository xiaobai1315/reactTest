{"version":3,"sources":["../../../../../jspm_packages/npm/iconv-lite@0.4.19/encodings/utf7.js"],"names":["Buffer","require","exports","utf7","Utf7Codec","unicode11utf7","codecOptions","iconv","prototype","encoder","Utf7Encoder","decoder","Utf7Decoder","bomAware","nonDirectChars","options","codec","write","str","replace","chunk","encode","toString","bind","end","inBase64","base64Accum","base64Regex","base64Chars","i","test","String","fromCharCode","plusChar","charCodeAt","minusChar","andChar","buf","res","lastI","length","decode","slice","b64str","canBeDecoded","utf7imap","Utf7IMAPCodec","Utf7IMAPEncoder","Utf7IMAPDecoder","base64AccumIdx","bufIdx","uChar","base64IMAPChars"],"mappings":"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","file":"utf7.js","sourcesContent":["/* */ \n(function(Buffer) {\n  \"use strict\";\n  var Buffer = require('buffer').Buffer;\n  exports.utf7 = Utf7Codec;\n  exports.unicode11utf7 = 'utf7';\n  function Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n  }\n  ;\n  Utf7Codec.prototype.encoder = Utf7Encoder;\n  Utf7Codec.prototype.decoder = Utf7Decoder;\n  Utf7Codec.prototype.bomAware = true;\n  var nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n  function Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n  }\n  Utf7Encoder.prototype.write = function(str) {\n    return new Buffer(str.replace(nonDirectChars, function(chunk) {\n      return \"+\" + (chunk === '+' ? '' : this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) + \"-\";\n    }.bind(this)));\n  };\n  Utf7Encoder.prototype.end = function() {};\n  function Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n  }\n  var base64Regex = /[A-Za-z0-9\\/+]/;\n  var base64Chars = [];\n  for (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n  var plusChar = '+'.charCodeAt(0),\n      minusChar = '-'.charCodeAt(0),\n      andChar = '&'.charCodeAt(0);\n  Utf7Decoder.prototype.write = function(buf) {\n    var res = \"\",\n        lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n    for (var i = 0; i < buf.length; i++) {\n      if (!inBase64) {\n        if (buf[i] == plusChar) {\n          res += this.iconv.decode(buf.slice(lastI, i), \"ascii\");\n          lastI = i + 1;\n          inBase64 = true;\n        }\n      } else {\n        if (!base64Chars[buf[i]]) {\n          if (i == lastI && buf[i] == minusChar) {\n            res += \"+\";\n          } else {\n            var b64str = base64Accum + buf.slice(lastI, i).toString();\n            res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n          }\n          if (buf[i] != minusChar)\n            i--;\n          lastI = i + 1;\n          inBase64 = false;\n          base64Accum = '';\n        }\n      }\n    }\n    if (!inBase64) {\n      res += this.iconv.decode(buf.slice(lastI), \"ascii\");\n    } else {\n      var b64str = base64Accum + buf.slice(lastI).toString();\n      var canBeDecoded = b64str.length - (b64str.length % 8);\n      base64Accum = b64str.slice(canBeDecoded);\n      b64str = b64str.slice(0, canBeDecoded);\n      res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n    }\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n    return res;\n  };\n  Utf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n      res = this.iconv.decode(new Buffer(this.base64Accum, 'base64'), \"utf16-be\");\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n  };\n  exports.utf7imap = Utf7IMAPCodec;\n  function Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n  }\n  ;\n  Utf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\n  Utf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\n  Utf7IMAPCodec.prototype.bomAware = true;\n  function Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = new Buffer(6);\n    this.base64AccumIdx = 0;\n  }\n  Utf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = new Buffer(str.length * 5 + 10),\n        bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n      var uChar = str.charCodeAt(i);\n      if (0x20 <= uChar && uChar <= 0x7E) {\n        if (inBase64) {\n          if (base64AccumIdx > 0) {\n            bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            base64AccumIdx = 0;\n          }\n          buf[bufIdx++] = minusChar;\n          inBase64 = false;\n        }\n        if (!inBase64) {\n          buf[bufIdx++] = uChar;\n          if (uChar === andChar)\n            buf[bufIdx++] = minusChar;\n        }\n      } else {\n        if (!inBase64) {\n          buf[bufIdx++] = andChar;\n          inBase64 = true;\n        }\n        if (inBase64) {\n          base64Accum[base64AccumIdx++] = uChar >> 8;\n          base64Accum[base64AccumIdx++] = uChar & 0xFF;\n          if (base64AccumIdx == base64Accum.length) {\n            bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n            base64AccumIdx = 0;\n          }\n        }\n      }\n    }\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n    return buf.slice(0, bufIdx);\n  };\n  Utf7IMAPEncoder.prototype.end = function() {\n    var buf = new Buffer(10),\n        bufIdx = 0;\n    if (this.inBase64) {\n      if (this.base64AccumIdx > 0) {\n        bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n        this.base64AccumIdx = 0;\n      }\n      buf[bufIdx++] = minusChar;\n      this.inBase64 = false;\n    }\n    return buf.slice(0, bufIdx);\n  };\n  function Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n  }\n  var base64IMAPChars = base64Chars.slice();\n  base64IMAPChars[','.charCodeAt(0)] = true;\n  Utf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\",\n        lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n    for (var i = 0; i < buf.length; i++) {\n      if (!inBase64) {\n        if (buf[i] == andChar) {\n          res += this.iconv.decode(buf.slice(lastI, i), \"ascii\");\n          lastI = i + 1;\n          inBase64 = true;\n        }\n      } else {\n        if (!base64IMAPChars[buf[i]]) {\n          if (i == lastI && buf[i] == minusChar) {\n            res += \"&\";\n          } else {\n            var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n            res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n          }\n          if (buf[i] != minusChar)\n            i--;\n          lastI = i + 1;\n          inBase64 = false;\n          base64Accum = '';\n        }\n      }\n    }\n    if (!inBase64) {\n      res += this.iconv.decode(buf.slice(lastI), \"ascii\");\n    } else {\n      var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n      var canBeDecoded = b64str.length - (b64str.length % 8);\n      base64Accum = b64str.slice(canBeDecoded);\n      b64str = b64str.slice(0, canBeDecoded);\n      res += this.iconv.decode(new Buffer(b64str, 'base64'), \"utf16-be\");\n    }\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n    return res;\n  };\n  Utf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n      res = this.iconv.decode(new Buffer(this.base64Accum, 'base64'), \"utf16-be\");\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n  };\n})(require('buffer').Buffer);\n"]}