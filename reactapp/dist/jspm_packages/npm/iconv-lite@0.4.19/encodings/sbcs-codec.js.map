{"version":3,"sources":["../../../../../jspm_packages/npm/iconv-lite@0.4.19/encodings/sbcs-codec.js"],"names":["Buffer","require","exports","_sbcs","SBCSCodec","codecOptions","iconv","Error","chars","length","type","asciiString","i","String","fromCharCode","decodeBuf","encodeBuf","fill","defaultCharSingleByte","charCodeAt","prototype","encoder","SBCSEncoder","decoder","SBCSDecoder","options","codec","write","str","buf","end","newBuf","idx1","idx2","toString"],"mappings":"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","file":"sbcs-codec.js","sourcesContent":["/* */ \n(function(Buffer) {\n  \"use strict\";\n  var Buffer = require('buffer').Buffer;\n  exports._sbcs = SBCSCodec;\n  function SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n      throw new Error(\"SBCS codec is called without the data.\");\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n      throw new Error(\"Encoding '\" + codecOptions.type + \"' has incorrect 'chars' (must be of len 128 or 256)\");\n    if (codecOptions.chars.length === 128) {\n      var asciiString = \"\";\n      for (var i = 0; i < 128; i++)\n        asciiString += String.fromCharCode(i);\n      codecOptions.chars = asciiString + codecOptions.chars;\n    }\n    this.decodeBuf = new Buffer(codecOptions.chars, 'ucs2');\n    var encodeBuf = new Buffer(65536);\n    encodeBuf.fill(iconv.defaultCharSingleByte.charCodeAt(0));\n    for (var i = 0; i < codecOptions.chars.length; i++)\n      encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n    this.encodeBuf = encodeBuf;\n  }\n  SBCSCodec.prototype.encoder = SBCSEncoder;\n  SBCSCodec.prototype.decoder = SBCSDecoder;\n  function SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n  }\n  SBCSEncoder.prototype.write = function(str) {\n    var buf = new Buffer(str.length);\n    for (var i = 0; i < str.length; i++)\n      buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    return buf;\n  };\n  SBCSEncoder.prototype.end = function() {};\n  function SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n  }\n  SBCSDecoder.prototype.write = function(buf) {\n    var decodeBuf = this.decodeBuf;\n    var newBuf = new Buffer(buf.length * 2);\n    var idx1 = 0,\n        idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n      idx1 = buf[i] * 2;\n      idx2 = i * 2;\n      newBuf[idx2] = decodeBuf[idx1];\n      newBuf[idx2 + 1] = decodeBuf[idx1 + 1];\n    }\n    return newBuf.toString('ucs2');\n  };\n  SBCSDecoder.prototype.end = function() {};\n})(require('buffer').Buffer);\n"]}