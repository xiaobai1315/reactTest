{"version":3,"sources":["../../../../../jspm_packages/npm/iconv-lite@0.4.19/lib/bom-handling.js"],"names":["BOMChar","exports","PrependBOM","PrependBOMWrapper","encoder","options","addBOM","prototype","write","str","end","StripBOM","StripBOMWrapper","decoder","pass","buf","res","slice","stripBOM"],"mappings":"AAAA;AACA;;AAEA,IAAIA,UAAU,QAAd;;AAEAC,QAAQC,UAAR,GAAqBC,iBAArB;AACA,SAASA,iBAAT,CAA2BC,OAA3B,EAAoCC,OAApC,EAA6C;AACzC,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKE,MAAL,GAAc,IAAd;AACH;;AAEDH,kBAAkBI,SAAlB,CAA4BC,KAA5B,GAAoC,UAASC,GAAT,EAAc;AAC9C,QAAI,KAAKH,MAAT,EAAiB;AACbG,cAAMT,UAAUS,GAAhB;AACA,aAAKH,MAAL,GAAc,KAAd;AACH;;AAED,WAAO,KAAKF,OAAL,CAAaI,KAAb,CAAmBC,GAAnB,CAAP;AACH,CAPD;;AASAN,kBAAkBI,SAAlB,CAA4BG,GAA5B,GAAkC,YAAW;AACzC,WAAO,KAAKN,OAAL,CAAaM,GAAb,EAAP;AACH,CAFD;;AAKA;;AAEAT,QAAQU,QAAR,GAAmBC,eAAnB;AACA,SAASA,eAAT,CAAyBC,OAAzB,EAAkCR,OAAlC,EAA2C;AACvC,SAAKQ,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAY,KAAZ;AACA,SAAKT,OAAL,GAAeA,WAAW,EAA1B;AACH;;AAEDO,gBAAgBL,SAAhB,CAA0BC,KAA1B,GAAkC,UAASO,GAAT,EAAc;AAC5C,QAAIC,MAAM,KAAKH,OAAL,CAAaL,KAAb,CAAmBO,GAAnB,CAAV;AACA,QAAI,KAAKD,IAAL,IAAa,CAACE,GAAlB,EACI,OAAOA,GAAP;;AAEJ,QAAIA,IAAI,CAAJ,MAAWhB,OAAf,EAAwB;AACpBgB,cAAMA,IAAIC,KAAJ,CAAU,CAAV,CAAN;AACA,YAAI,OAAO,KAAKZ,OAAL,CAAaa,QAApB,KAAiC,UAArC,EACI,KAAKb,OAAL,CAAaa,QAAb;AACP;;AAED,SAAKJ,IAAL,GAAY,IAAZ;AACA,WAAOE,GAAP;AACH,CAbD;;AAeAJ,gBAAgBL,SAAhB,CAA0BG,GAA1B,GAAgC,YAAW;AACvC,WAAO,KAAKG,OAAL,CAAaH,GAAb,EAAP;AACH,CAFD","file":"bom-handling.js","sourcesContent":["/* */ \n\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n"]}