{"version":3,"sources":["../../../../../jspm_packages/npm/buffer@5.0.7/test/to-string.js"],"names":["B","require","Buffer","test","t","equal","toString","end"],"mappings":"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","file":"to-string.js","sourcesContent":["/* */ \nvar B = require('../index').Buffer;\nvar test = require('tape');\ntest('utf8 buffer to base64', function(t) {\n  t.equal(new B('Ձאab', 'utf8').toString('base64'), '1YHXkGFi');\n  t.end();\n});\ntest('utf8 buffer to hex', function(t) {\n  t.equal(new B('Ձאab', 'utf8').toString('hex'), 'd581d7906162');\n  t.end();\n});\ntest('utf8 to utf8', function(t) {\n  t.equal(new B('öäüõÖÄÜÕ', 'utf8').toString('utf8'), 'öäüõÖÄÜÕ');\n  t.end();\n});\ntest('utf16le to utf16', function(t) {\n  t.equal(new B(new B('abcd', 'utf8').toString('utf16le'), 'utf16le').toString('utf8'), 'abcd');\n  t.end();\n});\ntest('utf16le to hex', function(t) {\n  t.equal(new B('abcd', 'utf16le').toString('hex'), '6100620063006400');\n  t.end();\n});\ntest('ascii buffer to base64', function(t) {\n  t.equal(new B('123456!@#$%^', 'ascii').toString('base64'), 'MTIzNDU2IUAjJCVe');\n  t.end();\n});\ntest('ascii buffer to hex', function(t) {\n  t.equal(new B('123456!@#$%^', 'ascii').toString('hex'), '31323334353621402324255e');\n  t.end();\n});\ntest('base64 buffer to utf8', function(t) {\n  t.equal(new B('1YHXkGFi', 'base64').toString('utf8'), 'Ձאab');\n  t.end();\n});\ntest('hex buffer to utf8', function(t) {\n  t.equal(new B('d581d7906162', 'hex').toString('utf8'), 'Ձאab');\n  t.end();\n});\ntest('base64 buffer to ascii', function(t) {\n  t.equal(new B('MTIzNDU2IUAjJCVe', 'base64').toString('ascii'), '123456!@#$%^');\n  t.end();\n});\ntest('hex buffer to ascii', function(t) {\n  t.equal(new B('31323334353621402324255e', 'hex').toString('ascii'), '123456!@#$%^');\n  t.end();\n});\ntest('base64 buffer to binary', function(t) {\n  t.equal(new B('MTIzNDU2IUAjJCVe', 'base64').toString('binary'), '123456!@#$%^');\n  t.end();\n});\ntest('hex buffer to binary', function(t) {\n  t.equal(new B('31323334353621402324255e', 'hex').toString('binary'), '123456!@#$%^');\n  t.end();\n});\ntest('utf8 to binary', function(t) {\n  t.equal(new B('öäüõÖÄÜÕ', 'utf8').toString('binary'), 'Ã¶Ã¤Ã¼ÃµÃÃÃÃ');\n  t.end();\n});\ntest('utf8 replacement chars (1 byte sequence)', function(t) {\n  t.equal(new B([0x80]).toString(), '\\uFFFD');\n  t.equal(new B([0x7F]).toString(), '\\u007F');\n  t.end();\n});\ntest('utf8 replacement chars (2 byte sequences)', function(t) {\n  t.equal(new B([0xC7]).toString(), '\\uFFFD');\n  t.equal(new B([0xC7, 0xB1]).toString(), '\\u01F1');\n  t.equal(new B([0xC0, 0xB1]).toString(), '\\uFFFD\\uFFFD');\n  t.equal(new B([0xC1, 0xB1]).toString(), '\\uFFFD\\uFFFD');\n  t.end();\n});\ntest('utf8 replacement chars (3 byte sequences)', function(t) {\n  t.equal(new B([0xE0]).toString(), '\\uFFFD');\n  t.equal(new B([0xE0, 0xAC]).toString(), '\\uFFFD\\uFFFD');\n  t.equal(new B([0xE0, 0xAC, 0xB9]).toString(), '\\u0B39');\n  t.end();\n});\ntest('utf8 replacement chars (4 byte sequences)', function(t) {\n  t.equal(new B([0xF4]).toString(), '\\uFFFD');\n  t.equal(new B([0xF4, 0x8F]).toString(), '\\uFFFD\\uFFFD');\n  t.equal(new B([0xF4, 0x8F, 0x80]).toString(), '\\uFFFD\\uFFFD\\uFFFD');\n  t.equal(new B([0xF4, 0x8F, 0x80, 0x84]).toString(), '\\uDBFC\\uDC04');\n  t.equal(new B([0xFF]).toString(), '\\uFFFD');\n  t.equal(new B([0xFF, 0x8F, 0x80, 0x84]).toString(), '\\uFFFD\\uFFFD\\uFFFD\\uFFFD');\n  t.end();\n});\ntest('utf8 replacement chars on 256 random bytes', function(t) {\n  t.equal(new B([152, 130, 206, 23, 243, 238, 197, 44, 27, 86, 208, 36, 163, 184, 164, 21, 94, 242, 178, 46, 25, 26, 253, 178, 72, 147, 207, 112, 236, 68, 179, 190, 29, 83, 239, 147, 125, 55, 143, 19, 157, 68, 157, 58, 212, 224, 150, 39, 128, 24, 94, 225, 120, 121, 75, 192, 112, 19, 184, 142, 203, 36, 43, 85, 26, 147, 227, 139, 242, 186, 57, 78, 11, 102, 136, 117, 180, 210, 241, 92, 3, 215, 54, 167, 249, 1, 44, 225, 146, 86, 2, 42, 68, 21, 47, 238, 204, 153, 216, 252, 183, 66, 222, 255, 15, 202, 16, 51, 134, 1, 17, 19, 209, 76, 238, 38, 76, 19, 7, 103, 249, 5, 107, 137, 64, 62, 170, 57, 16, 85, 179, 193, 97, 86, 166, 196, 36, 148, 138, 193, 210, 69, 187, 38, 242, 97, 195, 219, 252, 244, 38, 1, 197, 18, 31, 246, 53, 47, 134, 52, 105, 72, 43, 239, 128, 203, 73, 93, 199, 75, 222, 220, 166, 34, 63, 236, 11, 212, 76, 243, 171, 110, 78, 39, 205, 204, 6, 177, 233, 212, 243, 0, 33, 41, 122, 118, 92, 252, 0, 157, 108, 120, 70, 137, 100, 223, 243, 171, 232, 66, 126, 111, 142, 33, 3, 39, 117, 27, 107, 54, 1, 217, 227, 132, 13, 166, 3, 73, 53, 127, 225, 236, 134, 219, 98, 214, 125, 148, 24, 64, 142, 111, 231, 194, 42, 150, 185, 10, 182, 163, 244, 19, 4, 59, 135, 16]).toString(), '\\uFFFD\\uFFFD\\uFFFD\\u0017\\uFFFD\\uFFFD\\uFFFD\\u002C\\u001B\\u0056\\uFFFD\\u0024\\uFFFD\\uFFFD\\uFFFD\\u0015\\u005E\\uFFFD\\uFFFD\\u002E\\u0019\\u001A\\uFFFD\\uFFFD\\u0048\\uFFFD\\uFFFD\\u0070\\uFFFD\\u0044\\uFFFD\\uFFFD\\u001D\\u0053\\uFFFD\\uFFFD\\u007D\\u0037\\uFFFD\\u0013\\uFFFD\\u0044\\uFFFD\\u003A\\uFFFD\\uFFFD\\uFFFD\\u0027\\uFFFD\\u0018\\u005E\\uFFFD\\u0078\\u0079\\u004B\\uFFFD\\u0070\\u0013\\uFFFD\\uFFFD\\uFFFD\\u0024\\u002B\\u0055\\u001A\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0039\\u004E\\u000B\\u0066\\uFFFD\\u0075\\uFFFD\\uFFFD\\uFFFD\\u005C\\u0003\\uFFFD\\u0036\\uFFFD\\uFFFD\\u0001\\u002C\\uFFFD\\uFFFD\\u0056\\u0002\\u002A\\u0044\\u0015\\u002F\\uFFFD\\u0319\\uFFFD\\uFFFD\\uFFFD\\u0042\\uFFFD\\uFFFD\\u000F\\uFFFD\\u0010\\u0033\\uFFFD\\u0001\\u0011\\u0013\\uFFFD\\u004C\\uFFFD\\u0026\\u004C\\u0013\\u0007\\u0067\\uFFFD\\u0005\\u006B\\uFFFD\\u0040\\u003E\\uFFFD\\u0039\\u0010\\u0055\\uFFFD\\uFFFD\\u0061\\u0056\\uFFFD\\uFFFD\\u0024\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0045\\uFFFD\\u0026\\uFFFD\\u0061\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0026\\u0001\\uFFFD\\u0012\\u001F\\uFFFD\\u0035\\u002F\\uFFFD\\u0034\\u0069\\u0048\\u002B\\uFFFD\\uFFFD\\uFFFD\\u0049\\u005D\\uFFFD\\u004B\\uFFFD\\u0726\\u0022\\u003F\\uFFFD\\u000B\\uFFFD\\u004C\\uFFFD\\uFFFD\\u006E\\u004E\\u0027\\uFFFD\\uFFFD\\u0006\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0000\\u0021\\u0029\\u007A\\u0076\\u005C\\uFFFD\\u0000\\uFFFD\\u006C\\u0078\\u0046\\uFFFD\\u0064\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0042\\u007E\\u006F\\uFFFD\\u0021\\u0003\\u0027\\u0075\\u001B\\u006B\\u0036\\u0001\\uFFFD\\uFFFD\\uFFFD\\u000D\\uFFFD\\u0003\\u0049\\u0035\\u007F\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\u0062\\uFFFD\\u007D\\uFFFD\\u0018\\u0040\\uFFFD\\u006F\\uFFFD\\uFFFD\\u002A\\uFFFD\\uFFFD\\u000A\\uFFFD\\uFFFD\\uFFFD\\u0013\\u0004\\u003B\\uFFFD\\u0010');\n  t.end();\n});\ntest('utf8 replacement chars for anything in the surrogate pair range', function(t) {\n  t.equal(new B([0xED, 0x9F, 0xBF]).toString(), '\\uD7FF');\n  t.equal(new B([0xED, 0xA0, 0x80]).toString(), '\\uFFFD\\uFFFD\\uFFFD');\n  t.equal(new B([0xED, 0xBE, 0x8B]).toString(), '\\uFFFD\\uFFFD\\uFFFD');\n  t.equal(new B([0xED, 0xBF, 0xBF]).toString(), '\\uFFFD\\uFFFD\\uFFFD');\n  t.equal(new B([0xEE, 0x80, 0x80]).toString(), '\\uE000');\n  t.end();\n});\ntest('utf8 don\\'t replace the replacement char', function(t) {\n  t.equal(new B('\\uFFFD').toString(), '\\uFFFD');\n  t.end();\n});\n"]}