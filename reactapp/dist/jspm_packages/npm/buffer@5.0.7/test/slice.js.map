{"version":3,"sources":["../../../../../jspm_packages/npm/buffer@5.0.7/test/slice.js"],"names":["B","require","Buffer","test","t","buf1","i","buf2","slice","equal","toString","length","charCodeAt","end"],"mappings":";;AAAA;AACA,IAAIA,IAAIC,QAAQ,UAAR,EAAoBC,MAA5B;AACA,IAAIC,OAAOF,QAAQ,MAAR,CAAX;AACAE,KAAK,+DAAL,EAAsE,UAASC,CAAT,EAAY;AAChF,MAAIC,OAAO,IAAIL,CAAJ,CAAM,EAAN,CAAX;AACA,OAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAC3BD,SAAKC,CAAL,IAAUA,IAAI,EAAd;AACD;AACD,MAAIC,OAAOF,KAAKG,KAAL,CAAW,CAAX,EAAc,CAAd,CAAX;AACAJ,IAAEK,KAAF,CAAQF,KAAKG,QAAL,CAAc,OAAd,EAAuB,CAAvB,EAA0BH,KAAKI,MAA/B,CAAR,EAAgD,KAAhD;AACAJ,OAAK,CAAL,IAAU,IAAIK,UAAJ,CAAe,CAAf,CAAV;AACAR,IAAEK,KAAF,CAAQJ,KAAKK,QAAL,CAAc,OAAd,EAAuB,CAAvB,EAA0BH,KAAKI,MAA/B,CAAR,EAAgD,KAAhD;AACAP,IAAES,GAAF;AACD,CAVD;AAWAV,KAAK,4DAAL,EAAmE,UAASC,CAAT,EAAY;AAC7E,MAAIC,OAAO,IAAIL,CAAJ,CAAM,EAAN,CAAX;AACA,OAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAC3BD,SAAKC,CAAL,IAAUA,IAAI,EAAd;AACD;AACD,MAAIC,OAAOF,KAAKG,KAAL,CAAW,CAAX,EAAc,CAAd,CAAX;AACAJ,IAAEK,KAAF,CAAQF,KAAKG,QAAL,CAAc,OAAd,EAAuB,CAAvB,EAA0BH,KAAKI,MAA/B,CAAR,EAAgD,KAAhD;AACAN,OAAK,CAAL,IAAU,IAAIO,UAAJ,CAAe,CAAf,CAAV;AACAR,IAAEK,KAAF,CAAQF,KAAKG,QAAL,CAAc,OAAd,EAAuB,CAAvB,EAA0BH,KAAKI,MAA/B,CAAR,EAAgD,KAAhD;AACAP,IAAES,GAAF;AACD,CAVD","file":"slice.js","sourcesContent":["/* */ \nvar B = require('../index').Buffer;\nvar test = require('tape');\ntest('modifying buffer created by .slice() modifies original memory', function(t) {\n  var buf1 = new B(26);\n  for (var i = 0; i < 26; i++) {\n    buf1[i] = i + 97;\n  }\n  var buf2 = buf1.slice(0, 3);\n  t.equal(buf2.toString('ascii', 0, buf2.length), 'abc');\n  buf2[0] = '!'.charCodeAt(0);\n  t.equal(buf1.toString('ascii', 0, buf2.length), '!bc');\n  t.end();\n});\ntest('modifying parent buffer modifies .slice() buffer\\'s memory', function(t) {\n  var buf1 = new B(26);\n  for (var i = 0; i < 26; i++) {\n    buf1[i] = i + 97;\n  }\n  var buf2 = buf1.slice(0, 3);\n  t.equal(buf2.toString('ascii', 0, buf2.length), 'abc');\n  buf1[0] = '!'.charCodeAt(0);\n  t.equal(buf2.toString('ascii', 0, buf2.length), '!bc');\n  t.end();\n});\n"]}