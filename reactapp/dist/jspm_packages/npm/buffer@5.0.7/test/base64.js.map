{"version":3,"sources":["../../../../../jspm_packages/npm/buffer@5.0.7/test/base64.js"],"names":["B","require","Buffer","test","t","text","buf","equal","toString","end","highByte","from","deepEqual","alloc"],"mappings":";;AAAA;AACA,IAAIA,IAAIC,QAAQ,UAAR,EAAoBC,MAA5B;AACA,IAAIC,OAAOF,QAAQ,MAAR,CAAX;AACAE,KAAK,2BAAL,EAAkC,UAASC,CAAT,EAAY;AAC5C,MAAIC,OAAO,iBAAX;AACA,MAAIC,MAAM,IAAIN,CAAJ,CAAMK,IAAN,EAAY,QAAZ,CAAV;AACAD,IAAEG,KAAF,CAAQD,IAAIE,QAAJ,EAAR,EAAwB,MAAxB;AACAJ,IAAEK,GAAF;AACD,CALD;AAMAN,KAAK,iCAAL,EAAwC,UAASC,CAAT,EAAY;AAClDA,IAAEG,KAAF,CAAS,IAAIP,CAAJ,CAAM,QAAN,EAAgB,QAAhB,EAA0BQ,QAA1B,EAAT,EAAgD,MAAhD;AACAJ,IAAEK,GAAF;AACD,CAHD;AAIAN,KAAK,mDAAL,EAA0D,UAASC,CAAT,EAAY;AACpEA,IAAEG,KAAF,CAAQ,IAAIP,CAAJ,CAAM,8DAAN,EAAsE,QAAtE,EAAgFQ,QAAhF,CAAyF,MAAzF,CAAR,EAA0G,kDAA1G;AACAJ,IAAEK,GAAF;AACD,CAHD;AAIAN,KAAK,kDAAL,EAAyD,UAASC,CAAT,EAAY;AACnEA,IAAEG,KAAF,CAAQ,IAAIP,CAAJ,CAAM,4HAAN,EAAoI,QAApI,EAA8IQ,QAA9I,CAAuJ,MAAvJ,CAAR,EAAwK,kGAAxK;AACAJ,IAAEK,GAAF;AACD,CAHD;AAIAN,KAAK,wDAAL,EAA+D,UAASC,CAAT,EAAY;AACzEA,IAAEG,KAAF,CAAQ,IAAIP,CAAJ,CAAM,kIAAN,EAA0I,QAA1I,EAAoJQ,QAApJ,CAA6J,MAA7J,CAAR,EAA8K,kGAA9K;AACAJ,IAAEK,GAAF;AACD,CAHD;AAIAN,KAAK,mEAAL,EAA0E,UAASC,CAAT,EAAY;AACpFA,IAAEG,KAAF,CAAQ,IAAIP,CAAJ,CAAM,gCAAN,EAAwC,QAAxC,EAAkDQ,QAAlD,CAA2D,MAA3D,CAAR,EAA4E,EAA5E;AACAJ,IAAEK,GAAF;AACD,CAHD;AAIAN,KAAK,mBAAL,EAA0B,UAASC,CAAT,EAAY;AACpC,MAAIM,WAAWV,EAAEW,IAAF,CAAO,CAAC,GAAD,CAAP,CAAf;AACAP,IAAEQ,SAAF,CAAYZ,EAAEa,KAAF,CAAQ,CAAR,EAAWH,SAASF,QAAT,CAAkB,QAAlB,CAAX,EAAwC,QAAxC,CAAZ,EAA+DE,QAA/D;AACAN,IAAEK,GAAF;AACD,CAJD","file":"base64.js","sourcesContent":["/* */ \nvar B = require('../index').Buffer;\nvar test = require('tape');\ntest('base64: ignore whitespace', function(t) {\n  var text = '\\n   YW9ldQ==  ';\n  var buf = new B(text, 'base64');\n  t.equal(buf.toString(), 'aoeu');\n  t.end();\n});\ntest('base64: strings without padding', function(t) {\n  t.equal((new B('YW9ldQ', 'base64').toString()), 'aoeu');\n  t.end();\n});\ntest('base64: newline in utf8 -- should not be an issue', function(t) {\n  t.equal(new B('LS0tCnRpdGxlOiBUaHJlZSBkYXNoZXMgbWFya3MgdGhlIHNwb3QKdGFnczoK', 'base64').toString('utf8'), '---\\ntitle: Three dashes marks the spot\\ntags:\\n');\n  t.end();\n});\ntest('base64: newline in base64 -- should get stripped', function(t) {\n  t.equal(new B('LS0tCnRpdGxlOiBUaHJlZSBkYXNoZXMgbWFya3MgdGhlIHNwb3QKdGFnczoK\\nICAtIHlhbWwKICAtIGZyb250LW1hdHRlcgogIC0gZGFzaGVzCmV4cGFuZWQt', 'base64').toString('utf8'), '---\\ntitle: Three dashes marks the spot\\ntags:\\n  - yaml\\n  - front-matter\\n  - dashes\\nexpaned-');\n  t.end();\n});\ntest('base64: tab characters in base64 - should get stripped', function(t) {\n  t.equal(new B('LS0tCnRpdGxlOiBUaHJlZSBkYXNoZXMgbWFya3MgdGhlIHNwb3QKdGFnczoK\\t\\t\\t\\tICAtIHlhbWwKICAtIGZyb250LW1hdHRlcgogIC0gZGFzaGVzCmV4cGFuZWQt', 'base64').toString('utf8'), '---\\ntitle: Three dashes marks the spot\\ntags:\\n  - yaml\\n  - front-matter\\n  - dashes\\nexpaned-');\n  t.end();\n});\ntest('base64: invalid non-alphanumeric characters -- should be stripped', function(t) {\n  t.equal(new B('!\"#$%&\\'()*,.:;<=>?@[\\\\]^`{|}~', 'base64').toString('utf8'), '');\n  t.end();\n});\ntest('base64: high byte', function(t) {\n  var highByte = B.from([128]);\n  t.deepEqual(B.alloc(1, highByte.toString('base64'), 'base64'), highByte);\n  t.end();\n});\n"]}