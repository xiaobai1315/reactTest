{"version":3,"sources":["../../../../../../jspm_packages/npm/buffer@5.0.7/test/node/test-buffer-swap.js"],"names":["Buffer","require","assert","buf","from","strictEqual","swap16","deepStrictEqual","swap32","swap64","buf3","slice","buf3_64","buf4A","Uint32Array","fill","buf4","buffer","byteOffset","buf5A","buf5","buf6A","buf6","bu7A","buf7","buf8A","Uint8Array","buf9A","i","length","buf8","buf9","buf10A","buf11A","buf10","buf11","buf12A","buf13A","buf12","buf13","buf14A","buf15A","buf14","buf15","re16","re32","re64","throws","alloc"],"mappings":"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","file":"test-buffer-swap.js","sourcesContent":["/* */ \n'use strict';\nvar Buffer = require('../../index').Buffer;\nvar assert = require('assert');\nvar buf = Buffer.from([0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10]);\nassert.strictEqual(buf, buf.swap16());\nassert.deepStrictEqual(buf, Buffer.from([0x02, 0x01, 0x04, 0x03, 0x06, 0x05, 0x08, 0x07, 0x0a, 0x09, 0x0c, 0x0b, 0x0e, 0x0d, 0x10, 0x0f]));\nbuf.swap16();\nassert.strictEqual(buf, buf.swap32());\nassert.deepStrictEqual(buf, Buffer.from([0x04, 0x03, 0x02, 0x01, 0x08, 0x07, 0x06, 0x05, 0x0c, 0x0b, 0x0a, 0x09, 0x10, 0x0f, 0x0e, 0x0d]));\nbuf.swap32();\nassert.strictEqual(buf, buf.swap64());\nassert.deepStrictEqual(buf, Buffer.from([0x08, 0x07, 0x06, 0x05, 0x04, 0x03, 0x02, 0x01, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0b, 0x0a, 0x09]));\nvar buf3 = Buffer.from([0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7]);\nbuf3.slice(1, 5).swap32();\nassert.deepStrictEqual(buf3, Buffer.from([0x1, 0x5, 0x4, 0x3, 0x2, 0x6, 0x7]));\nbuf3.slice(1, 5).swap16();\nassert.deepStrictEqual(buf3, Buffer.from([0x1, 0x4, 0x5, 0x2, 0x3, 0x6, 0x7]));\nvar buf3_64 = Buffer.from([0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10]);\nbuf3_64.slice(2, 18).swap64();\nassert.deepStrictEqual(buf3_64, Buffer.from([0x01, 0x02, 0x0a, 0x09, 0x08, 0x07, 0x06, 0x05, 0x04, 0x03, 0x02, 0x01, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0b, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10]));\nvar buf4A = new Uint32Array(256).fill(0x04030201);\nvar buf4 = Buffer.from(buf4A.buffer, buf4A.byteOffset);\nvar buf5A = new Uint32Array(256).fill(0x03040102);\nvar buf5 = Buffer.from(buf5A.buffer, buf5A.byteOffset);\nbuf4.swap16();\nassert.deepStrictEqual(buf4, buf5);\nvar buf6A = new Uint32Array(256).fill(0x04030201);\nvar buf6 = Buffer.from(buf6A.buffer);\nvar bu7A = new Uint32Array(256).fill(0x01020304);\nvar buf7 = Buffer.from(bu7A.buffer, bu7A.byteOffset);\nbuf6.swap32();\nassert.deepStrictEqual(buf6, buf7);\nvar buf8A = new Uint8Array(256 * 8);\nvar buf9A = new Uint8Array(256 * 8);\nfor (var i = 0; i < buf8A.length; i++) {\n  buf8A[i] = i % 8;\n  buf9A[buf9A.length - i - 1] = i % 8;\n}\nvar buf8 = Buffer.from(buf8A.buffer, buf8A.byteOffset);\nvar buf9 = Buffer.from(buf9A.buffer, buf9A.byteOffset);\nbuf8.swap64();\nassert.deepStrictEqual(buf8, buf9);\nvar buf10A = new Uint8Array(256 * 8);\nvar buf11A = new Uint8Array(256 * 8 - 2);\nfor (var i = 0; i < buf10A.length; i++) {\n  buf10A[i] = i % 2;\n}\nfor (var i = 1; i < buf11A.length; i++) {\n  buf11A[buf11A.length - i] = (i + 1) % 2;\n}\nvar buf10 = Buffer.from(buf10A.buffer, buf10A.byteOffset);\nvar buf11 = Buffer.from(buf11A.buffer, buf11A.byteOffset);\nbuf10.slice(1, buf10.length - 1).swap16();\nassert.deepStrictEqual(buf10.slice(0, buf11.length), buf11);\nvar buf12A = new Uint8Array(256 * 8);\nvar buf13A = new Uint8Array(256 * 8 - 4);\nfor (var i = 0; i < buf12A.length; i++) {\n  buf12A[i] = i % 4;\n}\nfor (var i = 1; i < buf13A.length; i++) {\n  buf13A[buf13A.length - i] = (i + 1) % 4;\n}\nvar buf12 = Buffer.from(buf12A.buffer, buf12A.byteOffset);\nvar buf13 = Buffer.from(buf13A.buffer, buf13A.byteOffset);\nbuf12.slice(1, buf12.length - 3).swap32();\nassert.deepStrictEqual(buf12.slice(0, buf13.length), buf13);\nvar buf14A = new Uint8Array(256 * 8);\nvar buf15A = new Uint8Array(256 * 8 - 8);\nfor (var i = 0; i < buf14A.length; i++) {\n  buf14A[i] = i % 8;\n}\nfor (var i = 1; i < buf15A.length; i++) {\n  buf15A[buf15A.length - i] = (i + 1) % 8;\n}\nvar buf14 = Buffer.from(buf14A.buffer, buf14A.byteOffset);\nvar buf15 = Buffer.from(buf15A.buffer, buf15A.byteOffset);\nbuf14.slice(1, buf14.length - 7).swap64();\nassert.deepStrictEqual(buf14.slice(0, buf15.length), buf15);\nvar re16 = /Buffer size must be a multiple of 16-bits/;\nvar re32 = /Buffer size must be a multiple of 32-bits/;\nvar re64 = /Buffer size must be a multiple of 64-bits/;\nassert.throws(() => Buffer.from(buf3).swap16(), re16);\nassert.throws(() => Buffer.alloc(1025).swap16(), re16);\nassert.throws(() => Buffer.from(buf3).swap32(), re32);\nassert.throws(() => buf3.slice(1, 3).swap32(), re32);\nassert.throws(() => Buffer.alloc(1025).swap32(), re32);\nassert.throws(() => buf3.slice(1, 3).swap64(), re64);\nassert.throws(() => Buffer.alloc(1025).swap64(), re64);\n"]}