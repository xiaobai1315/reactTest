{"version":3,"sources":["../../../../../../jspm_packages/npm/buffer@5.0.7/test/node/test-buffer-iterator.js"],"names":["Buffer","require","assert","buffer","from","arr","b","push","deepStrictEqual","Symbol","iterator","values","keys","entries"],"mappings":"AAAA;AACA;;AACA,IAAIA,SAASC,QAAQ,aAAR,EAAuBD,MAApC;AACA,IAAIE,SAASD,QAAQ,QAAR,CAAb;AACA,IAAIE,SAASH,OAAOI,IAAP,CAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAZ,CAAb;AACA,IAAIC,GAAJ;AACA,IAAIC,CAAJ;AACAD,MAAM,EAAN;;;;;;AACA,uBAAUF,MAAV;AAAKG,KAAL;;AACED,QAAIE,IAAJ,CAASD,CAAT;AADF;;;;;;;;;;;;;;;;AAEAJ,OAAOM,eAAP,CAAuBH,GAAvB,EAA4B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAA5B;AACAA,MAAM,EAAN;;;;;;AACA,wBAAUF,OAAOM,OAAOC,QAAd,GAAV;AAAKJ,KAAL;;AACED,QAAIE,IAAJ,CAASD,CAAT;AADF;;;;;;;;;;;;;;;;AAEAJ,OAAOM,eAAP,CAAuBH,GAAvB,EAA4B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAA5B;AACAA,MAAM,EAAN;;;;;;AACA,wBAAUF,OAAOQ,MAAP,EAAV;AAAKL,KAAL;;AACED,QAAIE,IAAJ,CAASD,CAAT;AADF;;;;;;;;;;;;;;;;AAEAJ,OAAOM,eAAP,CAAuBH,GAAvB,EAA4B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAA5B;AACAA,MAAM,EAAN;;;;;;AACA,wBAAUF,OAAOS,IAAP,EAAV;AAAKN,KAAL;;AACED,QAAIE,IAAJ,CAASD,CAAT;AADF;;;;;;;;;;;;;;;;AAEAJ,OAAOM,eAAP,CAAuBH,GAAvB,EAA4B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAA5B;AACAA,MAAM,EAAN;;;;;;AACA,wBAAUF,OAAOU,OAAP,EAAV;AAAKP,KAAL;;AACED,QAAIE,IAAJ,CAASD,CAAT;AADF;;;;;;;;;;;;;;;;AAEAJ,OAAOM,eAAP,CAAuBH,GAAvB,EAA4B,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC,CAA5B","file":"test-buffer-iterator.js","sourcesContent":["/* */ \n'use strict';\nvar Buffer = require('../../index').Buffer;\nvar assert = require('assert');\nvar buffer = Buffer.from([1, 2, 3, 4, 5]);\nvar arr;\nvar b;\narr = [];\nfor (b of buffer)\n  arr.push(b);\nassert.deepStrictEqual(arr, [1, 2, 3, 4, 5]);\narr = [];\nfor (b of buffer[Symbol.iterator]())\n  arr.push(b);\nassert.deepStrictEqual(arr, [1, 2, 3, 4, 5]);\narr = [];\nfor (b of buffer.values())\n  arr.push(b);\nassert.deepStrictEqual(arr, [1, 2, 3, 4, 5]);\narr = [];\nfor (b of buffer.keys())\n  arr.push(b);\nassert.deepStrictEqual(arr, [0, 1, 2, 3, 4]);\narr = [];\nfor (b of buffer.entries())\n  arr.push(b);\nassert.deepStrictEqual(arr, [[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]]);\n"]}