{"version":3,"sources":["../../../../../../jspm_packages/npm/buffer@5.0.7/test/node/test-buffer-concat.js"],"names":["Buffer","require","assert","zero","one","from","long","i","push","flatZero","concat","flatOne","flatLong","flatLongLen","length","toString","Array","join","assertWrongList","value","throws","err","TypeError","message"],"mappings":"AAAA;AACA;;AACA,IAAIA,SAASC,QAAQ,aAAR,EAAuBD,MAApC;AACA,IAAIE,SAASD,QAAQ,QAAR,CAAb;AACA,IAAIE,OAAO,EAAX;AACA,IAAIC,MAAM,CAACJ,OAAOK,IAAP,CAAY,MAAZ,CAAD,CAAV;AACA,IAAIC,OAAO,EAAX;AACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB;AACED,OAAKE,IAAL,CAAUR,OAAOK,IAAP,CAAY,MAAZ,CAAV;AADF,CAEA,IAAII,WAAWT,OAAOU,MAAP,CAAcP,IAAd,CAAf;AACA,IAAIQ,UAAUX,OAAOU,MAAP,CAAcN,GAAd,CAAd;AACA,IAAIQ,WAAWZ,OAAOU,MAAP,CAAcJ,IAAd,CAAf;AACA,IAAIO,cAAcb,OAAOU,MAAP,CAAcJ,IAAd,EAAoB,EAApB,CAAlB;AACAJ,OAAOO,SAASK,MAAT,KAAoB,CAA3B;AACAZ,OAAOS,QAAQI,QAAR,OAAuB,MAA9B;AACAb,OAAOS,YAAYP,IAAI,CAAJ,CAAnB;AACAF,OAAOU,SAASG,QAAT,OAAyB,IAAIC,KAAJ,CAAU,KAAK,CAAf,EAAkBC,IAAlB,CAAuB,MAAvB,CAAhC;AACAf,OAAOW,YAAYE,QAAZ,OAA4B,IAAIC,KAAJ,CAAU,KAAK,CAAf,EAAkBC,IAAlB,CAAuB,MAAvB,CAAnC;AACAC;AACAA,gBAAgB,IAAhB;AACAA,gBAAgBlB,OAAOK,IAAP,CAAY,OAAZ,CAAhB;AACAa,gBAAgB,CAAC,EAAD,CAAhB;AACAA,gBAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB;AACAA,gBAAgB,CAAC,OAAD,EAAUlB,OAAOK,IAAP,CAAY,OAAZ,CAAV,CAAhB;AACA,SAASa,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BjB,SAAOkB,MAAP,CAAc,YAAW;AACvBpB,WAAOU,MAAP,CAAcS,KAAd;AACD,GAFD,EAEG,UAASE,GAAT,EAAc;AACf,WAAOA,eAAeC,SAAf,IAA4BD,IAAIE,OAAJ,KAAgB,6CAAnD;AACD,GAJD;AAKD","file":"test-buffer-concat.js","sourcesContent":["/* */ \n'use strict';\nvar Buffer = require('../../index').Buffer;\nvar assert = require('assert');\nvar zero = [];\nvar one = [Buffer.from('asdf')];\nvar long = [];\nfor (var i = 0; i < 10; i++)\n  long.push(Buffer.from('asdf'));\nvar flatZero = Buffer.concat(zero);\nvar flatOne = Buffer.concat(one);\nvar flatLong = Buffer.concat(long);\nvar flatLongLen = Buffer.concat(long, 40);\nassert(flatZero.length === 0);\nassert(flatOne.toString() === 'asdf');\nassert(flatOne !== one[0]);\nassert(flatLong.toString() === (new Array(10 + 1).join('asdf')));\nassert(flatLongLen.toString() === (new Array(10 + 1).join('asdf')));\nassertWrongList();\nassertWrongList(null);\nassertWrongList(Buffer.from('hello'));\nassertWrongList([42]);\nassertWrongList(['hello', 'world']);\nassertWrongList(['hello', Buffer.from('world')]);\nfunction assertWrongList(value) {\n  assert.throws(function() {\n    Buffer.concat(value);\n  }, function(err) {\n    return err instanceof TypeError && err.message === '\"list\" argument must be an Array of Buffers';\n  });\n}\n"]}