{"version":3,"sources":["../../../../../../jspm_packages/npm/buffer@5.0.7/test/node/test-buffer-alloc.js"],"names":["Buffer","require","common","skip","assert","cntr","b","allocUnsafe","strictEqual","length","i","c","d","from","ui32","Uint32Array","fill","e","entries","index","value","throws","alloc","buf","equal","charCodeAt","toString","copied","copy","Math","floor","bb","doesNotThrow","RangeError","caught_error","err","message","write","rangeBuffer","Infinity","NaN","undefined","Number","writeTest","asciiString","asciiSlice","offset","written","sliceA","slice","sliceB","utf8String","byteLength","utf8Slice","parent","allocUnsafeSlow","testValue","buffer","size","a","deepStrictEqual","f","forEach","encoding","arrayIsh","g","strArrayIsh","expected","quote","bytesWritten","expectedWhite","expectedIllegal","dot","segments","pos","l","poolSize","s","sb","hexb","hexStr","hexb2","b2","b3","b4","buildBuffer","data","Array","isArray","v","k","x","inspect","z","String","fromCharCode","writeUInt32LE","writeUInt16LE","writeUInt8","writeInt8","writeDoubleLE","sub","split","enc","isEncoding","string","JSON","stringify","parse","key","type","json","obj","equals","readFloatLE","writeFloatLE","readUInt8","readInt8","bits","readUIntLE","readUIntBE","readIntLE","readIntBE","writeUIntLE","toJSON","writeUIntBE","writeIntLE","writeIntBE","utf16Buf","TypeError","concat","map","_","hasCrypto","crypto","b1","createHash","update","digest","compare","ok","ps","regErrorMsg","RegExp","ArrayBuffer","ubuf","valueOf"],"mappings":"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","file":"test-buffer-alloc.js","sourcesContent":["/* */ \n'use strict';\nvar Buffer = require('../../index').Buffer;\nvar common = {skip: function() {}};\nvar assert = require('assert');\nvar Buffer = require('../../index').Buffer;\nvar cntr = 0;\nvar b = Buffer.allocUnsafe(1024);\nassert.strictEqual(1024, b.length);\nb[0] = -1;\nassert.strictEqual(b[0], 255);\nfor (var i = 0; i < 1024; i++) {\n  b[i] = i % 256;\n}\nfor (var i = 0; i < 1024; i++) {\n  assert.strictEqual(i % 256, b[i]);\n}\nvar c = Buffer.allocUnsafe(512);\nassert.strictEqual(512, c.length);\nvar d = Buffer.from([]);\nassert.strictEqual(0, d.length);\nvar ui32 = new Uint32Array(4).fill(42);\nvar e = Buffer.from(ui32);\nfor (var [index, value] of e.entries()) {\n  assert.strictEqual(value, ui32[index]);\n}\nassert.throws(function() {\n  Buffer.allocUnsafe(8).fill('a', -1);\n});\nassert.throws(function() {\n  Buffer.allocUnsafe(8).fill('a', 0, 9);\n});\nBuffer.allocUnsafe(8).fill('');\nBuffer.alloc(8, '');\n{\n  var buf = Buffer.alloc(64, 10);\n  for (var i = 0; i < buf.length; i++)\n    assert.equal(buf[i], 10);\n  buf.fill(11, 0, buf.length >> 1);\n  for (var i = 0; i < buf.length >> 1; i++)\n    assert.equal(buf[i], 11);\n  for (var i = (buf.length >> 1) + 1; i < buf.length; i++)\n    assert.equal(buf[i], 10);\n  buf.fill('h');\n  for (var i = 0; i < buf.length; i++)\n    assert.equal('h'.charCodeAt(0), buf[i]);\n  buf.fill(0);\n  for (var i = 0; i < buf.length; i++)\n    assert.equal(0, buf[i]);\n  buf.fill(null);\n  for (var i = 0; i < buf.length; i++)\n    assert.equal(0, buf[i]);\n  buf.fill(1, 16, 32);\n  for (var i = 0; i < 16; i++)\n    assert.equal(0, buf[i]);\n  for (var i = 16; i < 32; i++)\n    assert.equal(1, buf[i]);\n  for (var i = 32; i < buf.length; i++)\n    assert.equal(0, buf[i]);\n}\n{\n  var buf = Buffer.alloc(10, 'abc');\n  assert.equal(buf.toString(), 'abcabcabca');\n  buf.fill('է');\n  assert.equal(buf.toString(), 'էէէէէ');\n}\n{\n  b.fill(++cntr);\n  c.fill(++cntr);\n  var copied = b.copy(c, 0, 0, 512);\n  assert.strictEqual(512, copied);\n  for (var i = 0; i < c.length; i++) {\n    assert.strictEqual(b[i], c[i]);\n  }\n}\n{\n  b.fill(++cntr);\n  c.fill(++cntr);\n  var copied = c.copy(b, 0, 0);\n  assert.strictEqual(c.length, copied);\n  for (var i = 0; i < c.length; i++) {\n    assert.strictEqual(c[i], b[i]);\n  }\n}\n{\n  b.fill(++cntr);\n  c.fill(++cntr);\n  var copied = c.copy(b, 0);\n  assert.strictEqual(c.length, copied);\n  for (var i = 0; i < c.length; i++) {\n    assert.strictEqual(c[i], b[i]);\n  }\n}\n{\n  b.fill(++cntr);\n  c.fill(++cntr);\n  var copied = b.copy(c);\n  assert.strictEqual(c.length, copied);\n  for (var i = 0; i < c.length; i++) {\n    assert.strictEqual(b[i], c[i]);\n  }\n}\n{\n  b.fill(++cntr);\n  c.fill(++cntr);\n  var copied = b.copy(c, 0, b.length - Math.floor(c.length / 2));\n  assert.strictEqual(Math.floor(c.length / 2), copied);\n  for (var i = 0; i < Math.floor(c.length / 2); i++) {\n    assert.strictEqual(b[b.length - Math.floor(c.length / 2) + i], c[i]);\n  }\n  for (var i = Math.floor(c.length / 2) + 1; i < c.length; i++) {\n    assert.strictEqual(c[c.length - 1], c[i]);\n  }\n}\n{\n  b.fill(++cntr);\n  c.fill(++cntr);\n  var copied = b.copy(c, 0, 0, 513);\n  assert.strictEqual(c.length, copied);\n  for (var i = 0; i < c.length; i++) {\n    assert.strictEqual(b[i], c[i]);\n  }\n}\n{\n  b.fill(++cntr);\n  b.fill(++cntr, 256);\n  var copied = b.copy(b, 0, 256, 1024);\n  assert.strictEqual(768, copied);\n  for (var i = 0; i < b.length; i++) {\n    assert.strictEqual(cntr, b[i]);\n  }\n}\nvar bb = Buffer.allocUnsafe(10);\nbb.fill('hello crazy world');\nassert.doesNotThrow(() => {\n  b.copy(c, 0, 100, 10);\n});\nassert.throws(function() {\n  Buffer.allocUnsafe(5).copy(Buffer.allocUnsafe(5), 0, -1);\n}, RangeError);\n{\n  b.fill(++cntr);\n  c.fill(++cntr);\n  var copied = b.copy(c, 0, 0, 1025);\n  for (var i = 0; i < c.length; i++) {\n    assert.strictEqual(b[i], c[i]);\n  }\n}\nassert.throws(function() {\n  b.copy(c, 0, 0, -1);\n}, RangeError);\nassert.equal(b.copy(c, 0, 100, 10), 0);\nassert.equal(b.copy(c, 512, 0, 10), 0);\nvar caught_error;\ncaught_error = null;\ntry {\n  b.toString('invalid');\n} catch (err) {\n  caught_error = err;\n}\nassert.strictEqual('Unknown encoding: invalid', caught_error.message);\ncaught_error = null;\ntry {\n  b.write('test string', 0, 5, 'invalid');\n} catch (err) {\n  caught_error = err;\n}\nassert.strictEqual('Unknown encoding: invalid', caught_error.message);\nBuffer.from('');\nBuffer.from('', 'ascii');\nBuffer.from('', 'latin1');\nBuffer.alloc(0);\nBuffer.allocUnsafe(0);\nassert.throws(function() {\n  b.write('', 2048);\n}, RangeError);\nassert.throws(function() {\n  b.write('a', -1);\n}, RangeError);\nassert.throws(function() {\n  b.write('a', 2048);\n}, RangeError);\nassert.throws(function() {\n  b.write('a', -1);\n}, RangeError);\nb.copy(Buffer.alloc(0), 0, 0, 0);\nb.copy(Buffer.alloc(0), 1, 1, 1);\nb.copy(Buffer.alloc(1), 1, 1, 1);\nb.copy(Buffer.alloc(1), 0, 2048, 2048);\nvar rangeBuffer = Buffer.from('abc');\nassert.equal(rangeBuffer.toString('ascii', 3), '');\nassert.equal(rangeBuffer.toString('ascii', +Infinity), '');\nassert.equal(rangeBuffer.toString('ascii', 3.14, 3), '');\nassert.equal(rangeBuffer.toString('ascii', 'Infinity', 3), '');\nassert.equal(rangeBuffer.toString('ascii', 1, 0), '');\nassert.equal(rangeBuffer.toString('ascii', 1, -1.2), '');\nassert.equal(rangeBuffer.toString('ascii', 1, -100), '');\nassert.equal(rangeBuffer.toString('ascii', 1, -Infinity), '');\nassert.equal(rangeBuffer.toString('ascii', -1, 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', -1.99, 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', -Infinity, 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', '-1', 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', '-1.99', 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', '-Infinity', 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 'node.js', 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', {}, 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', [], 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', NaN, 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', null, 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', undefined, 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', false, 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', '', 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', '-1', 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', '1', 3), 'bc');\nassert.equal(rangeBuffer.toString('ascii', '-Infinity', 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', '3', 3), '');\nassert.equal(rangeBuffer.toString('ascii', Number(3), 3), '');\nassert.equal(rangeBuffer.toString('ascii', '3.14', 3), '');\nassert.equal(rangeBuffer.toString('ascii', '1.99', 3), 'bc');\nassert.equal(rangeBuffer.toString('ascii', '-1.99', 3), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 1.99, 3), 'bc');\nassert.equal(rangeBuffer.toString('ascii', true, 3), 'bc');\nassert.equal(rangeBuffer.toString('ascii', 0, 5), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 0, 6.99), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 0, Infinity), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 0, '5'), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 0, '6.99'), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 0, 'Infinity'), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 0, 'node.js'), '');\nassert.equal(rangeBuffer.toString('ascii', 0, {}), '');\nassert.equal(rangeBuffer.toString('ascii', 0, NaN), '');\nassert.equal(rangeBuffer.toString('ascii', 0, undefined), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 0), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 0, null), '');\nassert.equal(rangeBuffer.toString('ascii', 0, []), '');\nassert.equal(rangeBuffer.toString('ascii', 0, false), '');\nassert.equal(rangeBuffer.toString('ascii', 0, ''), '');\nassert.equal(rangeBuffer.toString('ascii', 0, '-1'), '');\nassert.equal(rangeBuffer.toString('ascii', 0, '1'), 'a');\nassert.equal(rangeBuffer.toString('ascii', 0, '-Infinity'), '');\nassert.equal(rangeBuffer.toString('ascii', 0, '3'), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 0, Number(3)), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 0, '3.14'), 'abc');\nassert.equal(rangeBuffer.toString('ascii', 0, '1.99'), 'a');\nassert.equal(rangeBuffer.toString('ascii', 0, '-1.99'), '');\nassert.equal(rangeBuffer.toString('ascii', 0, 1.99), 'a');\nassert.equal(rangeBuffer.toString('ascii', 0, true), 'a');\nassert.equal(rangeBuffer.toString({toString: function() {\n    return 'ascii';\n  }}), 'abc');\nvar writeTest = Buffer.from('abcdes');\nwriteTest.write('n', 'ascii');\nwriteTest.write('o', '1', 'ascii');\nwriteTest.write('d', '2', 'ascii');\nwriteTest.write('e', 3, 'ascii');\nwriteTest.write('j', 4, 'ascii');\nassert.equal(writeTest.toString(), 'nodejs');\n{\n  var asciiString = 'hello world';\n  for (var i = 0; i < asciiString.length; i++) {\n    b[i] = asciiString.charCodeAt(i);\n  }\n  var asciiSlice = b.toString('ascii', 0, asciiString.length);\n  assert.equal(asciiString, asciiSlice);\n}\n{\n  var asciiString = 'hello world';\n  var offset = 100;\n  var written = b.write(asciiString, offset, 'ascii');\n  assert.equal(asciiString.length, written);\n  var asciiSlice = b.toString('ascii', offset, offset + asciiString.length);\n  assert.equal(asciiString, asciiSlice);\n}\n{\n  var asciiString = 'hello world';\n  var offset = 100;\n  var sliceA = b.slice(offset, offset + asciiString.length);\n  var sliceB = b.slice(offset, offset + asciiString.length);\n  for (var i = 0; i < asciiString.length; i++) {\n    assert.equal(sliceA[i], sliceB[i]);\n  }\n}\nvar utf8String = '¡hέlló wôrld!';\nvar offset = 100;\nb.write(utf8String, 0, Buffer.byteLength(utf8String), 'utf8');\nvar utf8Slice = b.toString('utf8', 0, Buffer.byteLength(utf8String));\nassert.equal(utf8String, utf8Slice);\nvar written = b.write(utf8String, offset, 'utf8');\nassert.equal(Buffer.byteLength(utf8String), written);\nutf8Slice = b.toString('utf8', offset, offset + Buffer.byteLength(utf8String));\nassert.equal(utf8String, utf8Slice);\nvar sliceA = b.slice(offset, offset + Buffer.byteLength(utf8String));\nvar sliceB = b.slice(offset, offset + Buffer.byteLength(utf8String));\nfor (var i = 0; i < Buffer.byteLength(utf8String); i++) {\n  assert.equal(sliceA[i], sliceB[i]);\n}\n{\n  var slice = b.slice(100, 150);\n  assert.equal(50, slice.length);\n  for (var i = 0; i < 50; i++) {\n    assert.equal(b[100 + i], slice[i]);\n  }\n}\n{\n  var b = Buffer.allocUnsafe(5);\n  var c = b.slice(0, 4);\n  var d = c.slice(0, 2);\n  assert.equal(b.parent, c.parent);\n  assert.equal(b.parent, d.parent);\n}\n{\n  var b = Buffer.allocUnsafeSlow(5);\n  var c = b.slice(0, 4);\n  var d = c.slice(0, 2);\n  assert.equal(c.parent, d.parent);\n}\n{\n  var testValue = '\\u00F6\\u65E5\\u672C\\u8A9E';\n  var buffer = Buffer.allocUnsafe(32);\n  var size = buffer.write(testValue, 0, 'utf8');\n  var slice = buffer.toString('utf8', 0, size);\n  assert.equal(slice, testValue);\n}\n{\n  var a = Buffer.allocUnsafe(8);\n  for (var i = 0; i < 8; i++)\n    a[i] = i;\n  var b = a.slice(4, 8);\n  assert.equal(4, b[0]);\n  assert.equal(5, b[1]);\n  assert.equal(6, b[2]);\n  assert.equal(7, b[3]);\n  var c = b.slice(2, 4);\n  assert.equal(6, c[0]);\n  assert.equal(7, c[1]);\n}\n{\n  var d = Buffer.from([23, 42, 255]);\n  assert.equal(d.length, 3);\n  assert.equal(d[0], 23);\n  assert.equal(d[1], 42);\n  assert.equal(d[2], 255);\n  assert.deepStrictEqual(d, Buffer.from(d));\n}\n{\n  var e = Buffer.from('über');\n  assert.deepStrictEqual(e, Buffer.from([195, 188, 98, 101, 114]));\n}\n{\n  var f = Buffer.from('über', 'ascii');\n  assert.deepStrictEqual(f, Buffer.from([252, 98, 101, 114]));\n}\n['ucs2', 'ucs-2', 'utf16le', 'utf-16le'].forEach(function(encoding) {\n  {\n    var f = Buffer.from('über', encoding);\n    assert.deepStrictEqual(f, Buffer.from([252, 0, 98, 0, 101, 0, 114, 0]));\n  }\n  {\n    var f = Buffer.from('привет', encoding);\n    assert.deepStrictEqual(f, Buffer.from([63, 4, 64, 4, 56, 4, 50, 4, 53, 4, 66, 4]));\n    assert.equal(f.toString(encoding), 'привет');\n  }\n  {\n    var f = Buffer.from([0, 0, 0, 0, 0]);\n    assert.equal(f.length, 5);\n    var size = f.write('あいうえお', encoding);\n    assert.equal(size, 4);\n    assert.deepStrictEqual(f, Buffer.from([0x42, 0x30, 0x44, 0x30, 0x00]));\n  }\n});\n{\n  var f = Buffer.from('\\uD83D\\uDC4D', 'utf-16le');\n  assert.equal(f.length, 4);\n  assert.deepStrictEqual(f, Buffer.from('3DD84DDC', 'hex'));\n}\nvar arrayIsh = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  length: 4\n};\nvar g = Buffer.from(arrayIsh);\nassert.deepStrictEqual(g, Buffer.from([0, 1, 2, 3]));\nvar strArrayIsh = {\n  0: '0',\n  1: '1',\n  2: '2',\n  3: '3',\n  length: 4\n};\ng = Buffer.from(strArrayIsh);\nassert.deepStrictEqual(g, Buffer.from([0, 1, 2, 3]));\nassert.equal('TWFu', (Buffer.from('Man')).toString('base64'));\n{\n  var expected = [0xff, 0xff, 0xbe, 0xff, 0xef, 0xbf, 0xfb, 0xef, 0xff];\n  assert.deepStrictEqual(Buffer.from('//++/++/++//', 'base64'), Buffer.from(expected));\n  assert.deepStrictEqual(Buffer.from('__--_--_--__', 'base64'), Buffer.from(expected));\n}\n{\n  var quote = 'Man is distinguished, not only by his reason, but by this ' + 'singular passion from other animals, which is a lust ' + 'of the mind, that by a perseverance of delight in the ' + 'continued and indefatigable generation of knowledge, ' + 'exceeds the short vehemence of any carnal pleasure.';\n  var expected = 'TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb' + '24sIGJ1dCBieSB0aGlzIHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlci' + 'BhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2YgdGhlIG1pbmQsIHRoYXQ' + 'gYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGlu' + 'dWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZ' + 'GdlLCBleGNlZWRzIHRoZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm' + '5hbCBwbGVhc3VyZS4=';\n  assert.equal(expected, (Buffer.from(quote)).toString('base64'));\n  var b = Buffer.allocUnsafe(1024);\n  var bytesWritten = b.write(expected, 0, 'base64');\n  assert.equal(quote.length, bytesWritten);\n  assert.equal(quote, b.toString('ascii', 0, quote.length));\n  var expectedWhite = expected.slice(0, 60) + ' \\n' + expected.slice(60, 120) + ' \\n' + expected.slice(120, 180) + ' \\n' + expected.slice(180, 240) + ' \\n' + expected.slice(240, 300) + '\\n' + expected.slice(300, 360) + '\\n';\n  b = Buffer.allocUnsafe(1024);\n  bytesWritten = b.write(expectedWhite, 0, 'base64');\n  assert.equal(quote.length, bytesWritten);\n  assert.equal(quote, b.toString('ascii', 0, quote.length));\n  b = Buffer.from(expectedWhite, 'base64');\n  assert.equal(quote.length, b.length);\n  assert.equal(quote, b.toString('ascii', 0, quote.length));\n  var expectedIllegal = expected.slice(0, 60) + ' \\x80' + expected.slice(60, 120) + ' \\xff' + expected.slice(120, 180) + ' \\x00' + expected.slice(180, 240) + ' \\x98' + expected.slice(240, 300) + '\\x03' + expected.slice(300, 360);\n  b = Buffer.from(expectedIllegal, 'base64');\n  assert.equal(quote.length, b.length);\n  assert.equal(quote, b.toString('ascii', 0, quote.length));\n}\nassert.equal(Buffer.from('', 'base64').toString(), '');\nassert.equal(Buffer.from('K', 'base64').toString(), '');\nassert.equal(Buffer.from('Kg==', 'base64').toString(), '*');\nassert.equal(Buffer.from('Kio=', 'base64').toString(), '**');\nassert.equal(Buffer.from('Kioq', 'base64').toString(), '***');\nassert.equal(Buffer.from('KioqKg==', 'base64').toString(), '****');\nassert.equal(Buffer.from('KioqKio=', 'base64').toString(), '*****');\nassert.equal(Buffer.from('KioqKioq', 'base64').toString(), '******');\nassert.equal(Buffer.from('KioqKioqKg==', 'base64').toString(), '*******');\nassert.equal(Buffer.from('KioqKioqKio=', 'base64').toString(), '********');\nassert.equal(Buffer.from('KioqKioqKioq', 'base64').toString(), '*********');\nassert.equal(Buffer.from('KioqKioqKioqKg==', 'base64').toString(), '**********');\nassert.equal(Buffer.from('KioqKioqKioqKio=', 'base64').toString(), '***********');\nassert.equal(Buffer.from('KioqKioqKioqKioq', 'base64').toString(), '************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKg==', 'base64').toString(), '*************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKio=', 'base64').toString(), '**************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKioq', 'base64').toString(), '***************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKioqKg==', 'base64').toString(), '****************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKioqKio=', 'base64').toString(), '*****************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKioqKioq', 'base64').toString(), '******************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKioqKioqKg==', 'base64').toString(), '*******************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKioqKioqKio=', 'base64').toString(), '********************');\nassert.equal(Buffer.from('Kg', 'base64').toString(), '*');\nassert.equal(Buffer.from('Kio', 'base64').toString(), '**');\nassert.equal(Buffer.from('KioqKg', 'base64').toString(), '****');\nassert.equal(Buffer.from('KioqKio', 'base64').toString(), '*****');\nassert.equal(Buffer.from('KioqKioqKg', 'base64').toString(), '*******');\nassert.equal(Buffer.from('KioqKioqKio', 'base64').toString(), '********');\nassert.equal(Buffer.from('KioqKioqKioqKg', 'base64').toString(), '**********');\nassert.equal(Buffer.from('KioqKioqKioqKio', 'base64').toString(), '***********');\nassert.equal(Buffer.from('KioqKioqKioqKioqKg', 'base64').toString(), '*************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKio', 'base64').toString(), '**************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKioqKg', 'base64').toString(), '****************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKioqKio', 'base64').toString(), '*****************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKioqKioqKg', 'base64').toString(), '*******************');\nassert.equal(Buffer.from('KioqKioqKioqKioqKioqKioqKio', 'base64').toString(), '********************');\nassert.equal(Buffer.from('72INjkR5fchcxk9+VgdGPFJDxUBFR5/rMFsghgxADiw==', 'base64').length, 32);\nassert.equal(Buffer.from('72INjkR5fchcxk9+VgdGPFJDxUBFR5/rMFsghgxADiw=', 'base64').length, 32);\nassert.equal(Buffer.from('72INjkR5fchcxk9+VgdGPFJDxUBFR5/rMFsghgxADiw', 'base64').length, 32);\nassert.equal(Buffer.from('w69jACy6BgZmaFvv96HG6MYksWytuZu3T1FvGnulPg==', 'base64').length, 31);\nassert.equal(Buffer.from('w69jACy6BgZmaFvv96HG6MYksWytuZu3T1FvGnulPg=', 'base64').length, 31);\nassert.equal(Buffer.from('w69jACy6BgZmaFvv96HG6MYksWytuZu3T1FvGnulPg', 'base64').length, 31);\nvar dot = Buffer.from('//4uAA==', 'base64');\nassert.equal(dot[0], 0xff);\nassert.equal(dot[1], 0xfe);\nassert.equal(dot[2], 0x2e);\nassert.equal(dot[3], 0x00);\nassert.equal(dot.toString('base64'), '//4uAA==');\n{\n  var segments = ['TWFkbmVzcz8h', 'IFRoaXM=', 'IGlz', 'IG5vZGUuanMh'];\n  var b = Buffer.allocUnsafe(64);\n  var pos = 0;\n  for (var i = 0; i < segments.length; ++i) {\n    pos += b.write(segments[i], pos, 'base64');\n  }\n  assert.equal(b.toString('latin1', 0, pos), 'Madness?! This is node.js!');\n}\n{\n  var l = Buffer.poolSize + 5;\n  var s = '';\n  for (var i = 0; i < l; i++) {\n    s += 'h';\n  }\n  var b = Buffer.from(s);\n  for (var i = 0; i < l; i++) {\n    assert.equal('h'.charCodeAt(0), b[i]);\n  }\n  var sb = b.toString();\n  assert.equal(sb.length, s.length);\n  assert.equal(sb, s);\n}\n{\n  var b = Buffer.from('abcde');\n  assert.equal('bcde', b.slice(1).toString());\n}\nassert.equal(0, Buffer.from('hello').slice(0, 0).length);\nvar hexb = Buffer.allocUnsafe(256);\nfor (var i = 0; i < 256; i++) {\n  hexb[i] = i;\n}\nvar hexStr = hexb.toString('hex');\nassert.equal(hexStr, '000102030405060708090a0b0c0d0e0f' + '101112131415161718191a1b1c1d1e1f' + '202122232425262728292a2b2c2d2e2f' + '303132333435363738393a3b3c3d3e3f' + '404142434445464748494a4b4c4d4e4f' + '505152535455565758595a5b5c5d5e5f' + '606162636465666768696a6b6c6d6e6f' + '707172737475767778797a7b7c7d7e7f' + '808182838485868788898a8b8c8d8e8f' + '909192939495969798999a9b9c9d9e9f' + 'a0a1a2a3a4a5a6a7a8a9aaabacadaeaf' + 'b0b1b2b3b4b5b6b7b8b9babbbcbdbebf' + 'c0c1c2c3c4c5c6c7c8c9cacbcccdcecf' + 'd0d1d2d3d4d5d6d7d8d9dadbdcdddedf' + 'e0e1e2e3e4e5e6e7e8e9eaebecedeeef' + 'f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff');\nvar hexb2 = Buffer.from(hexStr, 'hex');\nfor (var i = 0; i < 256; i++) {\n  assert.equal(hexb2[i], hexb[i]);\n}\n{\n  var b = Buffer.from([1, 2, 3, 4, 5]);\n  var b2 = b.toString('hex', 1, 10000);\n  var b3 = b.toString('hex', 1, 5);\n  var b4 = b.toString('hex', 1);\n  assert.equal(b2, b3);\n  assert.equal(b2, b4);\n}\nfunction buildBuffer(data) {\n  if (Array.isArray(data)) {\n    var buffer = Buffer.allocUnsafe(data.length);\n    data.forEach(function(v, k) {\n      buffer[k] = v;\n    });\n    return buffer;\n  }\n  return null;\n}\nvar x = buildBuffer([0x81, 0xa3, 0x66, 0x6f, 0x6f, 0xa3, 0x62, 0x61, 0x72]);\nassert.equal('<Buffer 81 a3 66 6f 6f a3 62 61 72>', x.inspect());\n{\n  var z = x.slice(4);\n  assert.equal(5, z.length);\n  assert.equal(0x6f, z[0]);\n  assert.equal(0xa3, z[1]);\n  assert.equal(0x62, z[2]);\n  assert.equal(0x61, z[3]);\n  assert.equal(0x72, z[4]);\n}\n{\n  var z = x.slice(0);\n  assert.equal(z.length, x.length);\n}\n{\n  var z = x.slice(0, 4);\n  assert.equal(4, z.length);\n  assert.equal(0x81, z[0]);\n  assert.equal(0xa3, z[1]);\n}\n{\n  var z = x.slice(0, 9);\n  assert.equal(9, z.length);\n}\n{\n  var z = x.slice(1, 4);\n  assert.equal(3, z.length);\n  assert.equal(0xa3, z[0]);\n}\n{\n  var z = x.slice(2, 4);\n  assert.equal(2, z.length);\n  assert.equal(0x66, z[0]);\n  assert.equal(0x6f, z[1]);\n}\nassert.equal(0, Buffer.from('hello').slice(0, 0).length);\n['ucs2', 'ucs-2', 'utf16le', 'utf-16le'].forEach(function(encoding) {\n  var b = Buffer.allocUnsafe(10);\n  b.write('あいうえお', encoding);\n  assert.equal(b.toString(encoding), 'あいうえお');\n});\n{\n  var b = Buffer.from([0xde, 0xad, 0xbe, 0xef]);\n  var s = String.fromCharCode(0xffff);\n  b.write(s, 0, 'latin1');\n  assert.equal(0xff, b[0]);\n  assert.equal(0xad, b[1]);\n  assert.equal(0xbe, b[2]);\n  assert.equal(0xef, b[3]);\n  s = String.fromCharCode(0xaaee);\n  b.write(s, 0, 'latin1');\n  assert.equal(0xee, b[0]);\n  assert.equal(0xad, b[1]);\n  assert.equal(0xbe, b[2]);\n  assert.equal(0xef, b[3]);\n}\n{\n  var buf = Buffer.from('\\0');\n  assert.equal(buf.length, 1);\n  buf = Buffer.from('\\0\\0');\n  assert.equal(buf.length, 2);\n}\n{\n  var buf = Buffer.allocUnsafe(2);\n  var written = buf.write('');\n  assert.equal(written, 0);\n  written = buf.write('\\0');\n  assert.equal(written, 1);\n  written = buf.write('a\\0');\n  assert.equal(written, 2);\n  written = buf.write('あ');\n  assert.equal(written, 0);\n  written = buf.write('\\0あ');\n  assert.equal(written, 1);\n  written = buf.write('\\0\\0あ');\n  assert.equal(written, 2);\n}\n{\n  var buf = Buffer.allocUnsafe(10);\n  written = buf.write('あいう');\n  assert.equal(written, 9);\n  written = buf.write('あいう\\0');\n  assert.equal(written, 10);\n}\n{\n  var buf = Buffer.allocUnsafe(4);\n  buf.fill(0xFF);\n  var written = buf.write('abcd', 1, 2, 'utf8');\n  assert.equal(written, 2);\n  assert.equal(buf[0], 0xFF);\n  assert.equal(buf[1], 0x61);\n  assert.equal(buf[2], 0x62);\n  assert.equal(buf[3], 0xFF);\n  buf.fill(0xFF);\n  written = buf.write('abcd', 1, 4);\n  assert.equal(written, 3);\n  assert.equal(buf[0], 0xFF);\n  assert.equal(buf[1], 0x61);\n  assert.equal(buf[2], 0x62);\n  assert.equal(buf[3], 0x63);\n  buf.fill(0xFF);\n  written = buf.write('abcd', 1, 2, 'utf8');\n  assert.equal(written, 2);\n  assert.equal(buf[0], 0xFF);\n  assert.equal(buf[1], 0x61);\n  assert.equal(buf[2], 0x62);\n  assert.equal(buf[3], 0xFF);\n  buf.fill(0xFF);\n  written = buf.write('abcdef', 1, 2, 'hex');\n  assert.equal(written, 2);\n  assert.equal(buf[0], 0xFF);\n  assert.equal(buf[1], 0xAB);\n  assert.equal(buf[2], 0xCD);\n  assert.equal(buf[3], 0xFF);\n  ['ucs2', 'ucs-2', 'utf16le', 'utf-16le'].forEach(function(encoding) {\n    buf.fill(0xFF);\n    written = buf.write('abcd', 0, 2, encoding);\n    assert.equal(written, 2);\n    assert.equal(buf[0], 0x61);\n    assert.equal(buf[1], 0x00);\n    assert.equal(buf[2], 0xFF);\n    assert.equal(buf[3], 0xFF);\n  });\n}\n{\n  var b = Buffer.allocUnsafe(16);\n  assert.equal(4, b.writeUInt32LE(0, 0));\n  assert.equal(6, b.writeUInt16LE(0, 4));\n  assert.equal(7, b.writeUInt8(0, 6));\n  assert.equal(8, b.writeInt8(0, 7));\n  assert.equal(16, b.writeDoubleLE(0, 8));\n}\n{\n  var buf = Buffer.from('ab\\ud800cd', 'utf8');\n  assert.equal(buf[0], 0x61);\n  assert.equal(buf[1], 0x62);\n  assert.equal(buf[2], 0xef);\n  assert.equal(buf[3], 0xbf);\n  assert.equal(buf[4], 0xbd);\n  assert.equal(buf[5], 0x63);\n  assert.equal(buf[6], 0x64);\n}\n{\n  var buf = Buffer.from([0, 0, 0, 0, 0]);\n  var sub = buf.slice(0, 4);\n  written = sub.write('12345', 'latin1');\n  assert.equal(written, 4);\n  assert.equal(buf[4], 0);\n}\nBuffer.allocUnsafe(3.3).fill().toString();\nBuffer.alloc(3.3).fill().toString();\nassert.equal(Buffer.allocUnsafe(NaN).length, 0);\nassert.equal(Buffer.allocUnsafe(3.3).length, 3);\nassert.equal(Buffer.from({length: 3.3}).length, 3);\nassert.equal(Buffer.from({length: 'BAM'}).length, 0);\nassert.equal(Buffer.from('99').length, 2);\nassert.equal(Buffer.from('13.37').length, 5);\n'ascii utf8 hex base64 latin1'.split(' ').forEach(function(enc) {\n  assert.equal(Buffer.allocUnsafe(1).write('aaaaaa', 0, 1, enc), 1);\n});\n{\n  var a = Buffer.allocUnsafe(3);\n  var b = Buffer.from('xxx');\n  a.write('aaaaaaaa', 'base64');\n  assert.equal(b.toString(), 'xxx');\n}\nBuffer.from(Buffer.allocUnsafe(0), 0, 0);\n['hex', 'utf8', 'utf-8', 'ascii', 'latin1', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le'].forEach(function(enc) {\n  assert.equal(Buffer.isEncoding(enc), true);\n});\n['utf9', 'utf-7', 'Unicode-FTW', 'new gnu gun', false, NaN, {}, Infinity, [], 1, 0, -1].forEach(function(enc) {\n  assert.equal(Buffer.isEncoding(enc), false);\n});\n{\n  var buffer = Buffer.from('test');\n  var string = JSON.stringify(buffer);\n  assert.strictEqual(string, '{\"type\":\"Buffer\",\"data\":[116,101,115,116]}');\n  assert.deepStrictEqual(buffer, JSON.parse(string, function(key, value) {\n    return value && value.type === 'Buffer' ? Buffer.from(value.data) : value;\n  }));\n}\n{\n  var buf = Buffer.from('test');\n  var json = JSON.stringify(buf);\n  var obj = JSON.parse(json);\n  var copy = Buffer.from(obj);\n  assert(buf.equals(copy));\n}\nassert.throws(function() {\n  Buffer.allocUnsafe(0xFFFFFFFF);\n}, RangeError);\nassert.throws(function() {\n  Buffer.allocUnsafe(0xFFFFFFFFF);\n}, RangeError);\nassert.throws(function() {\n  var buf = Buffer.allocUnsafe(8);\n  buf.readFloatLE(0xffffffff);\n}, RangeError);\nassert.throws(function() {\n  var buf = Buffer.allocUnsafe(8);\n  buf.writeFloatLE(0.0, 0xffffffff);\n}, RangeError);\nassert.throws(function() {\n  var buf = Buffer.allocUnsafe(8);\n  buf.readFloatLE(0xffffffff);\n}, RangeError);\nassert.throws(function() {\n  var buf = Buffer.allocUnsafe(8);\n  buf.writeFloatLE(0.0, 0xffffffff);\n}, RangeError);\nassert.throws(function() {\n  var buf = Buffer.allocUnsafe(8);\n  buf.readFloatLE(-1);\n}, RangeError);\nassert.throws(function() {\n  var buf = Buffer.allocUnsafe(8);\n  buf.writeFloatLE(0.0, -1);\n}, RangeError);\nassert.throws(function() {\n  var buf = Buffer.allocUnsafe(8);\n  buf.readFloatLE(-1);\n}, RangeError);\nassert.throws(function() {\n  var buf = Buffer.allocUnsafe(8);\n  buf.writeFloatLE(0.0, -1);\n}, RangeError);\n{\n  var buf = Buffer.allocUnsafe(0);\n  assert.throws(function() {\n    buf.readUInt8(0);\n  }, RangeError);\n  assert.throws(function() {\n    buf.readInt8(0);\n  }, RangeError);\n}\n{\n  var buf = Buffer.from([0xFF]);\n  assert.equal(buf.readUInt8(0), 255);\n  assert.equal(buf.readInt8(0), -1);\n}\n[16, 32].forEach(function(bits) {\n  var buf = Buffer.allocUnsafe(bits / 8 - 1);\n  assert.throws(function() {\n    buf['readUInt' + bits + 'BE'](0);\n  }, RangeError, 'readUInt' + bits + 'BE');\n  assert.throws(function() {\n    buf['readUInt' + bits + 'LE'](0);\n  }, RangeError, 'readUInt' + bits + 'LE');\n  assert.throws(function() {\n    buf['readInt' + bits + 'BE'](0);\n  }, RangeError, 'readInt' + bits + 'BE()');\n  assert.throws(function() {\n    buf['readInt' + bits + 'LE'](0);\n  }, RangeError, 'readInt' + bits + 'LE()');\n});\n[16, 32].forEach(function(bits) {\n  var buf = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF]);\n  assert.equal(buf['readUInt' + bits + 'BE'](0), (0xFFFFFFFF >>> (32 - bits)));\n  assert.equal(buf['readUInt' + bits + 'LE'](0), (0xFFFFFFFF >>> (32 - bits)));\n  assert.equal(buf['readInt' + bits + 'BE'](0), (0xFFFFFFFF >> (32 - bits)));\n  assert.equal(buf['readInt' + bits + 'LE'](0), (0xFFFFFFFF >> (32 - bits)));\n});\n{\n  var buf = Buffer.from([0x01, 0x02, 0x03, 0x04, 0x05, 0x06]);\n  assert.strictEqual(buf.readUIntLE(0, 1), 0x01);\n  assert.strictEqual(buf.readUIntBE(0, 1), 0x01);\n  assert.strictEqual(buf.readUIntLE(0, 3), 0x030201);\n  assert.strictEqual(buf.readUIntBE(0, 3), 0x010203);\n  assert.strictEqual(buf.readUIntLE(0, 5), 0x0504030201);\n  assert.strictEqual(buf.readUIntBE(0, 5), 0x0102030405);\n  assert.strictEqual(buf.readUIntLE(0, 6), 0x060504030201);\n  assert.strictEqual(buf.readUIntBE(0, 6), 0x010203040506);\n  assert.strictEqual(buf.readIntLE(0, 1), 0x01);\n  assert.strictEqual(buf.readIntBE(0, 1), 0x01);\n  assert.strictEqual(buf.readIntLE(0, 3), 0x030201);\n  assert.strictEqual(buf.readIntBE(0, 3), 0x010203);\n  assert.strictEqual(buf.readIntLE(0, 5), 0x0504030201);\n  assert.strictEqual(buf.readIntBE(0, 5), 0x0102030405);\n  assert.strictEqual(buf.readIntLE(0, 6), 0x060504030201);\n  assert.strictEqual(buf.readIntBE(0, 6), 0x010203040506);\n}\n{\n  var buf = Buffer.allocUnsafe(3);\n  buf.writeUIntLE(0x123456, 0, 3);\n  assert.deepStrictEqual(buf.toJSON().data, [0x56, 0x34, 0x12]);\n  assert.equal(buf.readUIntLE(0, 3), 0x123456);\n  buf = Buffer.allocUnsafe(3);\n  buf.writeUIntBE(0x123456, 0, 3);\n  assert.deepStrictEqual(buf.toJSON().data, [0x12, 0x34, 0x56]);\n  assert.equal(buf.readUIntBE(0, 3), 0x123456);\n  buf = Buffer.allocUnsafe(3);\n  buf.writeIntLE(0x123456, 0, 3);\n  assert.deepStrictEqual(buf.toJSON().data, [0x56, 0x34, 0x12]);\n  assert.equal(buf.readIntLE(0, 3), 0x123456);\n  buf = Buffer.allocUnsafe(3);\n  buf.writeIntBE(0x123456, 0, 3);\n  assert.deepStrictEqual(buf.toJSON().data, [0x12, 0x34, 0x56]);\n  assert.equal(buf.readIntBE(0, 3), 0x123456);\n  buf = Buffer.allocUnsafe(3);\n  buf.writeIntLE(-0x123456, 0, 3);\n  assert.deepStrictEqual(buf.toJSON().data, [0xaa, 0xcb, 0xed]);\n  assert.equal(buf.readIntLE(0, 3), -0x123456);\n  buf = Buffer.allocUnsafe(3);\n  buf.writeIntBE(-0x123456, 0, 3);\n  assert.deepStrictEqual(buf.toJSON().data, [0xed, 0xcb, 0xaa]);\n  assert.equal(buf.readIntBE(0, 3), -0x123456);\n  buf = Buffer.allocUnsafe(3);\n  buf.writeIntLE(-0x123400, 0, 3);\n  assert.deepStrictEqual(buf.toJSON().data, [0x00, 0xcc, 0xed]);\n  assert.equal(buf.readIntLE(0, 3), -0x123400);\n  buf = Buffer.allocUnsafe(3);\n  buf.writeIntBE(-0x123400, 0, 3);\n  assert.deepStrictEqual(buf.toJSON().data, [0xed, 0xcc, 0x00]);\n  assert.equal(buf.readIntBE(0, 3), -0x123400);\n  buf = Buffer.allocUnsafe(3);\n  buf.writeIntLE(-0x120000, 0, 3);\n  assert.deepStrictEqual(buf.toJSON().data, [0x00, 0x00, 0xee]);\n  assert.equal(buf.readIntLE(0, 3), -0x120000);\n  buf = Buffer.allocUnsafe(3);\n  buf.writeIntBE(-0x120000, 0, 3);\n  assert.deepStrictEqual(buf.toJSON().data, [0xee, 0x00, 0x00]);\n  assert.equal(buf.readIntBE(0, 3), -0x120000);\n  buf = Buffer.allocUnsafe(5);\n  buf.writeUIntLE(0x1234567890, 0, 5);\n  assert.deepStrictEqual(buf.toJSON().data, [0x90, 0x78, 0x56, 0x34, 0x12]);\n  assert.equal(buf.readUIntLE(0, 5), 0x1234567890);\n  buf = Buffer.allocUnsafe(5);\n  buf.writeUIntBE(0x1234567890, 0, 5);\n  assert.deepStrictEqual(buf.toJSON().data, [0x12, 0x34, 0x56, 0x78, 0x90]);\n  assert.equal(buf.readUIntBE(0, 5), 0x1234567890);\n  buf = Buffer.allocUnsafe(5);\n  buf.writeIntLE(0x1234567890, 0, 5);\n  assert.deepStrictEqual(buf.toJSON().data, [0x90, 0x78, 0x56, 0x34, 0x12]);\n  assert.equal(buf.readIntLE(0, 5), 0x1234567890);\n  buf = Buffer.allocUnsafe(5);\n  buf.writeIntBE(0x1234567890, 0, 5);\n  assert.deepStrictEqual(buf.toJSON().data, [0x12, 0x34, 0x56, 0x78, 0x90]);\n  assert.equal(buf.readIntBE(0, 5), 0x1234567890);\n  buf = Buffer.allocUnsafe(5);\n  buf.writeIntLE(-0x1234567890, 0, 5);\n  assert.deepStrictEqual(buf.toJSON().data, [0x70, 0x87, 0xa9, 0xcb, 0xed]);\n  assert.equal(buf.readIntLE(0, 5), -0x1234567890);\n  buf = Buffer.allocUnsafe(5);\n  buf.writeIntBE(-0x1234567890, 0, 5);\n  assert.deepStrictEqual(buf.toJSON().data, [0xed, 0xcb, 0xa9, 0x87, 0x70]);\n  assert.equal(buf.readIntBE(0, 5), -0x1234567890);\n  buf = Buffer.allocUnsafe(5);\n  buf.writeIntLE(-0x0012000000, 0, 5);\n  assert.deepStrictEqual(buf.toJSON().data, [0x00, 0x00, 0x00, 0xee, 0xff]);\n  assert.equal(buf.readIntLE(0, 5), -0x0012000000);\n  buf = Buffer.allocUnsafe(5);\n  buf.writeIntBE(-0x0012000000, 0, 5);\n  assert.deepStrictEqual(buf.toJSON().data, [0xff, 0xee, 0x00, 0x00, 0x00]);\n  assert.equal(buf.readIntBE(0, 5), -0x0012000000);\n}\n{\n  var buf = Buffer.from('0123456789');\n  assert.equal(buf.slice(-10, 10), '0123456789');\n  assert.equal(buf.slice(-20, 10), '0123456789');\n  assert.equal(buf.slice(-20, -10), '');\n  assert.equal(buf.slice(), '0123456789');\n  assert.equal(buf.slice(0), '0123456789');\n  assert.equal(buf.slice(0, 0), '');\n  assert.equal(buf.slice(undefined), '0123456789');\n  assert.equal(buf.slice('foobar'), '0123456789');\n  assert.equal(buf.slice(undefined, undefined), '0123456789');\n  assert.equal(buf.slice(2), '23456789');\n  assert.equal(buf.slice(5), '56789');\n  assert.equal(buf.slice(10), '');\n  assert.equal(buf.slice(5, 8), '567');\n  assert.equal(buf.slice(8, -1), '8');\n  assert.equal(buf.slice(-10), '0123456789');\n  assert.equal(buf.slice(0, -9), '0');\n  assert.equal(buf.slice(0, -10), '');\n  assert.equal(buf.slice(0, -1), '012345678');\n  assert.equal(buf.slice(2, -2), '234567');\n  assert.equal(buf.slice(0, 65536), '0123456789');\n  assert.equal(buf.slice(65536, 0), '');\n  assert.equal(buf.slice(-5, -8), '');\n  assert.equal(buf.slice(-5, -3), '56');\n  assert.equal(buf.slice(-10, 10), '0123456789');\n  for (var i = 0,\n      s = buf.toString(); i < buf.length; ++i) {\n    assert.equal(buf.slice(i), s.slice(i));\n    assert.equal(buf.slice(0, i), s.slice(0, i));\n    assert.equal(buf.slice(-i), s.slice(-i));\n    assert.equal(buf.slice(0, -i), s.slice(0, -i));\n  }\n  var utf16Buf = Buffer.from('0123456789', 'utf16le');\n  assert.equal(buf.slice('0', '1'), '0');\n  assert.equal(buf.slice('-5', '10'), '56789');\n  assert.equal(buf.slice('-10', '10'), '0123456789');\n  assert.equal(buf.slice('-10', '-5'), '01234');\n  assert.equal(buf.slice('-10', '-0'), '');\n  assert.equal(buf.slice('111'), '');\n  assert.equal(buf.slice('0', '-111'), '');\n  Buffer.alloc(0).slice(0, 1);\n}\nassert.throws(function() {\n  Buffer.from('', 'buffer');\n}, TypeError);\n{\n  var a = [0];\n  for (var i = 0; i < 7; ++i)\n    a = a.concat(a);\n  a = a.map(function(_, i) {\n    return i;\n  });\n  var b = Buffer.from(a);\n  var c = Buffer.from(b);\n  assert.strictEqual(b.length, a.length);\n  assert.strictEqual(c.length, a.length);\n  for (var i = 0,\n      k = a.length; i < k; ++i) {\n    assert.strictEqual(a[i], i);\n    assert.strictEqual(b[i], i);\n    assert.strictEqual(c[i], i);\n  }\n}\nassert.throws(function() {\n  Buffer.allocUnsafe((-1 >>> 0) + 1);\n}, RangeError);\nassert.throws(function() {\n  Buffer.allocUnsafeSlow((-1 >>> 0) + 1);\n}, RangeError);\nif (common.hasCrypto) {\n  var crypto = require('crypto');\n  var b1 = Buffer.from('YW55=======', 'base64');\n  var b2 = Buffer.from('YW55', 'base64');\n  assert.equal(crypto.createHash('sha1').update(b1).digest('hex'), crypto.createHash('sha1').update(b2).digest('hex'));\n} else {\n  common.skip('missing crypto');\n}\n{\n  var b = Buffer.alloc(1, 'a');\n  var c = Buffer.alloc(1, 'c');\n  var d = Buffer.alloc(2, 'aa');\n  assert.equal(b.compare(c), -1);\n  assert.equal(c.compare(d), 1);\n  assert.equal(d.compare(b), 1);\n  assert.equal(b.compare(d), -1);\n  assert.equal(b.compare(b), 0);\n  assert.equal(Buffer.compare(b, c), -1);\n  assert.equal(Buffer.compare(c, d), 1);\n  assert.equal(Buffer.compare(d, b), 1);\n  assert.equal(Buffer.compare(b, d), -1);\n  assert.equal(Buffer.compare(c, c), 0);\n  assert.equal(Buffer.compare(Buffer.alloc(0), Buffer.alloc(0)), 0);\n  assert.equal(Buffer.compare(Buffer.alloc(0), Buffer.alloc(1)), -1);\n  assert.equal(Buffer.compare(Buffer.alloc(1), Buffer.alloc(0)), 1);\n}\nassert.throws(function() {\n  var b = Buffer.allocUnsafe(1);\n  Buffer.compare(b, 'abc');\n});\nassert.throws(function() {\n  var b = Buffer.allocUnsafe(1);\n  Buffer.compare('abc', b);\n});\nassert.throws(function() {\n  var b = Buffer.allocUnsafe(1);\n  b.compare('abc');\n});\n{\n  var b = Buffer.alloc(5, 'abcdf');\n  var c = Buffer.alloc(5, 'abcdf');\n  var d = Buffer.alloc(5, 'abcde');\n  var e = Buffer.alloc(6, 'abcdef');\n  assert.ok(b.equals(c));\n  assert.ok(!c.equals(d));\n  assert.ok(!d.equals(e));\n  assert.ok(d.equals(d));\n}\nassert.throws(function() {\n  var b = Buffer.allocUnsafe(1);\n  b.equals('abc');\n});\nassert.throws(() => {\n  Buffer.allocUnsafe(1422561062959).toString('utf8');\n});\nvar ps = Buffer.poolSize;\nBuffer.poolSize = 0;\nassert.equal(Buffer.allocUnsafe(1).parent, undefined);\nBuffer.poolSize = ps;\nassert.throws(function() {\n  Buffer.allocUnsafe(10).copy();\n});\nvar regErrorMsg = new RegExp('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');\nassert.throws(function() {\n  Buffer.from();\n}, regErrorMsg);\nassert.throws(function() {\n  Buffer.from(null);\n}, regErrorMsg);\nassert.throws(function() {\n  Buffer.from(new ArrayBuffer(0), -1 >>> 0);\n}, /RangeError: 'offset' is out of bounds/);\nassert.throws(() => {\n  var a = Buffer(1).fill(0);\n  var b = Buffer(1).fill(0);\n  a.copy(b, 0, 0x100000000, 0x100000001);\n}), /out of range index/;\nvar ubuf = Buffer.allocUnsafeSlow(10);\nassert(ubuf);\nassert(ubuf.buffer);\nassert.equal(ubuf.buffer.byteLength, 10);\nassert.doesNotThrow(() => {\n  Buffer.from(new ArrayBuffer());\n});\nassert.throws(() => Buffer.alloc(-Buffer.poolSize), '\"size\" argument must not be negative');\nassert.throws(() => Buffer.alloc(-100), '\"size\" argument must not be negative');\nassert.throws(() => Buffer.allocUnsafe(-Buffer.poolSize), '\"size\" argument must not be negative');\nassert.throws(() => Buffer.allocUnsafe(-100), '\"size\" argument must not be negative');\nassert.throws(() => Buffer.allocUnsafeSlow(-Buffer.poolSize), '\"size\" argument must not be negative');\nassert.throws(() => Buffer.allocUnsafeSlow(-100), '\"size\" argument must not be negative');\nassert.throws(() => Buffer.alloc({valueOf: () => 1}), /\"size\" argument must be a number/);\nassert.throws(() => Buffer.alloc({valueOf: () => -1}), /\"size\" argument must be a number/);\n"]}