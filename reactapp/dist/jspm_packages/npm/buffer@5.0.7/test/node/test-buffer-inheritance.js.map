{"version":3,"sources":["../../../../../../jspm_packages/npm/buffer@5.0.7/test/node/test-buffer-inheritance.js"],"names":["Buffer","require","assert","T","n","ui8","Uint8Array","Object","setPrototypeOf","prototype","sum","cntr","i","length","vals","forEach","t","equal","constructor","getPrototypeOf","fill","toString"],"mappings":"AAAA;AACA;;AACA,IAAIA,SAASC,QAAQ,aAAR,EAAuBD,MAApC;AACA,IAAIE,SAASD,QAAQ,QAAR,CAAb;AACA,SAASE,CAAT,CAAWC,CAAX,EAAc;AACZ,MAAIC,MAAM,IAAIC,UAAJ,CAAeF,CAAf,CAAV;AACAG,SAAOC,cAAP,CAAsBH,GAAtB,EAA2BF,EAAEM,SAA7B;AACA,SAAOJ,GAAP;AACD;AACDE,OAAOC,cAAP,CAAsBL,EAAEM,SAAxB,EAAmCT,OAAOS,SAA1C;AACAF,OAAOC,cAAP,CAAsBL,CAAtB,EAAyBH,MAAzB;AACAG,EAAEM,SAAF,CAAYC,GAAZ,GAAkB,SAASA,GAAT,GAAe;AAC/B,MAAIC,OAAO,CAAX;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKC,MAAzB,EAAiCD,GAAjC;AACED,YAAQ,KAAKC,CAAL,CAAR;AADF,GAEA,OAAOD,IAAP;AACD,CALD;AAMA,IAAIG,OAAO,CAAC,IAAIX,CAAJ,CAAM,CAAN,CAAD,EAAWA,EAAE,CAAF,CAAX,CAAX;AACAW,KAAKC,OAAL,CAAa,UAASC,CAAT,EAAY;AACvBd,SAAOe,KAAP,CAAaD,EAAEE,WAAf,EAA4Bf,CAA5B;AACAD,SAAOe,KAAP,CAAaV,OAAOY,cAAP,CAAsBH,CAAtB,CAAb,EAAuCb,EAAEM,SAAzC;AACAP,SAAOe,KAAP,CAAaV,OAAOY,cAAP,CAAsBZ,OAAOY,cAAP,CAAsBH,CAAtB,CAAtB,CAAb,EAA8DhB,OAAOS,SAArE;AACAO,IAAEI,IAAF,CAAO,CAAP;AACA,MAAIT,OAAO,CAAX;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAII,EAAEH,MAAtB,EAA8BD,GAA9B;AACED,YAAQK,EAAEJ,CAAF,CAAR;AADF,GAEAV,OAAOe,KAAP,CAAaD,EAAEH,MAAF,GAAW,CAAxB,EAA2BF,IAA3B;AACAK,IAAEK,QAAF;AACD,CAVD","file":"test-buffer-inheritance.js","sourcesContent":["/* */ \n'use strict';\nvar Buffer = require('../../index').Buffer;\nvar assert = require('assert');\nfunction T(n) {\n  var ui8 = new Uint8Array(n);\n  Object.setPrototypeOf(ui8, T.prototype);\n  return ui8;\n}\nObject.setPrototypeOf(T.prototype, Buffer.prototype);\nObject.setPrototypeOf(T, Buffer);\nT.prototype.sum = function sum() {\n  var cntr = 0;\n  for (var i = 0; i < this.length; i++)\n    cntr += this[i];\n  return cntr;\n};\nvar vals = [new T(4), T(4)];\nvals.forEach(function(t) {\n  assert.equal(t.constructor, T);\n  assert.equal(Object.getPrototypeOf(t), T.prototype);\n  assert.equal(Object.getPrototypeOf(Object.getPrototypeOf(t)), Buffer.prototype);\n  t.fill(5);\n  var cntr = 0;\n  for (var i = 0; i < t.length; i++)\n    cntr += t[i];\n  assert.equal(t.length * 5, cntr);\n  t.toString();\n});\n"]}