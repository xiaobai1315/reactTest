{"version":3,"sources":["../../../../../../jspm_packages/npm/browserify-zlib@0.1.4/test/ignored/test-zlib-params.js"],"names":["Buffer","process","common","require","assert","zlib","path","fs","file","readFileSync","resolve","fixturesDir","chunkSize","opts","level","strategy","Z_DEFAULT_STRATEGY","deflater","createDeflate","chunk1","slice","chunk2","blkhdr","expected","concat","actual","write","params","read","end","bufs","buf","push","once","deepEqual"],"mappings":";;AAAA;AACA,CAAC,UAASA,MAAT,EAAiBC,OAAjB,EAA0B;AACzB,MAAIC,SAASC,QAAQ,WAAR,CAAb;AACA,MAAIC,SAASD,QAAQ,QAAR,CAAb;AACA,MAAIE,OAAOF,QAAQ,MAAR,CAAX;AACA,MAAIG,OAAOH,QAAQ,MAAR,CAAX;AACA,MAAII,KAAKJ,QAAQ,IAAR,CAAT;AACA,MAAIK,OAAOD,GAAGE,YAAH,CAAgBH,KAAKI,OAAL,CAAaR,OAAOS,WAApB,EAAiC,YAAjC,CAAhB,CAAX;AAAA,MACIC,YAAY,KAAK,IADrB;AAAA,MAEIC,OAAO;AACLC,WAAO,CADF;AAELC,cAAUV,KAAKW;AAFV,GAFX;AAAA,MAMIC,WAAWZ,KAAKa,aAAL,CAAmBL,IAAnB,CANf;AAOA,MAAIM,SAASX,KAAKY,KAAL,CAAW,CAAX,EAAcR,SAAd,CAAb;AAAA,MACIS,SAASb,KAAKY,KAAL,CAAWR,SAAX,CADb;AAAA,MAEIU,SAAS,IAAItB,MAAJ,CAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAX,CAFb;AAAA,MAGIuB,WAAWvB,OAAOwB,MAAP,CAAc,CAACF,MAAD,EAASD,MAAT,CAAd,CAHf;AAAA,MAIII,MAJJ;AAKAR,WAASS,KAAT,CAAeP,MAAf,EAAuB,YAAW;AAChCF,aAASU,MAAT,CAAgB,CAAhB,EAAmBtB,KAAKW,kBAAxB,EAA4C,YAAW;AACrD,aAAOC,SAASW,IAAT,EAAP;AAEAX,eAASY,GAAT,CAAaR,MAAb,EAAqB,YAAW;AAC9B,YAAIS,OAAO,EAAX;AAAA,YACIC,GADJ;AAEA,eAAOA,MAAMd,SAASW,IAAT,EAAb;AACEE,eAAKE,IAAL,CAAUD,GAAV;AADF,SAEAN,SAASzB,OAAOwB,MAAP,CAAcM,IAAd,CAAT;AACD,OAND;AAOD,KAVD;AAWA,WAAOb,SAASW,IAAT,EAAP;AAED,GAdD;AAeA3B,UAAQgC,IAAR,CAAa,MAAb,EAAqB,YAAW;AAC9B7B,WAAO8B,SAAP,CAAiBT,MAAjB,EAAyBF,QAAzB;AACD,GAFD;AAGD,CApCD,EAoCGpB,QAAQ,QAAR,EAAkBH,MApCrB,EAoC6BG,QAAQ,SAAR,CApC7B","file":"test-zlib-params.js","sourcesContent":["/* */ \n(function(Buffer, process) {\n  var common = require('../common');\n  var assert = require('assert');\n  var zlib = require('zlib');\n  var path = require('path');\n  var fs = require('fs');\n  var file = fs.readFileSync(path.resolve(common.fixturesDir, 'person.jpg')),\n      chunkSize = 24 * 1024,\n      opts = {\n        level: 9,\n        strategy: zlib.Z_DEFAULT_STRATEGY\n      },\n      deflater = zlib.createDeflate(opts);\n  var chunk1 = file.slice(0, chunkSize),\n      chunk2 = file.slice(chunkSize),\n      blkhdr = new Buffer([0x00, 0x48, 0x82, 0xb7, 0x7d]),\n      expected = Buffer.concat([blkhdr, chunk2]),\n      actual;\n  deflater.write(chunk1, function() {\n    deflater.params(0, zlib.Z_DEFAULT_STRATEGY, function() {\n      while (deflater.read())\n        ;\n      deflater.end(chunk2, function() {\n        var bufs = [],\n            buf;\n        while (buf = deflater.read())\n          bufs.push(buf);\n        actual = Buffer.concat(bufs);\n      });\n    });\n    while (deflater.read())\n      ;\n  });\n  process.once('exit', function() {\n    assert.deepEqual(actual, expected);\n  });\n})(require('buffer').Buffer, require('process'));\n"]}