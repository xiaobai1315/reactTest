{"version":3,"sources":["../../../../../jspm_packages/npm/browserify-zlib@0.1.4/test/test-zlib-from-string.js"],"names":["Buffer","tape","require","zlib","inputString","expectedBase64Deflate","expectedBase64Gzip","t","plan","deflate","err","buffer","equal","toString","gzip","gunzip","gunzipped","unzip"],"mappings":";;AAAA;AACA,CAAC,UAASA,MAAT,EAAiB;AAChB,MAAIC,OAAOC,QAAQ,MAAR,CAAX;AACA,MAAIC,OAAOD,QAAQ,cAAR,CAAX;AACA,MAAIE,cAAc,sEAAsE,uEAAtE,GAAgJ,uEAAhJ,GAA0N,uEAA1N,GAAoS,uEAApS,GAA8W,uEAA9W,GAAwb,uEAAxb,GAAkgB,oCAAphB;AACA,MAAIC,wBAAwB,kDAAkD,uEAAlD,GAA4H,uEAA5H,GAAsM,uEAAtM,GAAgR,uEAAhR,GAA0V,yEAAtX;AACA,MAAIC,qBAAqB,qDAAqD,uEAArD,GAA+H,uEAA/H,GAAyM,uEAAzM,GAAmR,uEAAnR,GAA6V,uEAA7V,GAAua,iBAAhc;AACAL,OAAK,SAAL,EAAgB,UAASM,CAAT,EAAY;AAC1BA,MAAEC,IAAF,CAAO,CAAP;AACAL,SAAKM,OAAL,CAAaL,WAAb,EAA0B,UAASM,GAAT,EAAcC,MAAd,EAAsB;AAC9CJ,QAAEK,KAAF,CAAQD,OAAOE,QAAP,CAAgB,QAAhB,CAAR,EAAmCR,qBAAnC,EAA0D,qCAA1D;AACD,KAFD;AAGD,GALD;AAMAJ,OAAK,MAAL,EAAa,UAASM,CAAT,EAAY;AACvBA,MAAEC,IAAF,CAAO,CAAP;AACAL,SAAKW,IAAL,CAAUV,WAAV,EAAuB,UAASM,GAAT,EAAcC,MAAd,EAAsB;AAC3CR,WAAKY,MAAL,CAAYJ,MAAZ,EAAoB,UAASD,GAAT,EAAcM,SAAd,EAAyB;AAC3CT,UAAEK,KAAF,CAAQI,UAAUH,QAAV,EAAR,EAA8BT,WAA9B,EAA2C,8CAA3C;AACD,OAFD;AAGD,KAJD;AAKD,GAPD;AAQAH,OAAK,eAAL,EAAsB,UAASM,CAAT,EAAY;AAChCA,MAAEC,IAAF,CAAO,CAAP;AACA,QAAIG,SAAS,IAAIX,MAAJ,CAAWK,qBAAX,EAAkC,QAAlC,CAAb;AACAF,SAAKc,KAAL,CAAWN,MAAX,EAAmB,UAASD,GAAT,EAAcC,MAAd,EAAsB;AACvCJ,QAAEK,KAAF,CAAQD,OAAOE,QAAP,EAAR,EAA2BT,WAA3B,EAAwC,sCAAxC;AACD,KAFD;AAGD,GAND;AAOAH,OAAK,YAAL,EAAmB,UAASM,CAAT,EAAY;AAC7BA,MAAEC,IAAF,CAAO,CAAP;AACAG,aAAS,IAAIX,MAAJ,CAAWM,kBAAX,EAA+B,QAA/B,CAAT;AACAH,SAAKc,KAAL,CAAWN,MAAX,EAAmB,UAASD,GAAT,EAAcC,MAAd,EAAsB;AACvCJ,QAAEK,KAAF,CAAQD,OAAOE,QAAP,EAAR,EAA2BT,WAA3B,EAAwC,uCAAxC;AACD,KAFD;AAGD,GAND;AAOD,CAlCD,EAkCGF,QAAQ,QAAR,EAAkBF,MAlCrB","file":"test-zlib-from-string.js","sourcesContent":["/* */ \n(function(Buffer) {\n  var tape = require('tape');\n  var zlib = require('../src/index');\n  var inputString = '\\u03A9\\u03A9Lorem ipsum dolor sit amet, consectetur adipiscing el' + 'it. Morbi faucibus, purus at gravida dictum, libero arcu convallis la' + 'cus, in commodo libero metus eu nisi. Nullam commodo, neque nec porta' + ' placerat, nisi est fermentum augue, vitae gravida tellus sapien sit ' + 'amet tellus. Aenean non diam orci. Proin quis elit turpis. Suspendiss' + 'e non diam ipsum. Suspendisse nec ullamcorper odio. Vestibulum arcu m' + 'i, sodales non suscipit id, ultrices ut massa. Sed ac sem sit amet ar' + 'cu malesuada fermentum. Nunc sed. ';\n  var expectedBase64Deflate = 'eJxdUUtOQzEMvMoc4OndgT0gJCT2buJWlpI4jePeqZfpm' + 'XAKLRKbLOzx/HK73q6vOrhCunlF1qIDJhNUeW5I2ozT5OkDlKWLJWkncJG5403HQXAkT3' + 'Jw29B9uIEmToMukglZ0vS6ociBh4JG8sV4oVLEUCitK2kxq1WzPnChHDzsaGKy491Lofo' + 'AbWh8do43oeuYhB5EPCjcLjzYJo48KrfQBvnJecNFJvHT1+RSQsGoC7dn2t/xjhduTA1N' + 'WyQIZR0pbHwMDatnD+crPqKSqGPHp1vnlsWM/07ubf7bheF7kqSj84Bm0R1fYTfaK8vqq' + 'qfKBtNMhe3OZh6N95CTvMX5HJJi4xOVzCgUOIMSLH7wmeOHaFE4RdpnGavKtrB5xzfO/Ll9';\n  var expectedBase64Gzip = 'H4sIAAAAAAAAA11RS05DMQy8yhzg6d2BPSAkJPZu4laWkjiN' + '496pl+mZcAotEpss7PH8crverq86uEK6eUXWogMmE1R5bkjajNPk6QOUpYslaSdwkbnjT' + 'cdBcCRPcnDb0H24gSZOgy6SCVnS9LqhyIGHgkbyxXihUsRQKK0raTGrVbM+cKEcPOxoYr' + 'Lj3Uuh+gBtaHx2jjeh65iEHkQ8KNwuPNgmjjwqt9AG+cl5w0Um8dPX5FJCwagLt2fa3/G' + 'OF25MDU1bJAhlHSlsfAwNq2cP5ys+opKoY8enW+eWxYz/Tu5t/tuF4XuSpKPzgGbRHV9h' + 'N9ory+qqp8oG00yF7c5mHo33kJO8xfkckmLjE5XMKBQ4gxIsfvCZ44doUThF2mcZq8q2s' + 'HnHNzRtagj5AQAA';\n  tape('deflate', function(t) {\n    t.plan(1);\n    zlib.deflate(inputString, function(err, buffer) {\n      t.equal(buffer.toString('base64'), expectedBase64Deflate, 'deflate encoded string should match');\n    });\n  });\n  tape('gzip', function(t) {\n    t.plan(1);\n    zlib.gzip(inputString, function(err, buffer) {\n      zlib.gunzip(buffer, function(err, gunzipped) {\n        t.equal(gunzipped.toString(), inputString, 'Should get original string after gzip/gunzip');\n      });\n    });\n  });\n  tape('unzip deflate', function(t) {\n    t.plan(1);\n    var buffer = new Buffer(expectedBase64Deflate, 'base64');\n    zlib.unzip(buffer, function(err, buffer) {\n      t.equal(buffer.toString(), inputString, 'decoded inflated string should match');\n    });\n  });\n  tape('unzip gzip', function(t) {\n    t.plan(1);\n    buffer = new Buffer(expectedBase64Gzip, 'base64');\n    zlib.unzip(buffer, function(err, buffer) {\n      t.equal(buffer.toString(), inputString, 'decoded gunzipped string should match');\n    });\n  });\n})(require('buffer').Buffer);\n"]}