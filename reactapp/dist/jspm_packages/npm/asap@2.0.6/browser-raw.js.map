{"version":3,"sources":["../../../../jspm_packages/npm/asap@2.0.6/browser-raw.js"],"names":["process","module","exports","rawAsap","task","queue","length","requestFlush","flushing","index","capacity","flush","currentIndex","call","scan","newLength","scope","global","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromMutationObserver","makeRequestCallFromTimer","callback","toggle","observer","node","document","createTextNode","observe","characterData","requestCall","data","timeoutHandle","setTimeout","handleTimer","intervalHandle","setInterval","clearTimeout","clearInterval","require"],"mappings":";;AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjB;;AACAC,SAAOC,OAAP,GAAiBC,OAAjB;AACA,WAASA,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,QAAI,CAACC,MAAMC,MAAX,EAAmB;AACjBC;AACAC,iBAAW,IAAX;AACD;AACDH,UAAMA,MAAMC,MAAZ,IAAsBF,IAAtB;AACD;AACD,MAAIC,QAAQ,EAAZ;AACA,MAAIG,WAAW,KAAf;AACA,MAAID,YAAJ;AACA,MAAIE,QAAQ,CAAZ;AACA,MAAIC,WAAW,IAAf;AACA,WAASC,KAAT,GAAiB;AACf,WAAOF,QAAQJ,MAAMC,MAArB,EAA6B;AAC3B,UAAIM,eAAeH,KAAnB;AACAA,cAAQA,QAAQ,CAAhB;AACAJ,YAAMO,YAAN,EAAoBC,IAApB;AACA,UAAIJ,QAAQC,QAAZ,EAAsB;AACpB,aAAK,IAAII,OAAO,CAAX,EACDC,YAAYV,MAAMC,MAAN,GAAeG,KAD/B,EACsCK,OAAOC,SAD7C,EACwDD,MADxD,EACgE;AAC9DT,gBAAMS,IAAN,IAAcT,MAAMS,OAAOL,KAAb,CAAd;AACD;AACDJ,cAAMC,MAAN,IAAgBG,KAAhB;AACAA,gBAAQ,CAAR;AACD;AACF;AACDJ,UAAMC,MAAN,GAAe,CAAf;AACAG,YAAQ,CAAR;AACAD,eAAW,KAAX;AACD;AACD,MAAIQ,QAAQ,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,IAArD;AACA,MAAIC,0BAA0BH,MAAMI,gBAAN,IAA0BJ,MAAMK,sBAA9D;AACA,MAAI,OAAOF,uBAAP,KAAmC,UAAvC,EAAmD;AACjDZ,mBAAee,oCAAoCX,KAApC,CAAf;AACD,GAFD,MAEO;AACLJ,mBAAegB,yBAAyBZ,KAAzB,CAAf;AACD;AACDR,UAAQI,YAAR,GAAuBA,YAAvB;AACA,WAASe,mCAAT,CAA6CE,QAA7C,EAAuD;AACrD,QAAIC,SAAS,CAAb;AACA,QAAIC,WAAW,IAAIP,uBAAJ,CAA4BK,QAA5B,CAAf;AACA,QAAIG,OAAOC,SAASC,cAAT,CAAwB,EAAxB,CAAX;AACAH,aAASI,OAAT,CAAiBH,IAAjB,EAAuB,EAACI,eAAe,IAAhB,EAAvB;AACA,WAAO,SAASC,WAAT,GAAuB;AAC5BP,eAAS,CAACA,MAAV;AACAE,WAAKM,IAAL,GAAYR,MAAZ;AACD,KAHD;AAID;AACD,WAASF,wBAAT,CAAkCC,QAAlC,EAA4C;AAC1C,WAAO,SAASQ,WAAT,GAAuB;AAC5B,UAAIE,gBAAgBC,WAAWC,WAAX,EAAwB,CAAxB,CAApB;AACA,UAAIC,iBAAiBC,YAAYF,WAAZ,EAAyB,EAAzB,CAArB;AACA,eAASA,WAAT,GAAuB;AACrBG,qBAAaL,aAAb;AACAM,sBAAcH,cAAd;AACAb;AACD;AACF,KARD;AASD;AACDrB,UAAQoB,wBAAR,GAAmCA,wBAAnC;AACD,CA/DD,EA+DGkB,QAAQ,SAAR,CA/DH","file":"browser-raw.js","sourcesContent":["/* */ \n(function(process) {\n  \"use strict\";\n  module.exports = rawAsap;\n  function rawAsap(task) {\n    if (!queue.length) {\n      requestFlush();\n      flushing = true;\n    }\n    queue[queue.length] = task;\n  }\n  var queue = [];\n  var flushing = false;\n  var requestFlush;\n  var index = 0;\n  var capacity = 1024;\n  function flush() {\n    while (index < queue.length) {\n      var currentIndex = index;\n      index = index + 1;\n      queue[currentIndex].call();\n      if (index > capacity) {\n        for (var scan = 0,\n            newLength = queue.length - index; scan < newLength; scan++) {\n          queue[scan] = queue[scan + index];\n        }\n        queue.length -= index;\n        index = 0;\n      }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n  }\n  var scope = typeof global !== \"undefined\" ? global : self;\n  var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n  if (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n  } else {\n    requestFlush = makeRequestCallFromTimer(flush);\n  }\n  rawAsap.requestFlush = requestFlush;\n  function makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n      toggle = -toggle;\n      node.data = toggle;\n    };\n  }\n  function makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n      var timeoutHandle = setTimeout(handleTimer, 0);\n      var intervalHandle = setInterval(handleTimer, 50);\n      function handleTimer() {\n        clearTimeout(timeoutHandle);\n        clearInterval(intervalHandle);\n        callback();\n      }\n    };\n  }\n  rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n})(require('process'));\n"]}