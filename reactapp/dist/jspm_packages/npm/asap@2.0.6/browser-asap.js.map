{"version":3,"sources":["../../../../jspm_packages/npm/asap@2.0.6/browser-asap.js"],"names":["process","rawAsap","require","freeTasks","pendingErrors","requestErrorThrow","makeRequestCallFromTimer","throwFirstError","length","shift","module","exports","asap","task","rawTask","pop","RawTask","prototype","call","error","onerror","push"],"mappings":";;AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjB;;AACA,MAAIC,UAAUC,QAAQ,eAAR,CAAd;AACA,MAAIC,YAAY,EAAhB;AACA,MAAIC,gBAAgB,EAApB;AACA,MAAIC,oBAAoBJ,QAAQK,wBAAR,CAAiCC,eAAjC,CAAxB;AACA,WAASA,eAAT,GAA2B;AACzB,QAAIH,cAAcI,MAAlB,EAA0B;AACxB,YAAMJ,cAAcK,KAAd,EAAN;AACD;AACF;AACDC,SAAOC,OAAP,GAAiBC,IAAjB;AACA,WAASA,IAAT,CAAcC,IAAd,EAAoB;AAClB,QAAIC,OAAJ;AACA,QAAIX,UAAUK,MAAd,EAAsB;AACpBM,gBAAUX,UAAUY,GAAV,EAAV;AACD,KAFD,MAEO;AACLD,gBAAU,IAAIE,OAAJ,EAAV;AACD;AACDF,YAAQD,IAAR,GAAeA,IAAf;AACAZ,YAAQa,OAAR;AACD;AACD,WAASE,OAAT,GAAmB;AACjB,SAAKH,IAAL,GAAY,IAAZ;AACD;AACDG,UAAQC,SAAR,CAAkBC,IAAlB,GAAyB,YAAW;AAClC,QAAI;AACF,WAAKL,IAAL,CAAUK,IAAV;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACd,UAAIP,KAAKQ,OAAT,EAAkB;AAChBR,aAAKQ,OAAL,CAAaD,KAAb;AACD,OAFD,MAEO;AACLf,sBAAciB,IAAd,CAAmBF,KAAnB;AACAd;AACD;AACF,KATD,SASU;AACR,WAAKQ,IAAL,GAAY,IAAZ;AACAV,gBAAUA,UAAUK,MAApB,IAA8B,IAA9B;AACD;AACF,GAdD;AAeD,CAxCD,EAwCGN,QAAQ,SAAR,CAxCH","file":"browser-asap.js","sourcesContent":["/* */ \n(function(process) {\n  \"use strict\";\n  var rawAsap = require('./browser-raw');\n  var freeTasks = [];\n  var pendingErrors = [];\n  var requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n  function throwFirstError() {\n    if (pendingErrors.length) {\n      throw pendingErrors.shift();\n    }\n  }\n  module.exports = asap;\n  function asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n      rawTask = freeTasks.pop();\n    } else {\n      rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n  }\n  function RawTask() {\n    this.task = null;\n  }\n  RawTask.prototype.call = function() {\n    try {\n      this.task.call();\n    } catch (error) {\n      if (asap.onerror) {\n        asap.onerror(error);\n      } else {\n        pendingErrors.push(error);\n        requestErrorThrow();\n      }\n    } finally {\n      this.task = null;\n      freeTasks[freeTasks.length] = this;\n    }\n  };\n})(require('process'));\n"]}