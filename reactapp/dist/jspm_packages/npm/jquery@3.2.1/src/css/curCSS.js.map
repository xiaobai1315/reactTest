{"version":3,"sources":["../../../../../../jspm_packages/npm/jquery@3.2.1/src/css/curCSS.js"],"names":["define","jQuery","rnumnonpx","rmargin","getStyles","support","curCSS","elem","name","computed","width","minWidth","maxWidth","ret","style","getPropertyValue","contains","ownerDocument","pixelMarginRight","test","undefined"],"mappings":";;AAAA;AACAA,OAAQ,CACP,SADO,EAEP,iBAFO,EAGP,eAHO,EAIP,iBAJO,EAKP,WALO,EAMP,aANO,CAMO;AANP,CAAR,EAOG,UAAUC,MAAV,EAAkBC,SAAlB,EAA6BC,OAA7B,EAAsCC,SAAtC,EAAiDC,OAAjD,EAA2D;;AAE9D;;AAEA,UAASC,MAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAwC;AACvC,MAAIC,KAAJ;AAAA,MAAWC,QAAX;AAAA,MAAqBC,QAArB;AAAA,MAA+BC,GAA/B;;;AAEC;AACA;AACA;AACA;AACAC,UAAQP,KAAKO,KANd;;AAQAL,aAAWA,YAAYL,UAAWG,IAAX,CAAvB;;AAEA;AACA;AACA;AACA,MAAKE,QAAL,EAAgB;AACfI,SAAMJ,SAASM,gBAAT,CAA2BP,IAA3B,KAAqCC,SAAUD,IAAV,CAA3C;;AAEA,OAAKK,QAAQ,EAAR,IAAc,CAACZ,OAAOe,QAAP,CAAiBT,KAAKU,aAAtB,EAAqCV,IAArC,CAApB,EAAkE;AACjEM,UAAMZ,OAAOa,KAAP,CAAcP,IAAd,EAAoBC,IAApB,CAAN;AACA;;AAED;AACA;AACA;AACA;AACA;AACA,OAAK,CAACH,QAAQa,gBAAR,EAAD,IAA+BhB,UAAUiB,IAAV,CAAgBN,GAAhB,CAA/B,IAAwDV,QAAQgB,IAAR,CAAcX,IAAd,CAA7D,EAAoF;;AAEnF;AACAE,YAAQI,MAAMJ,KAAd;AACAC,eAAWG,MAAMH,QAAjB;AACAC,eAAWE,MAAMF,QAAjB;;AAEA;AACAE,UAAMH,QAAN,GAAiBG,MAAMF,QAAN,GAAiBE,MAAMJ,KAAN,GAAcG,GAAhD;AACAA,UAAMJ,SAASC,KAAf;;AAEA;AACAI,UAAMJ,KAAN,GAAcA,KAAd;AACAI,UAAMH,QAAN,GAAiBA,QAAjB;AACAG,UAAMF,QAAN,GAAiBA,QAAjB;AACA;AACD;;AAED,SAAOC,QAAQO,SAAR;;AAEN;AACA;AACAP,QAAM,EAJA,GAKNA,GALD;AAMA;;AAED,QAAOP,MAAP;AACC,CAhED","file":"curCSS.js","sourcesContent":["/* */ \ndefine( [\n\t\"../core\",\n\t\"./var/rnumnonpx\",\n\t\"./var/rmargin\",\n\t\"./var/getStyles\",\n\t\"./support\",\n\t\"../selector\" // Get jQuery.contains\n], function( jQuery, rnumnonpx, rmargin, getStyles, support ) {\n\n\"use strict\";\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\nreturn curCSS;\n} );\n"]}