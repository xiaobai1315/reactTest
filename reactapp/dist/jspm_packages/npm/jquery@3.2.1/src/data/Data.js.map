{"version":3,"sources":["../../../../../../jspm_packages/npm/jquery@3.2.1/src/data/Data.js"],"names":["define","jQuery","rnothtmlwhite","acceptData","Data","expando","uid","prototype","cache","owner","value","nodeType","Object","defineProperty","configurable","set","data","prop","camelCase","get","key","undefined","access","remove","i","Array","isArray","map","match","length","isEmptyObject","hasData"],"mappings":"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","file":"Data.js","sourcesContent":["/* */ \ndefine( [\n\t\"../core\",\n\t\"../var/rnothtmlwhite\",\n\t\"./var/acceptData\"\n], function( jQuery, rnothtmlwhite, acceptData ) {\n\n\"use strict\";\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ jQuery.camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ jQuery.camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( jQuery.camelCase );\n\t\t\t} else {\n\t\t\t\tkey = jQuery.camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\n\nreturn Data;\n} );\n"]}