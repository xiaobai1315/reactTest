{"version":3,"sources":["../../../../../../jspm_packages/npm/jquery@3.2.1/src/exports/amd.js"],"names":["define","jQuery","amd"],"mappings":";;AAAA;AACAA,OAAQ,CACP,SADO,CAAR,EAEG,UAAUC,MAAV,EAAmB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK,OAAOD,MAAP,KAAkB,UAAlB,IAAgCA,OAAOE,GAA5C,EAAkD;AACjDF,SAAQ,QAAR,EAAkB,EAAlB,EAAsB,YAAW;AAChC,UAAOC,MAAP;AACA,GAFD;AAGA;AAEA,CAzBD","file":"amd.js","sourcesContent":["/* */ \ndefine( [\n\t\"../core\"\n], function( jQuery ) {\n\n\"use strict\";\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n} );\n"]}