{"version":3,"sources":["../../../../jspm_packages/npm/punycode@1.3.2/punycode.js"],"names":["process","root","freeExports","exports","nodeType","freeModule","module","freeGlobal","global","window","self","punycode","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","String","fromCharCode","key","error","type","RangeError","map","array","fn","length","result","mapDomain","string","parts","split","replace","labels","encoded","join","ucs2decode","output","counter","value","extra","charCodeAt","push","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","decode","input","inputLength","out","i","n","bias","basic","j","index","oldi","w","t","baseMinusT","lastIndexOf","splice","encode","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","test","slice","toLowerCase","toASCII","define","amd","hasOwnProperty","require"],"mappings":"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","file":"punycode.js","sourcesContent":["/* */ \n\"format cjs\";\n(function(process) {\n  ;\n  (function(root) {\n    var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n    var freeModule = typeof module == 'object' && module && !module.nodeType && module;\n    var freeGlobal = typeof global == 'object' && global;\n    if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n      root = freeGlobal;\n    }\n    var punycode,\n        maxInt = 2147483647,\n        base = 36,\n        tMin = 1,\n        tMax = 26,\n        skew = 38,\n        damp = 700,\n        initialBias = 72,\n        initialN = 128,\n        delimiter = '-',\n        regexPunycode = /^xn--/,\n        regexNonASCII = /[^\\x20-\\x7E]/,\n        regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n        errors = {\n          'overflow': 'Overflow: input needs wider integers to process',\n          'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n          'invalid-input': 'Invalid input'\n        },\n        baseMinusTMin = base - tMin,\n        floor = Math.floor,\n        stringFromCharCode = String.fromCharCode,\n        key;\n    function error(type) {\n      throw RangeError(errors[type]);\n    }\n    function map(array, fn) {\n      var length = array.length;\n      var result = [];\n      while (length--) {\n        result[length] = fn(array[length]);\n      }\n      return result;\n    }\n    function mapDomain(string, fn) {\n      var parts = string.split('@');\n      var result = '';\n      if (parts.length > 1) {\n        result = parts[0] + '@';\n        string = parts[1];\n      }\n      string = string.replace(regexSeparators, '\\x2E');\n      var labels = string.split('.');\n      var encoded = map(labels, fn).join('.');\n      return result + encoded;\n    }\n    function ucs2decode(string) {\n      var output = [],\n          counter = 0,\n          length = string.length,\n          value,\n          extra;\n      while (counter < length) {\n        value = string.charCodeAt(counter++);\n        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n          extra = string.charCodeAt(counter++);\n          if ((extra & 0xFC00) == 0xDC00) {\n            output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n          } else {\n            output.push(value);\n            counter--;\n          }\n        } else {\n          output.push(value);\n        }\n      }\n      return output;\n    }\n    function ucs2encode(array) {\n      return map(array, function(value) {\n        var output = '';\n        if (value > 0xFFFF) {\n          value -= 0x10000;\n          output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n          value = 0xDC00 | value & 0x3FF;\n        }\n        output += stringFromCharCode(value);\n        return output;\n      }).join('');\n    }\n    function basicToDigit(codePoint) {\n      if (codePoint - 48 < 10) {\n        return codePoint - 22;\n      }\n      if (codePoint - 65 < 26) {\n        return codePoint - 65;\n      }\n      if (codePoint - 97 < 26) {\n        return codePoint - 97;\n      }\n      return base;\n    }\n    function digitToBasic(digit, flag) {\n      return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n    }\n    function adapt(delta, numPoints, firstTime) {\n      var k = 0;\n      delta = firstTime ? floor(delta / damp) : delta >> 1;\n      delta += floor(delta / numPoints);\n      for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n        delta = floor(delta / baseMinusTMin);\n      }\n      return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n    }\n    function decode(input) {\n      var output = [],\n          inputLength = input.length,\n          out,\n          i = 0,\n          n = initialN,\n          bias = initialBias,\n          basic,\n          j,\n          index,\n          oldi,\n          w,\n          k,\n          digit,\n          t,\n          baseMinusT;\n      basic = input.lastIndexOf(delimiter);\n      if (basic < 0) {\n        basic = 0;\n      }\n      for (j = 0; j < basic; ++j) {\n        if (input.charCodeAt(j) >= 0x80) {\n          error('not-basic');\n        }\n        output.push(input.charCodeAt(j));\n      }\n      for (index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {\n        for (oldi = i, w = 1, k = base; ; k += base) {\n          if (index >= inputLength) {\n            error('invalid-input');\n          }\n          digit = basicToDigit(input.charCodeAt(index++));\n          if (digit >= base || digit > floor((maxInt - i) / w)) {\n            error('overflow');\n          }\n          i += digit * w;\n          t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (digit < t) {\n            break;\n          }\n          baseMinusT = base - t;\n          if (w > floor(maxInt / baseMinusT)) {\n            error('overflow');\n          }\n          w *= baseMinusT;\n        }\n        out = output.length + 1;\n        bias = adapt(i - oldi, out, oldi == 0);\n        if (floor(i / out) > maxInt - n) {\n          error('overflow');\n        }\n        n += floor(i / out);\n        i %= out;\n        output.splice(i++, 0, n);\n      }\n      return ucs2encode(output);\n    }\n    function encode(input) {\n      var n,\n          delta,\n          handledCPCount,\n          basicLength,\n          bias,\n          j,\n          m,\n          q,\n          k,\n          t,\n          currentValue,\n          output = [],\n          inputLength,\n          handledCPCountPlusOne,\n          baseMinusT,\n          qMinusT;\n      input = ucs2decode(input);\n      inputLength = input.length;\n      n = initialN;\n      delta = 0;\n      bias = initialBias;\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n        if (currentValue < 0x80) {\n          output.push(stringFromCharCode(currentValue));\n        }\n      }\n      handledCPCount = basicLength = output.length;\n      if (basicLength) {\n        output.push(delimiter);\n      }\n      while (handledCPCount < inputLength) {\n        for (m = maxInt, j = 0; j < inputLength; ++j) {\n          currentValue = input[j];\n          if (currentValue >= n && currentValue < m) {\n            m = currentValue;\n          }\n        }\n        handledCPCountPlusOne = handledCPCount + 1;\n        if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n          error('overflow');\n        }\n        delta += (m - n) * handledCPCountPlusOne;\n        n = m;\n        for (j = 0; j < inputLength; ++j) {\n          currentValue = input[j];\n          if (currentValue < n && ++delta > maxInt) {\n            error('overflow');\n          }\n          if (currentValue == n) {\n            for (q = delta, k = base; ; k += base) {\n              t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n              if (q < t) {\n                break;\n              }\n              qMinusT = q - t;\n              baseMinusT = base - t;\n              output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n              q = floor(qMinusT / baseMinusT);\n            }\n            output.push(stringFromCharCode(digitToBasic(q, 0)));\n            bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n            delta = 0;\n            ++handledCPCount;\n          }\n        }\n        ++delta;\n        ++n;\n      }\n      return output.join('');\n    }\n    function toUnicode(input) {\n      return mapDomain(input, function(string) {\n        return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n      });\n    }\n    function toASCII(input) {\n      return mapDomain(input, function(string) {\n        return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n      });\n    }\n    punycode = {\n      'version': '1.3.2',\n      'ucs2': {\n        'decode': ucs2decode,\n        'encode': ucs2encode\n      },\n      'decode': decode,\n      'encode': encode,\n      'toASCII': toASCII,\n      'toUnicode': toUnicode\n    };\n    if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n      define('punycode', function() {\n        return punycode;\n      });\n    } else if (freeExports && freeModule) {\n      if (module.exports == freeExports) {\n        freeModule.exports = punycode;\n      } else {\n        for (key in punycode) {\n          punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n        }\n      }\n    } else {\n      root.punycode = punycode;\n    }\n  }(this));\n})(require('process'));\n"]}