{"version":3,"sources":["../../../../../jspm_packages/npm/babel-runtime@5.8.38/helpers/sliced-to-array.js"],"names":["_getIterator","require","_isIterable","exports","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","__esModule"],"mappings":"AAAA;AACA;;AACA,IAAIA,eAAeC,QAAQ,yBAAR,EAAmC,SAAnC,CAAnB;AACA,IAAIC,cAAcD,QAAQ,wBAAR,EAAkC,SAAlC,CAAlB;AACAE,QAAQ,SAAR,IAAsB,YAAW;AAC/B,WAASC,aAAT,CAAuBC,GAAvB,EAA4BC,CAA5B,EAA+B;AAC7B,QAAIC,OAAO,EAAX;AACA,QAAIC,KAAK,IAAT;AACA,QAAIC,KAAK,KAAT;AACA,QAAIC,KAAKC,SAAT;AACA,QAAI;AACF,WAAK,IAAIC,KAAKZ,aAAaK,GAAb,CAAT,EACDQ,EADJ,EACQ,EAAEL,KAAK,CAACK,KAAKD,GAAGE,IAAH,EAAN,EAAiBC,IAAxB,CADR,EACuCP,KAAK,IAD5C,EACkD;AAChDD,aAAKS,IAAL,CAAUH,GAAGI,KAAb;AACA,YAAIX,KAAKC,KAAKW,MAAL,KAAgBZ,CAAzB,EACE;AACH;AACF,KAPD,CAOE,OAAOa,GAAP,EAAY;AACZV,WAAK,IAAL;AACAC,WAAKS,GAAL;AACD,KAVD,SAUU;AACR,UAAI;AACF,YAAI,CAACX,EAAD,IAAOI,GAAG,QAAH,CAAX,EACEA,GAAG,QAAH;AACH,OAHD,SAGU;AACR,YAAIH,EAAJ,EACE,MAAMC,EAAN;AACH;AACF;AACD,WAAOH,IAAP;AACD;AACD,SAAO,UAASF,GAAT,EAAcC,CAAd,EAAiB;AACtB,QAAIc,MAAMC,OAAN,CAAchB,GAAd,CAAJ,EAAwB;AACtB,aAAOA,GAAP;AACD,KAFD,MAEO,IAAIH,YAAYoB,OAAOjB,GAAP,CAAZ,CAAJ,EAA8B;AACnC,aAAOD,cAAcC,GAAd,EAAmBC,CAAnB,CAAP;AACD,KAFM,MAEA;AACL,YAAM,IAAIiB,SAAJ,CAAc,sDAAd,CAAN;AACD;AACF,GARD;AASD,CApCoB,EAArB;AAqCApB,QAAQqB,UAAR,GAAqB,IAArB","file":"sliced-to-array.js","sourcesContent":["/* */ \n\"use strict\";\nvar _getIterator = require('../core-js/get-iterator')[\"default\"];\nvar _isIterable = require('../core-js/is-iterable')[\"default\"];\nexports[\"default\"] = (function() {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = _getIterator(arr),\n          _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i)\n          break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"])\n          _i[\"return\"]();\n      } finally {\n        if (_d)\n          throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function(arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (_isIterable(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n})();\nexports.__esModule = true;\n"]}