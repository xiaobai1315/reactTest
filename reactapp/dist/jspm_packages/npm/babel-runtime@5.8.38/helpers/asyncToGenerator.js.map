{"version":3,"sources":["../../../../../jspm_packages/npm/babel-runtime@5.8.38/helpers/asyncToGenerator.js"],"names":["exports","__esModule","_promise","require","_promise2","_interopRequireDefault","obj","default","fn","gen","apply","arguments","resolve","reject","step","key","arg","info","value","error","done","then","err"],"mappings":"AAAA;AACA;;AACAA,QAAQC,UAAR,GAAqB,IAArB;AACA,IAAIC,WAAWC,QAAQ,oBAAR,CAAf;AACA,IAAIC,YAAYC,uBAAuBH,QAAvB,CAAhB;AACA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AACnC,SAAOA,OAAOA,IAAIL,UAAX,GAAwBK,GAAxB,GAA8B,EAACC,SAASD,GAAV,EAArC;AACD;AACDN,QAAQO,OAAR,GAAkB,UAASC,EAAT,EAAa;AAC7B,SAAO,YAAW;AAChB,QAAIC,MAAMD,GAAGE,KAAH,CAAS,IAAT,EAAeC,SAAf,CAAV;AACA,WAAO,IAAIP,UAAUG,OAAd,CAAsB,UAASK,OAAT,EAAkBC,MAAlB,EAA0B;AACrD,eAASC,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwB;AACtB,YAAI;AACF,cAAIC,OAAOR,IAAIM,GAAJ,EAASC,GAAT,CAAX;AACA,cAAIE,QAAQD,KAAKC,KAAjB;AACD,SAHD,CAGE,OAAOC,KAAP,EAAc;AACdN,iBAAOM,KAAP;AACA;AACD;AACD,YAAIF,KAAKG,IAAT,EAAe;AACbR,kBAAQM,KAAR;AACD,SAFD,MAEO;AACL,iBAAOd,UAAUG,OAAV,CAAkBK,OAAlB,CAA0BM,KAA1B,EAAiCG,IAAjC,CAAsC,UAASH,KAAT,EAAgB;AAC3D,mBAAOJ,KAAK,MAAL,EAAaI,KAAb,CAAP;AACD,WAFM,EAEJ,UAASI,GAAT,EAAc;AACf,mBAAOR,KAAK,OAAL,EAAcQ,GAAd,CAAP;AACD,WAJM,CAAP;AAKD;AACF;AACD,aAAOR,KAAK,MAAL,CAAP;AACD,KApBM,CAAP;AAqBD,GAvBD;AAwBD,CAzBD","file":"asyncToGenerator.js","sourcesContent":["/* */ \n\"use strict\";\nexports.__esModule = true;\nvar _promise = require('../core-js/promise');\nvar _promise2 = _interopRequireDefault(_promise);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\nexports.default = function(fn) {\n  return function() {\n    var gen = fn.apply(this, arguments);\n    return new _promise2.default(function(resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n        if (info.done) {\n          resolve(value);\n        } else {\n          return _promise2.default.resolve(value).then(function(value) {\n            return step(\"next\", value);\n          }, function(err) {\n            return step(\"throw\", err);\n          });\n        }\n      }\n      return step(\"next\");\n    });\n  };\n};\n"]}