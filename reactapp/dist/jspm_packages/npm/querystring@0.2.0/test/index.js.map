{"version":3,"sources":["../../../../../jspm_packages/npm/querystring@0.2.0/test/index.js"],"names":["qs","require","qsTestCases","hasOwnProperty","toString","valueOf","__defineGetter__","foo","bar","qsColonTestCases","extendedFunction","prototype","a","qsWeirdObjects","regexp","RegExp","fn","Function","math","Math","e","d","Date","f","Boolean","t","n","nan","NaN","inf","Infinity","qsNoMungeTestCases","exports","assert","strictEqual","parse","id","forEach","testCase","deepEqual","stringify","JSON","q","x","y","equal","threw","undefined","error","ok"],"mappings":"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","file":"index.js","sourcesContent":["/* */ \n\"use strict\";\nvar qs = require('../index');\nvar qsTestCases = [['foo=918854443121279438895193', 'foo=918854443121279438895193', {'foo': '918854443121279438895193'}], ['foo=bar', 'foo=bar', {'foo': 'bar'}], ['foo=bar&foo=quux', 'foo=bar&foo=quux', {'foo': ['bar', 'quux']}], ['foo=1&bar=2', 'foo=1&bar=2', {\n  'foo': '1',\n  'bar': '2'\n}], ['my+weird+field=q1%212%22%27w%245%267%2Fz8%29%3F', 'my%20weird%20field=q1!2%22\\'w%245%267%2Fz8)%3F', {'my weird field': 'q1!2\"\\'w$5&7/z8)?'}], ['foo%3Dbaz=bar', 'foo%3Dbaz=bar', {'foo=baz': 'bar'}], ['foo=baz=bar', 'foo=baz%3Dbar', {'foo': 'baz=bar'}], ['str=foo&arr=1&arr=2&arr=3&somenull=&undef=', 'str=foo&arr=1&arr=2&arr=3&somenull=&undef=', {\n  'str': 'foo',\n  'arr': ['1', '2', '3'],\n  'somenull': '',\n  'undef': ''\n}], [' foo = bar ', '%20foo%20=%20bar%20', {' foo ': ' bar '}], ['foo=%EF%BF%BD', 'foo=%EF%BF%BD', {'foo': '\\ufffd'}], ['hasOwnProperty=x&toString=foo&valueOf=bar&__defineGetter__=baz', 'hasOwnProperty=x&toString=foo&valueOf=bar&__defineGetter__=baz', {\n  hasOwnProperty: 'x',\n  toString: 'foo',\n  valueOf: 'bar',\n  __defineGetter__: 'baz'\n}], ['foo&bar=baz', 'foo=&bar=baz', {\n  foo: '',\n  bar: 'baz'\n}]];\nvar qsColonTestCases = [['foo:bar', 'foo:bar', {'foo': 'bar'}], ['foo:bar;foo:quux', 'foo:bar;foo:quux', {'foo': ['bar', 'quux']}], ['foo:1&bar:2;baz:quux', 'foo:1%26bar%3A2;baz:quux', {\n  'foo': '1&bar:2',\n  'baz': 'quux'\n}], ['foo%3Abaz:bar', 'foo%3Abaz:bar', {'foo:baz': 'bar'}], ['foo:baz:bar', 'foo:baz%3Abar', {'foo': 'baz:bar'}]];\nvar extendedFunction = function() {};\nextendedFunction.prototype = {a: 'b'};\nvar qsWeirdObjects = [[{regexp: /./g}, 'regexp=', {'regexp': ''}], [{regexp: new RegExp('.', 'g')}, 'regexp=', {'regexp': ''}], [{fn: function() {}}, 'fn=', {'fn': ''}], [{fn: new Function('')}, 'fn=', {'fn': ''}], [{math: Math}, 'math=', {'math': ''}], [{e: extendedFunction}, 'e=', {'e': ''}], [{d: new Date()}, 'd=', {'d': ''}], [{d: Date}, 'd=', {'d': ''}], [{\n  f: new Boolean(false),\n  t: new Boolean(true)\n}, 'f=&t=', {\n  'f': '',\n  't': ''\n}], [{\n  f: false,\n  t: true\n}, 'f=false&t=true', {\n  'f': 'false',\n  't': 'true'\n}], [{n: null}, 'n=', {'n': ''}], [{nan: NaN}, 'nan=', {'nan': ''}], [{inf: Infinity}, 'inf=', {'inf': ''}]];\nvar qsNoMungeTestCases = [['', {}], ['foo=bar&foo=baz', {'foo': ['bar', 'baz']}], ['blah=burp', {'blah': 'burp'}], ['gragh=1&gragh=3&goo=2', {\n  'gragh': ['1', '3'],\n  'goo': '2'\n}], ['frappucino=muffin&goat%5B%5D=scone&pond=moose', {\n  'frappucino': 'muffin',\n  'goat[]': 'scone',\n  'pond': 'moose'\n}], ['trololol=yes&lololo=no', {\n  'trololol': 'yes',\n  'lololo': 'no'\n}]];\nexports['test basic'] = function(assert) {\n  assert.strictEqual('918854443121279438895193', qs.parse('id=918854443121279438895193').id, 'prase id=918854443121279438895193');\n};\nexports['test that the canonical qs is parsed properly'] = function(assert) {\n  qsTestCases.forEach(function(testCase) {\n    assert.deepEqual(testCase[2], qs.parse(testCase[0]), 'parse ' + testCase[0]);\n  });\n};\nexports['test that the colon test cases can do the same'] = function(assert) {\n  qsColonTestCases.forEach(function(testCase) {\n    assert.deepEqual(testCase[2], qs.parse(testCase[0], ';', ':'), 'parse ' + testCase[0] + ' -> ; :');\n  });\n};\nexports['test the weird objects, that they get parsed properly'] = function(assert) {\n  qsWeirdObjects.forEach(function(testCase) {\n    assert.deepEqual(testCase[2], qs.parse(testCase[1]), 'parse ' + testCase[1]);\n  });\n};\nexports['test non munge test cases'] = function(assert) {\n  qsNoMungeTestCases.forEach(function(testCase) {\n    assert.deepEqual(testCase[0], qs.stringify(testCase[1], '&', '=', false), 'stringify ' + JSON.stringify(testCase[1]) + ' -> & =');\n  });\n};\nexports['test the nested qs-in-qs case'] = function(assert) {\n  var f = qs.parse('a=b&q=x%3Dy%26y%3Dz');\n  f.q = qs.parse(f.q);\n  assert.deepEqual(f, {\n    a: 'b',\n    q: {\n      x: 'y',\n      y: 'z'\n    }\n  }, 'parse a=b&q=x%3Dy%26y%3Dz');\n};\nexports['test nested in colon'] = function(assert) {\n  var f = qs.parse('a:b;q:x%3Ay%3By%3Az', ';', ':');\n  f.q = qs.parse(f.q, ';', ':');\n  assert.deepEqual(f, {\n    a: 'b',\n    q: {\n      x: 'y',\n      y: 'z'\n    }\n  }, 'parse a:b;q:x%3Ay%3By%3Az -> ; :');\n};\nexports['test stringifying'] = function(assert) {\n  qsTestCases.forEach(function(testCase) {\n    assert.equal(testCase[1], qs.stringify(testCase[2]), 'stringify ' + JSON.stringify(testCase[2]));\n  });\n  qsColonTestCases.forEach(function(testCase) {\n    assert.equal(testCase[1], qs.stringify(testCase[2], ';', ':'), 'stringify ' + JSON.stringify(testCase[2]) + ' -> ; :');\n  });\n  qsWeirdObjects.forEach(function(testCase) {\n    assert.equal(testCase[1], qs.stringify(testCase[0]), 'stringify ' + JSON.stringify(testCase[0]));\n  });\n};\nexports['test stringifying nested'] = function(assert) {\n  var f = qs.stringify({\n    a: 'b',\n    q: qs.stringify({\n      x: 'y',\n      y: 'z'\n    })\n  });\n  assert.equal(f, 'a=b&q=x%3Dy%26y%3Dz', JSON.stringify({\n    a: 'b',\n    'qs.stringify -> q': {\n      x: 'y',\n      y: 'z'\n    }\n  }));\n  var threw = false;\n  try {\n    qs.parse(undefined);\n  } catch (error) {\n    threw = true;\n  }\n  assert.ok(!threw, \"does not throws on undefined\");\n};\nexports['test nested in colon'] = function(assert) {\n  var f = qs.stringify({\n    a: 'b',\n    q: qs.stringify({\n      x: 'y',\n      y: 'z'\n    }, ';', ':')\n  }, ';', ':');\n  assert.equal(f, 'a:b;q:x%3Ay%3By%3Az', 'stringify ' + JSON.stringify({\n    a: 'b',\n    'qs.stringify -> q': {\n      x: 'y',\n      y: 'z'\n    }\n  }) + ' -> ; : ');\n  assert.deepEqual({}, qs.parse(), 'parse undefined');\n};\n"]}