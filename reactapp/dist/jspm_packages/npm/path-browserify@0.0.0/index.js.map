{"version":3,"sources":["../../../../jspm_packages/npm/path-browserify@0.0.0/index.js"],"names":["process","normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","splitPathRe","splitPath","filename","exec","slice","exports","resolve","resolvedPath","resolvedAbsolute","arguments","path","cwd","TypeError","charAt","filter","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","call","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","sep","delimiter","dirname","result","root","dir","basename","ext","f","extname","xs","res","str","len","require"],"mappings":"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","file":"index.js","sourcesContent":["/* */ \n(function(process) {\n  function normalizeArray(parts, allowAboveRoot) {\n    var up = 0;\n    for (var i = parts.length - 1; i >= 0; i--) {\n      var last = parts[i];\n      if (last === '.') {\n        parts.splice(i, 1);\n      } else if (last === '..') {\n        parts.splice(i, 1);\n        up++;\n      } else if (up) {\n        parts.splice(i, 1);\n        up--;\n      }\n    }\n    if (allowAboveRoot) {\n      for (; up--; up) {\n        parts.unshift('..');\n      }\n    }\n    return parts;\n  }\n  var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n  var splitPath = function(filename) {\n    return splitPathRe.exec(filename).slice(1);\n  };\n  exports.resolve = function() {\n    var resolvedPath = '',\n        resolvedAbsolute = false;\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path = (i >= 0) ? arguments[i] : process.cwd();\n      if (typeof path !== 'string') {\n        throw new TypeError('Arguments to path.resolve must be strings');\n      } else if (!path) {\n        continue;\n      }\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charAt(0) === '/';\n    }\n    resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n      return !!p;\n    }), !resolvedAbsolute).join('/');\n    return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n  };\n  exports.normalize = function(path) {\n    var isAbsolute = exports.isAbsolute(path),\n        trailingSlash = substr(path, -1) === '/';\n    path = normalizeArray(filter(path.split('/'), function(p) {\n      return !!p;\n    }), !isAbsolute).join('/');\n    if (!path && !isAbsolute) {\n      path = '.';\n    }\n    if (path && trailingSlash) {\n      path += '/';\n    }\n    return (isAbsolute ? '/' : '') + path;\n  };\n  exports.isAbsolute = function(path) {\n    return path.charAt(0) === '/';\n  };\n  exports.join = function() {\n    var paths = Array.prototype.slice.call(arguments, 0);\n    return exports.normalize(filter(paths, function(p, index) {\n      if (typeof p !== 'string') {\n        throw new TypeError('Arguments to path.join must be strings');\n      }\n      return p;\n    }).join('/'));\n  };\n  exports.relative = function(from, to) {\n    from = exports.resolve(from).substr(1);\n    to = exports.resolve(to).substr(1);\n    function trim(arr) {\n      var start = 0;\n      for (; start < arr.length; start++) {\n        if (arr[start] !== '')\n          break;\n      }\n      var end = arr.length - 1;\n      for (; end >= 0; end--) {\n        if (arr[end] !== '')\n          break;\n      }\n      if (start > end)\n        return [];\n      return arr.slice(start, end - start + 1);\n    }\n    var fromParts = trim(from.split('/'));\n    var toParts = trim(to.split('/'));\n    var length = Math.min(fromParts.length, toParts.length);\n    var samePartsLength = length;\n    for (var i = 0; i < length; i++) {\n      if (fromParts[i] !== toParts[i]) {\n        samePartsLength = i;\n        break;\n      }\n    }\n    var outputParts = [];\n    for (var i = samePartsLength; i < fromParts.length; i++) {\n      outputParts.push('..');\n    }\n    outputParts = outputParts.concat(toParts.slice(samePartsLength));\n    return outputParts.join('/');\n  };\n  exports.sep = '/';\n  exports.delimiter = ':';\n  exports.dirname = function(path) {\n    var result = splitPath(path),\n        root = result[0],\n        dir = result[1];\n    if (!root && !dir) {\n      return '.';\n    }\n    if (dir) {\n      dir = dir.substr(0, dir.length - 1);\n    }\n    return root + dir;\n  };\n  exports.basename = function(path, ext) {\n    var f = splitPath(path)[2];\n    if (ext && f.substr(-1 * ext.length) === ext) {\n      f = f.substr(0, f.length - ext.length);\n    }\n    return f;\n  };\n  exports.extname = function(path) {\n    return splitPath(path)[3];\n  };\n  function filter(xs, f) {\n    if (xs.filter)\n      return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n      if (f(xs[i], i, xs))\n        res.push(xs[i]);\n    }\n    return res;\n  }\n  var substr = 'ab'.substr(-1) === 'b' ? function(str, start, len) {\n    return str.substr(start, len);\n  } : function(str, start, len) {\n    if (start < 0)\n      start = str.length + start;\n    return str.substr(start, len);\n  };\n  ;\n})(require('process'));\n"]}