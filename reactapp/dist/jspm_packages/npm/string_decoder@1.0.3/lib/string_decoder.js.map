{"version":3,"sources":["../../../../../jspm_packages/npm/string_decoder@1.0.3/lib/string_decoder.js"],"names":["Buffer","require","isEncoding","encoding","toLowerCase","_normalizeEncoding","enc","retried","normalizeEncoding","nenc","Error","exports","StringDecoder","nb","text","utf16Text","end","utf16End","fillLast","utf8FillLast","base64Text","base64End","write","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","allocUnsafe","prototype","buf","length","r","i","undefined","utf8End","utf8Text","copy","toString","utf8CheckByte","byte","utf8CheckIncomplete","self","j","utf8CheckExtraBytes","p","repeat","total","c","charCodeAt","slice","n"],"mappings":"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","file":"string_decoder.js","sourcesContent":["/* */ \n(function(Buffer) {\n  'use strict';\n  var Buffer = require('safe-buffer').Buffer;\n  var isEncoding = Buffer.isEncoding || function(encoding) {\n    encoding = '' + encoding;\n    switch (encoding && encoding.toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n      case 'raw':\n        return true;\n      default:\n        return false;\n    }\n  };\n  function _normalizeEncoding(enc) {\n    if (!enc)\n      return 'utf8';\n    var retried;\n    while (true) {\n      switch (enc) {\n        case 'utf8':\n        case 'utf-8':\n          return 'utf8';\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return 'utf16le';\n        case 'latin1':\n        case 'binary':\n          return 'latin1';\n        case 'base64':\n        case 'ascii':\n        case 'hex':\n          return enc;\n        default:\n          if (retried)\n            return;\n          enc = ('' + enc).toLowerCase();\n          retried = true;\n      }\n    }\n  }\n  ;\n  function normalizeEncoding(enc) {\n    var nenc = _normalizeEncoding(enc);\n    if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc)))\n      throw new Error('Unknown encoding: ' + enc);\n    return nenc || enc;\n  }\n  exports.StringDecoder = StringDecoder;\n  function StringDecoder(encoding) {\n    this.encoding = normalizeEncoding(encoding);\n    var nb;\n    switch (this.encoding) {\n      case 'utf16le':\n        this.text = utf16Text;\n        this.end = utf16End;\n        nb = 4;\n        break;\n      case 'utf8':\n        this.fillLast = utf8FillLast;\n        nb = 4;\n        break;\n      case 'base64':\n        this.text = base64Text;\n        this.end = base64End;\n        nb = 3;\n        break;\n      default:\n        this.write = simpleWrite;\n        this.end = simpleEnd;\n        return;\n    }\n    this.lastNeed = 0;\n    this.lastTotal = 0;\n    this.lastChar = Buffer.allocUnsafe(nb);\n  }\n  StringDecoder.prototype.write = function(buf) {\n    if (buf.length === 0)\n      return '';\n    var r;\n    var i;\n    if (this.lastNeed) {\n      r = this.fillLast(buf);\n      if (r === undefined)\n        return '';\n      i = this.lastNeed;\n      this.lastNeed = 0;\n    } else {\n      i = 0;\n    }\n    if (i < buf.length)\n      return r ? r + this.text(buf, i) : this.text(buf, i);\n    return r || '';\n  };\n  StringDecoder.prototype.end = utf8End;\n  StringDecoder.prototype.text = utf8Text;\n  StringDecoder.prototype.fillLast = function(buf) {\n    if (this.lastNeed <= buf.length) {\n      buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n      return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n    }\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n    this.lastNeed -= buf.length;\n  };\n  function utf8CheckByte(byte) {\n    if (byte <= 0x7F)\n      return 0;\n    else if (byte >> 5 === 0x06)\n      return 2;\n    else if (byte >> 4 === 0x0E)\n      return 3;\n    else if (byte >> 3 === 0x1E)\n      return 4;\n    return -1;\n  }\n  function utf8CheckIncomplete(self, buf, i) {\n    var j = buf.length - 1;\n    if (j < i)\n      return 0;\n    var nb = utf8CheckByte(buf[j]);\n    if (nb >= 0) {\n      if (nb > 0)\n        self.lastNeed = nb - 1;\n      return nb;\n    }\n    if (--j < i)\n      return 0;\n    nb = utf8CheckByte(buf[j]);\n    if (nb >= 0) {\n      if (nb > 0)\n        self.lastNeed = nb - 2;\n      return nb;\n    }\n    if (--j < i)\n      return 0;\n    nb = utf8CheckByte(buf[j]);\n    if (nb >= 0) {\n      if (nb > 0) {\n        if (nb === 2)\n          nb = 0;\n        else\n          self.lastNeed = nb - 3;\n      }\n      return nb;\n    }\n    return 0;\n  }\n  function utf8CheckExtraBytes(self, buf, p) {\n    if ((buf[0] & 0xC0) !== 0x80) {\n      self.lastNeed = 0;\n      return '\\ufffd'.repeat(p);\n    }\n    if (self.lastNeed > 1 && buf.length > 1) {\n      if ((buf[1] & 0xC0) !== 0x80) {\n        self.lastNeed = 1;\n        return '\\ufffd'.repeat(p + 1);\n      }\n      if (self.lastNeed > 2 && buf.length > 2) {\n        if ((buf[2] & 0xC0) !== 0x80) {\n          self.lastNeed = 2;\n          return '\\ufffd'.repeat(p + 2);\n        }\n      }\n    }\n  }\n  function utf8FillLast(buf) {\n    var p = this.lastTotal - this.lastNeed;\n    var r = utf8CheckExtraBytes(this, buf, p);\n    if (r !== undefined)\n      return r;\n    if (this.lastNeed <= buf.length) {\n      buf.copy(this.lastChar, p, 0, this.lastNeed);\n      return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n    }\n    buf.copy(this.lastChar, p, 0, buf.length);\n    this.lastNeed -= buf.length;\n  }\n  function utf8Text(buf, i) {\n    var total = utf8CheckIncomplete(this, buf, i);\n    if (!this.lastNeed)\n      return buf.toString('utf8', i);\n    this.lastTotal = total;\n    var end = buf.length - (total - this.lastNeed);\n    buf.copy(this.lastChar, 0, end);\n    return buf.toString('utf8', i, end);\n  }\n  function utf8End(buf) {\n    var r = buf && buf.length ? this.write(buf) : '';\n    if (this.lastNeed)\n      return r + '\\ufffd'.repeat(this.lastTotal - this.lastNeed);\n    return r;\n  }\n  function utf16Text(buf, i) {\n    if ((buf.length - i) % 2 === 0) {\n      var r = buf.toString('utf16le', i);\n      if (r) {\n        var c = r.charCodeAt(r.length - 1);\n        if (c >= 0xD800 && c <= 0xDBFF) {\n          this.lastNeed = 2;\n          this.lastTotal = 4;\n          this.lastChar[0] = buf[buf.length - 2];\n          this.lastChar[1] = buf[buf.length - 1];\n          return r.slice(0, -1);\n        }\n      }\n      return r;\n    }\n    this.lastNeed = 1;\n    this.lastTotal = 2;\n    this.lastChar[0] = buf[buf.length - 1];\n    return buf.toString('utf16le', i, buf.length - 1);\n  }\n  function utf16End(buf) {\n    var r = buf && buf.length ? this.write(buf) : '';\n    if (this.lastNeed) {\n      var end = this.lastTotal - this.lastNeed;\n      return r + this.lastChar.toString('utf16le', 0, end);\n    }\n    return r;\n  }\n  function base64Text(buf, i) {\n    var n = (buf.length - i) % 3;\n    if (n === 0)\n      return buf.toString('base64', i);\n    this.lastNeed = 3 - n;\n    this.lastTotal = 3;\n    if (n === 1) {\n      this.lastChar[0] = buf[buf.length - 1];\n    } else {\n      this.lastChar[0] = buf[buf.length - 2];\n      this.lastChar[1] = buf[buf.length - 1];\n    }\n    return buf.toString('base64', i, buf.length - n);\n  }\n  function base64End(buf) {\n    var r = buf && buf.length ? this.write(buf) : '';\n    if (this.lastNeed)\n      return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n    return r;\n  }\n  function simpleWrite(buf) {\n    return buf.toString(this.encoding);\n  }\n  function simpleEnd(buf) {\n    return buf && buf.length ? this.write(buf) : '';\n  }\n})(require('buffer').Buffer);\n"]}