{"version":3,"sources":["../../../../../../jspm_packages/npm/core-js@1.2.7/library/modules/$.iter-define.js"],"names":["LIBRARY","require","$export","redefine","hide","has","Iterators","$iterCreate","setToStringTag","getProto","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","values","entries","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","methods","key","IteratorPrototype","call","name","P","F"],"mappings":"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","file":"$.iter-define.js","sourcesContent":["/* */ \n'use strict';\nvar LIBRARY = require('./$.library'),\n    $export = require('./$.export'),\n    redefine = require('./$.redefine'),\n    hide = require('./$.hide'),\n    has = require('./$.has'),\n    Iterators = require('./$.iterators'),\n    $iterCreate = require('./$.iter-create'),\n    setToStringTag = require('./$.set-to-string-tag'),\n    getProto = require('./$').getProto,\n    ITERATOR = require('./$.wks')('iterator'),\n    BUGGY = !([].keys && 'next' in [].keys()),\n    FF_ITERATOR = '@@iterator',\n    KEYS = 'keys',\n    VALUES = 'values';\nvar returnThis = function() {\n  return this;\n};\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind) {\n    if (!BUGGY && kind in proto)\n      return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator',\n      DEF_VALUES = DEFAULT == VALUES,\n      VALUES_BUG = false,\n      proto = Base.prototype,\n      $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT],\n      $default = $native || getMethod(DEFAULT),\n      methods,\n      key;\n  if ($native) {\n    var IteratorPrototype = getProto($default.call(new Base));\n    setToStringTag(IteratorPrototype, TAG, true);\n    if (!LIBRARY && has(proto, FF_ITERATOR))\n      hide(IteratorPrototype, ITERATOR, returnThis);\n    if (DEF_VALUES && $native.name !== VALUES) {\n      VALUES_BUG = true;\n      $default = function values() {\n        return $native.call(this);\n      };\n    }\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: !DEF_VALUES ? $default : getMethod('entries')\n    };\n    if (FORCED)\n      for (key in methods) {\n        if (!(key in proto))\n          redefine(proto, key, methods[key]);\n      }\n    else\n      $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n"]}