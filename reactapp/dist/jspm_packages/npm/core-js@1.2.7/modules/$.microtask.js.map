{"version":3,"sources":["../../../../../jspm_packages/npm/core-js@1.2.7/modules/$.microtask.js"],"names":["process","global","require","macrotask","set","Observer","MutationObserver","WebKitMutationObserver","Promise","isNode","head","last","notify","flush","parent","domain","fn","exit","enter","next","undefined","nextTick","toggle","node","document","createTextNode","observe","characterData","data","resolve","then","call","module","exports","asap","task"],"mappings":";;AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjB,MAAIC,SAASC,QAAQ,YAAR,CAAb;AAAA,MACIC,YAAYD,QAAQ,UAAR,EAAoBE,GADpC;AAAA,MAEIC,WAAWJ,OAAOK,gBAAP,IAA2BL,OAAOM,sBAFjD;AAAA,MAGIP,UAAUC,OAAOD,OAHrB;AAAA,MAIIQ,UAAUP,OAAOO,OAJrB;AAAA,MAKIC,SAASP,QAAQ,SAAR,EAAmBF,OAAnB,KAA+B,SAL5C;AAAA,MAMIU,IANJ;AAAA,MAOIC,IAPJ;AAAA,MAQIC,MARJ;AASA,MAAIC,QAAQ,SAARA,KAAQ,GAAW;AACrB,QAAIC,MAAJ,EACIC,MADJ,EAEIC,EAFJ;AAGA,QAAIP,WAAWK,SAASd,QAAQe,MAA5B,CAAJ,EAAyC;AACvCf,cAAQe,MAAR,GAAiB,IAAjB;AACAD,aAAOG,IAAP;AACD;AACD,WAAOP,IAAP,EAAa;AACXK,eAASL,KAAKK,MAAd;AACAC,WAAKN,KAAKM,EAAV;AACA,UAAID,MAAJ,EACEA,OAAOG,KAAP;AACFF;AACA,UAAID,MAAJ,EACEA,OAAOE,IAAP;AACFP,aAAOA,KAAKS,IAAZ;AACD;AACDR,WAAOS,SAAP;AACA,QAAIN,MAAJ,EACEA,OAAOI,KAAP;AACH,GArBD;AAsBA,MAAIT,MAAJ,EAAY;AACVG,aAAS,kBAAW;AAClBZ,cAAQqB,QAAR,CAAiBR,KAAjB;AACD,KAFD;AAGD,GAJD,MAIO,IAAIR,QAAJ,EAAc;AACnB,QAAIiB,SAAS,CAAb;AAAA,QACIC,OAAOC,SAASC,cAAT,CAAwB,EAAxB,CADX;AAEA,QAAIpB,QAAJ,CAAaQ,KAAb,EAAoBa,OAApB,CAA4BH,IAA5B,EAAkC,EAACI,eAAe,IAAhB,EAAlC;AACAf,aAAS,kBAAW;AAClBW,WAAKK,IAAL,GAAYN,SAAS,CAACA,MAAtB;AACD,KAFD;AAGD,GAPM,MAOA,IAAId,WAAWA,QAAQqB,OAAvB,EAAgC;AACrCjB,aAAS,kBAAW;AAClBJ,cAAQqB,OAAR,GAAkBC,IAAlB,CAAuBjB,KAAvB;AACD,KAFD;AAGD,GAJM,MAIA;AACLD,aAAS,kBAAW;AAClBT,gBAAU4B,IAAV,CAAe9B,MAAf,EAAuBY,KAAvB;AACD,KAFD;AAGD;AACDmB,SAAOC,OAAP,GAAiB,SAASC,IAAT,CAAclB,EAAd,EAAkB;AACjC,QAAImB,OAAO;AACTnB,UAAIA,EADK;AAETG,YAAMC,SAFG;AAGTL,cAAQN,UAAUT,QAAQe;AAHjB,KAAX;AAKA,QAAIJ,IAAJ,EACEA,KAAKQ,IAAL,GAAYgB,IAAZ;AACF,QAAI,CAACzB,IAAL,EAAW;AACTA,aAAOyB,IAAP;AACAvB;AACD;AACDD,WAAOwB,IAAP;AACD,GAbD;AAcD,CAlED,EAkEGjC,QAAQ,SAAR,CAlEH","file":"$.microtask.js","sourcesContent":["/* */ \n(function(process) {\n  var global = require('./$.global'),\n      macrotask = require('./$.task').set,\n      Observer = global.MutationObserver || global.WebKitMutationObserver,\n      process = global.process,\n      Promise = global.Promise,\n      isNode = require('./$.cof')(process) == 'process',\n      head,\n      last,\n      notify;\n  var flush = function() {\n    var parent,\n        domain,\n        fn;\n    if (isNode && (parent = process.domain)) {\n      process.domain = null;\n      parent.exit();\n    }\n    while (head) {\n      domain = head.domain;\n      fn = head.fn;\n      if (domain)\n        domain.enter();\n      fn();\n      if (domain)\n        domain.exit();\n      head = head.next;\n    }\n    last = undefined;\n    if (parent)\n      parent.enter();\n  };\n  if (isNode) {\n    notify = function() {\n      process.nextTick(flush);\n    };\n  } else if (Observer) {\n    var toggle = 1,\n        node = document.createTextNode('');\n    new Observer(flush).observe(node, {characterData: true});\n    notify = function() {\n      node.data = toggle = -toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    notify = function() {\n      Promise.resolve().then(flush);\n    };\n  } else {\n    notify = function() {\n      macrotask.call(global, flush);\n    };\n  }\n  module.exports = function asap(fn) {\n    var task = {\n      fn: fn,\n      next: undefined,\n      domain: isNode && process.domain\n    };\n    if (last)\n      last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n})(require('process'));\n"]}