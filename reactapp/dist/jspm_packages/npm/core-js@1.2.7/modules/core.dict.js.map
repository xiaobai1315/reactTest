{"version":3,"sources":["../../../../../jspm_packages/npm/core-js@1.2.7/modules/core.dict.js"],"names":["$","require","ctx","$export","createDesc","assign","keyOf","aFunction","forOf","isIterable","$iterCreate","step","isObject","toIObject","DESCRIPTORS","has","getKeys","createDictMethod","TYPE","IS_MAP","IS_EVERY","object","callbackfn","that","f","O","result","Dict","undefined","key","val","res","findKey","createDictIter","kind","it","DictIterator","iterated","_t","_a","_i","_k","keys","length","iterable","dict","create","value","prototype","reduce","mapfn","init","i","memo","arguments","TypeError","Object","includes","el","get","set","setDesc","isDict","getProto","G","F","S","values","entries","forEach","map","filter","some","every","find","mapPairs"],"mappings":"AAAA;AACA;;AACA,IAAIA,IAAIC,QAAQ,KAAR,CAAR;AAAA,IACIC,MAAMD,QAAQ,SAAR,CADV;AAAA,IAEIE,UAAUF,QAAQ,YAAR,CAFd;AAAA,IAGIG,aAAaH,QAAQ,mBAAR,CAHjB;AAAA,IAIII,SAASJ,QAAQ,mBAAR,CAJb;AAAA,IAKIK,QAAQL,QAAQ,WAAR,CALZ;AAAA,IAMIM,YAAYN,QAAQ,gBAAR,CANhB;AAAA,IAOIO,QAAQP,QAAQ,YAAR,CAPZ;AAAA,IAQIQ,aAAaR,QAAQ,oBAAR,CARjB;AAAA,IASIS,cAAcT,QAAQ,iBAAR,CATlB;AAAA,IAUIU,OAAOV,QAAQ,eAAR,CAVX;AAAA,IAWIW,WAAWX,QAAQ,eAAR,CAXf;AAAA,IAYIY,YAAYZ,QAAQ,gBAAR,CAZhB;AAAA,IAaIa,cAAcb,QAAQ,iBAAR,CAblB;AAAA,IAcIc,MAAMd,QAAQ,SAAR,CAdV;AAAA,IAeIe,UAAUhB,EAAEgB,OAfhB;AAgBA,IAAIC,mBAAmB,SAAnBA,gBAAmB,CAASC,IAAT,EAAe;AACpC,MAAIC,SAASD,QAAQ,CAArB;AAAA,MACIE,WAAWF,QAAQ,CADvB;AAEA,SAAO,UAASG,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,EAAmC;AACxC,QAAIC,IAAItB,IAAIoB,UAAJ,EAAgBC,IAAhB,EAAsB,CAAtB,CAAR;AAAA,QACIE,IAAIZ,UAAUQ,MAAV,CADR;AAAA,QAEIK,SAASP,UAAUD,QAAQ,CAAlB,IAAuBA,QAAQ,CAA/B,GAAmC,KAAK,OAAO,IAAP,IAAe,UAAf,GAA4B,IAA5B,GAAmCS,IAAxC,GAAnC,GAAmFC,SAFhG;AAAA,QAGIC,GAHJ;AAAA,QAIIC,GAJJ;AAAA,QAKIC,GALJ;AAMA,SAAKF,GAAL,IAAYJ,CAAZ;AACE,UAAIV,IAAIU,CAAJ,EAAOI,GAAP,CAAJ,EAAiB;AACfC,cAAML,EAAEI,GAAF,CAAN;AACAE,cAAMP,EAAEM,GAAF,EAAOD,GAAP,EAAYR,MAAZ,CAAN;AACA,YAAIH,IAAJ,EAAU;AACR,cAAIC,MAAJ,EACEO,OAAOG,GAAP,IAAcE,GAAd,CADF,KAEK,IAAIA,GAAJ,EACH,QAAQb,IAAR;AACE,iBAAK,CAAL;AACEQ,qBAAOG,GAAP,IAAcC,GAAd;AACA;AACF,iBAAK,CAAL;AACE,qBAAO,IAAP;AACF,iBAAK,CAAL;AACE,qBAAOA,GAAP;AACF,iBAAK,CAAL;AACE,qBAAOD,GAAP;AACF,iBAAK,CAAL;AACEH,qBAAOK,IAAI,CAAJ,CAAP,IAAiBA,IAAI,CAAJ,CAAjB;AAXJ,WADG,MAcA,IAAIX,QAAJ,EACH,OAAO,KAAP;AACH;AACF;AAxBH,KAyBA,OAAOF,QAAQ,CAAR,IAAaE,QAAb,GAAwBA,QAAxB,GAAmCM,MAA1C;AACD,GAjCD;AAkCD,CArCD;AAsCA,IAAIM,UAAUf,iBAAiB,CAAjB,CAAd;AACA,IAAIgB,iBAAiB,SAAjBA,cAAiB,CAASC,IAAT,EAAe;AAClC,SAAO,UAASC,EAAT,EAAa;AAClB,WAAO,IAAIC,YAAJ,CAAiBD,EAAjB,EAAqBD,IAArB,CAAP;AACD,GAFD;AAGD,CAJD;AAKA,IAAIE,eAAe,SAAfA,YAAe,CAASC,QAAT,EAAmBH,IAAnB,EAAyB;AAC1C,OAAKI,EAAL,GAAUzB,UAAUwB,QAAV,CAAV;AACA,OAAKE,EAAL,GAAUvB,QAAQqB,QAAR,CAAV;AACA,OAAKG,EAAL,GAAU,CAAV;AACA,OAAKC,EAAL,GAAUP,IAAV;AACD,CALD;AAMAxB,YAAY0B,YAAZ,EAA0B,MAA1B,EAAkC,YAAW;AAC3C,MAAIb,OAAO,IAAX;AAAA,MACIE,IAAIF,KAAKe,EADb;AAAA,MAEII,OAAOnB,KAAKgB,EAFhB;AAAA,MAGIL,OAAOX,KAAKkB,EAHhB;AAAA,MAIIZ,GAJJ;AAKA,KAAG;AACD,QAAIN,KAAKiB,EAAL,IAAWE,KAAKC,MAApB,EAA4B;AAC1BpB,WAAKe,EAAL,GAAUV,SAAV;AACA,aAAOjB,KAAK,CAAL,CAAP;AACD;AACF,GALD,QAKS,CAACI,IAAIU,CAAJ,EAAOI,MAAMa,KAAKnB,KAAKiB,EAAL,EAAL,CAAb,CALV;AAMA,MAAIN,QAAQ,MAAZ,EACE,OAAOvB,KAAK,CAAL,EAAQkB,GAAR,CAAP;AACF,MAAIK,QAAQ,QAAZ,EACE,OAAOvB,KAAK,CAAL,EAAQc,EAAEI,GAAF,CAAR,CAAP;AACF,SAAOlB,KAAK,CAAL,EAAQ,CAACkB,GAAD,EAAMJ,EAAEI,GAAF,CAAN,CAAR,CAAP;AACD,CAjBD;AAkBA,SAASF,IAAT,CAAciB,QAAd,EAAwB;AACtB,MAAIC,OAAO7C,EAAE8C,MAAF,CAAS,IAAT,CAAX;AACA,MAAIF,YAAYhB,SAAhB,EAA2B;AACzB,QAAInB,WAAWmC,QAAX,CAAJ,EAA0B;AACxBpC,YAAMoC,QAAN,EAAgB,IAAhB,EAAsB,UAASf,GAAT,EAAckB,KAAd,EAAqB;AACzCF,aAAKhB,GAAL,IAAYkB,KAAZ;AACD,OAFD;AAGD,KAJD,MAKE1C,OAAOwC,IAAP,EAAaD,QAAb;AACH;AACD,SAAOC,IAAP;AACD;AACDlB,KAAKqB,SAAL,GAAiB,IAAjB;AACA,SAASC,MAAT,CAAgB5B,MAAhB,EAAwB6B,KAAxB,EAA+BC,IAA/B,EAAqC;AACnC5C,YAAU2C,KAAV;AACA,MAAIzB,IAAIZ,UAAUQ,MAAV,CAAR;AAAA,MACIqB,OAAO1B,QAAQS,CAAR,CADX;AAAA,MAEIkB,SAASD,KAAKC,MAFlB;AAAA,MAGIS,IAAI,CAHR;AAAA,MAIIC,IAJJ;AAAA,MAKIxB,GALJ;AAMA,MAAIyB,UAAUX,MAAV,GAAmB,CAAvB,EAA0B;AACxB,QAAI,CAACA,MAAL,EACE,MAAMY,UAAU,8CAAV,CAAN;AACFF,WAAO5B,EAAEiB,KAAKU,GAAL,CAAF,CAAP;AACD,GAJD,MAKEC,OAAOG,OAAOL,IAAP,CAAP;AACF,SAAOR,SAASS,CAAhB;AACE,QAAIrC,IAAIU,CAAJ,EAAOI,MAAMa,KAAKU,GAAL,CAAb,CAAJ,EAA6B;AAC3BC,aAAOH,MAAMG,IAAN,EAAY5B,EAAEI,GAAF,CAAZ,EAAoBA,GAApB,EAAyBR,MAAzB,CAAP;AACD;AAHH,GAIA,OAAOgC,IAAP;AACD;AACD,SAASI,QAAT,CAAkBpC,MAAlB,EAA0BqC,EAA1B,EAA8B;AAC5B,SAAO,CAACA,MAAMA,EAAN,GAAWpD,MAAMe,MAAN,EAAcqC,EAAd,CAAX,GAA+B1B,QAAQX,MAAR,EAAgB,UAASc,EAAT,EAAa;AAClE,WAAOA,MAAMA,EAAb;AACD,GAFsC,CAAhC,MAECP,SAFR;AAGD;AACD,SAAS+B,GAAT,CAAatC,MAAb,EAAqBQ,GAArB,EAA0B;AACxB,MAAId,IAAIM,MAAJ,EAAYQ,GAAZ,CAAJ,EACE,OAAOR,OAAOQ,GAAP,CAAP;AACH;AACD,SAAS+B,GAAT,CAAavC,MAAb,EAAqBQ,GAArB,EAA0BkB,KAA1B,EAAiC;AAC/B,MAAIjC,eAAee,OAAO2B,MAA1B,EACExD,EAAE6D,OAAF,CAAUxC,MAAV,EAAkBQ,GAAlB,EAAuBzB,WAAW,CAAX,EAAc2C,KAAd,CAAvB,EADF,KAGE1B,OAAOQ,GAAP,IAAckB,KAAd;AACF,SAAO1B,MAAP;AACD;AACD,SAASyC,MAAT,CAAgB3B,EAAhB,EAAoB;AAClB,SAAOvB,SAASuB,EAAT,KAAgBnC,EAAE+D,QAAF,CAAW5B,EAAX,MAAmBR,KAAKqB,SAA/C;AACD;AACD7C,QAAQA,QAAQ6D,CAAR,GAAY7D,QAAQ8D,CAA5B,EAA+B,EAACtC,MAAMA,IAAP,EAA/B;AACAxB,QAAQA,QAAQ+D,CAAhB,EAAmB,MAAnB,EAA2B;AACzBxB,QAAMT,eAAe,MAAf,CADmB;AAEzBkC,UAAQlC,eAAe,QAAf,CAFiB;AAGzBmC,WAASnC,eAAe,SAAf,CAHgB;AAIzBoC,WAASpD,iBAAiB,CAAjB,CAJgB;AAKzBqD,OAAKrD,iBAAiB,CAAjB,CALoB;AAMzBsD,UAAQtD,iBAAiB,CAAjB,CANiB;AAOzBuD,QAAMvD,iBAAiB,CAAjB,CAPmB;AAQzBwD,SAAOxD,iBAAiB,CAAjB,CARkB;AASzByD,QAAMzD,iBAAiB,CAAjB,CATmB;AAUzBe,WAASA,OAVgB;AAWzB2C,YAAU1D,iBAAiB,CAAjB,CAXe;AAYzBgC,UAAQA,MAZiB;AAazB3C,SAAOA,KAbkB;AAczBmD,YAAUA,QAde;AAezB1C,OAAKA,GAfoB;AAgBzB4C,OAAKA,GAhBoB;AAiBzBC,OAAKA,GAjBoB;AAkBzBE,UAAQA;AAlBiB,CAA3B","file":"core.dict.js","sourcesContent":["/* */ \n'use strict';\nvar $ = require('./$'),\n    ctx = require('./$.ctx'),\n    $export = require('./$.export'),\n    createDesc = require('./$.property-desc'),\n    assign = require('./$.object-assign'),\n    keyOf = require('./$.keyof'),\n    aFunction = require('./$.a-function'),\n    forOf = require('./$.for-of'),\n    isIterable = require('./core.is-iterable'),\n    $iterCreate = require('./$.iter-create'),\n    step = require('./$.iter-step'),\n    isObject = require('./$.is-object'),\n    toIObject = require('./$.to-iobject'),\n    DESCRIPTORS = require('./$.descriptors'),\n    has = require('./$.has'),\n    getKeys = $.getKeys;\nvar createDictMethod = function(TYPE) {\n  var IS_MAP = TYPE == 1,\n      IS_EVERY = TYPE == 4;\n  return function(object, callbackfn, that) {\n    var f = ctx(callbackfn, that, 3),\n        O = toIObject(object),\n        result = IS_MAP || TYPE == 7 || TYPE == 2 ? new (typeof this == 'function' ? this : Dict) : undefined,\n        key,\n        val,\n        res;\n    for (key in O)\n      if (has(O, key)) {\n        val = O[key];\n        res = f(val, key, object);\n        if (TYPE) {\n          if (IS_MAP)\n            result[key] = res;\n          else if (res)\n            switch (TYPE) {\n              case 2:\n                result[key] = val;\n                break;\n              case 3:\n                return true;\n              case 5:\n                return val;\n              case 6:\n                return key;\n              case 7:\n                result[res[0]] = res[1];\n            }\n          else if (IS_EVERY)\n            return false;\n        }\n      }\n    return TYPE == 3 || IS_EVERY ? IS_EVERY : result;\n  };\n};\nvar findKey = createDictMethod(6);\nvar createDictIter = function(kind) {\n  return function(it) {\n    return new DictIterator(it, kind);\n  };\n};\nvar DictIterator = function(iterated, kind) {\n  this._t = toIObject(iterated);\n  this._a = getKeys(iterated);\n  this._i = 0;\n  this._k = kind;\n};\n$iterCreate(DictIterator, 'Dict', function() {\n  var that = this,\n      O = that._t,\n      keys = that._a,\n      kind = that._k,\n      key;\n  do {\n    if (that._i >= keys.length) {\n      that._t = undefined;\n      return step(1);\n    }\n  } while (!has(O, key = keys[that._i++]));\n  if (kind == 'keys')\n    return step(0, key);\n  if (kind == 'values')\n    return step(0, O[key]);\n  return step(0, [key, O[key]]);\n});\nfunction Dict(iterable) {\n  var dict = $.create(null);\n  if (iterable != undefined) {\n    if (isIterable(iterable)) {\n      forOf(iterable, true, function(key, value) {\n        dict[key] = value;\n      });\n    } else\n      assign(dict, iterable);\n  }\n  return dict;\n}\nDict.prototype = null;\nfunction reduce(object, mapfn, init) {\n  aFunction(mapfn);\n  var O = toIObject(object),\n      keys = getKeys(O),\n      length = keys.length,\n      i = 0,\n      memo,\n      key;\n  if (arguments.length < 3) {\n    if (!length)\n      throw TypeError('Reduce of empty object with no initial value');\n    memo = O[keys[i++]];\n  } else\n    memo = Object(init);\n  while (length > i)\n    if (has(O, key = keys[i++])) {\n      memo = mapfn(memo, O[key], key, object);\n    }\n  return memo;\n}\nfunction includes(object, el) {\n  return (el == el ? keyOf(object, el) : findKey(object, function(it) {\n    return it != it;\n  })) !== undefined;\n}\nfunction get(object, key) {\n  if (has(object, key))\n    return object[key];\n}\nfunction set(object, key, value) {\n  if (DESCRIPTORS && key in Object)\n    $.setDesc(object, key, createDesc(0, value));\n  else\n    object[key] = value;\n  return object;\n}\nfunction isDict(it) {\n  return isObject(it) && $.getProto(it) === Dict.prototype;\n}\n$export($export.G + $export.F, {Dict: Dict});\n$export($export.S, 'Dict', {\n  keys: createDictIter('keys'),\n  values: createDictIter('values'),\n  entries: createDictIter('entries'),\n  forEach: createDictMethod(0),\n  map: createDictMethod(1),\n  filter: createDictMethod(2),\n  some: createDictMethod(3),\n  every: createDictMethod(4),\n  find: createDictMethod(5),\n  findKey: findKey,\n  mapPairs: createDictMethod(7),\n  reduce: reduce,\n  keyOf: keyOf,\n  includes: includes,\n  has: has,\n  get: get,\n  set: set,\n  isDict: isDict\n});\n"]}