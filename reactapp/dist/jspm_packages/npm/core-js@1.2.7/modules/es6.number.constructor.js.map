{"version":3,"sources":["../../../../../jspm_packages/npm/core-js@1.2.7/modules/es6.number.constructor.js"],"names":["$","require","global","has","cof","toPrimitive","fails","$trim","trim","NUMBER","$Number","Base","proto","prototype","BROKEN_COF","create","TRIM","String","toNumber","argument","it","length","first","charCodeAt","third","radix","maxCode","NaN","digits","slice","i","l","code","parseInt","Number","value","arguments","that","valueOf","call","each","getNames","split","key","setDesc","getDesc","constructor"],"mappings":"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","file":"es6.number.constructor.js","sourcesContent":["/* */ \n'use strict';\nvar $ = require('./$'),\n    global = require('./$.global'),\n    has = require('./$.has'),\n    cof = require('./$.cof'),\n    toPrimitive = require('./$.to-primitive'),\n    fails = require('./$.fails'),\n    $trim = require('./$.string-trim').trim,\n    NUMBER = 'Number',\n    $Number = global[NUMBER],\n    Base = $Number,\n    proto = $Number.prototype,\n    BROKEN_COF = cof($.create(proto)) == NUMBER,\n    TRIM = 'trim' in String.prototype;\nvar toNumber = function(argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0),\n        third,\n        radix,\n        maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120)\n        return NaN;\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66:\n        case 98:\n          radix = 2;\n          maxCode = 49;\n          break;\n        case 79:\n        case 111:\n          radix = 8;\n          maxCode = 55;\n          break;\n        default:\n          return +it;\n      }\n      for (var digits = it.slice(2),\n          i = 0,\n          l = digits.length,\n          code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        if (code < 48 || code > maxCode)\n          return NaN;\n      }\n      return parseInt(digits, radix);\n    }\n  }\n  return +it;\n};\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value,\n        that = this;\n    return that instanceof $Number && (BROKEN_COF ? fails(function() {\n      proto.valueOf.call(that);\n    }) : cof(that) != NUMBER) ? new Base(toNumber(it)) : toNumber(it);\n  };\n  $.each.call(require('./$.descriptors') ? $.getNames(Base) : ('MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' + 'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' + 'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger').split(','), function(key) {\n    if (has(Base, key) && !has($Number, key)) {\n      $.setDesc($Number, key, $.getDesc(Base, key));\n    }\n  });\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./$.redefine')(global, NUMBER, $Number);\n}\n"]}