{"version":3,"sources":["../../../../../jspm_packages/npm/core-js@1.2.7/modules/$.array-methods.js"],"names":["ctx","require","IObject","toObject","toLength","asc","module","exports","TYPE","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","that","O","self","f","length","index","result","undefined","val","res","push"],"mappings":";;AAAA;AACA,IAAIA,MAAMC,QAAQ,SAAR,CAAV;AAAA,IACIC,UAAUD,QAAQ,aAAR,CADd;AAAA,IAEIE,WAAWF,QAAQ,eAAR,CAFf;AAAA,IAGIG,WAAWH,QAAQ,eAAR,CAHf;AAAA,IAIII,MAAMJ,QAAQ,0BAAR,CAJV;AAKAK,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,SAASD,QAAQ,CAArB;AAAA,MACIE,YAAYF,QAAQ,CADxB;AAAA,MAEIG,UAAUH,QAAQ,CAFtB;AAAA,MAGII,WAAWJ,QAAQ,CAHvB;AAAA,MAIIK,gBAAgBL,QAAQ,CAJ5B;AAAA,MAKIM,WAAWN,QAAQ,CAAR,IAAaK,aAL5B;AAMA,SAAO,UAASE,KAAT,EAAgBC,UAAhB,EAA4BC,IAA5B,EAAkC;AACvC,QAAIC,IAAIf,SAASY,KAAT,CAAR;AAAA,QACII,OAAOjB,QAAQgB,CAAR,CADX;AAAA,QAEIE,IAAIpB,IAAIgB,UAAJ,EAAgBC,IAAhB,EAAsB,CAAtB,CAFR;AAAA,QAGII,SAASjB,SAASe,KAAKE,MAAd,CAHb;AAAA,QAIIC,QAAQ,CAJZ;AAAA,QAKIC,SAASd,SAASJ,IAAIU,KAAJ,EAAWM,MAAX,CAAT,GAA8BX,YAAYL,IAAIU,KAAJ,EAAW,CAAX,CAAZ,GAA4BS,SALvE;AAAA,QAMIC,GANJ;AAAA,QAOIC,GAPJ;AAQA,WAAOL,SAASC,KAAhB,EAAuBA,OAAvB;AACE,UAAIR,YAAYQ,SAASH,IAAzB,EAA+B;AAC7BM,cAAMN,KAAKG,KAAL,CAAN;AACAI,cAAMN,EAAEK,GAAF,EAAOH,KAAP,EAAcJ,CAAd,CAAN;AACA,YAAIV,IAAJ,EAAU;AACR,cAAIC,MAAJ,EACEc,OAAOD,KAAP,IAAgBI,GAAhB,CADF,KAEK,IAAIA,GAAJ,EACH,QAAQlB,IAAR;AACE,iBAAK,CAAL;AACE,qBAAO,IAAP;AACF,iBAAK,CAAL;AACE,qBAAOiB,GAAP;AACF,iBAAK,CAAL;AACE,qBAAOH,KAAP;AACF,iBAAK,CAAL;AACEC,qBAAOI,IAAP,CAAYF,GAAZ;AARJ,WADG,MAWA,IAAIb,QAAJ,EACH,OAAO,KAAP;AACH;AACF;AArBH,KAsBA,OAAOC,gBAAgB,CAAC,CAAjB,GAAqBF,WAAWC,QAAX,GAAsBA,QAAtB,GAAiCW,MAA7D;AACD,GAhCD;AAiCD,CAxCD","file":"$.array-methods.js","sourcesContent":["/* */ \nvar ctx = require('./$.ctx'),\n    IObject = require('./$.iobject'),\n    toObject = require('./$.to-object'),\n    toLength = require('./$.to-length'),\n    asc = require('./$.array-species-create');\nmodule.exports = function(TYPE) {\n  var IS_MAP = TYPE == 1,\n      IS_FILTER = TYPE == 2,\n      IS_SOME = TYPE == 3,\n      IS_EVERY = TYPE == 4,\n      IS_FIND_INDEX = TYPE == 6,\n      NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function($this, callbackfn, that) {\n    var O = toObject($this),\n        self = IObject(O),\n        f = ctx(callbackfn, that, 3),\n        length = toLength(self.length),\n        index = 0,\n        result = IS_MAP ? asc($this, length) : IS_FILTER ? asc($this, 0) : undefined,\n        val,\n        res;\n    for (; length > index; index++)\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP)\n            result[index] = res;\n          else if (res)\n            switch (TYPE) {\n              case 3:\n                return true;\n              case 5:\n                return val;\n              case 6:\n                return index;\n              case 2:\n                result.push(val);\n            }\n          else if (IS_EVERY)\n            return false;\n        }\n      }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n"]}