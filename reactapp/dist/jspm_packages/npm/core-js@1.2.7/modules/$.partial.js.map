{"version":3,"sources":["../../../../../jspm_packages/npm/core-js@1.2.7/modules/$.partial.js"],"names":["path","require","invoke","aFunction","module","exports","fn","length","arguments","pargs","Array","i","_","holder","that","$$","$$len","j","k","args","slice","push"],"mappings":"AAAA;AACA;;AACA,IAAIA,OAAOC,QAAQ,UAAR,CAAX;AAAA,IACIC,SAASD,QAAQ,YAAR,CADb;AAAA,IAEIE,YAAYF,QAAQ,gBAAR,CAFhB;AAGAG,OAAOC,OAAP,GAAiB,YAAW;AAC1B,MAAIC,KAAKH,UAAU,IAAV,CAAT;AAAA,MACII,SAASC,UAAUD,MADvB;AAAA,MAEIE,QAAQC,MAAMH,MAAN,CAFZ;AAAA,MAGII,IAAI,CAHR;AAAA,MAIIC,IAAIZ,KAAKY,CAJb;AAAA,MAKIC,SAAS,KALb;AAMA,SAAON,SAASI,CAAhB;AACE,QAAI,CAACF,MAAME,CAAN,IAAWH,UAAUG,GAAV,CAAZ,MAAgCC,CAApC,EACEC,SAAS,IAAT;AAFJ,GAGA,OAAO,YAAW;AAChB,QAAIC,OAAO,IAAX;AAAA,QACIC,KAAKP,SADT;AAAA,QAEIQ,QAAQD,GAAGR,MAFf;AAAA,QAGIU,IAAI,CAHR;AAAA,QAIIC,IAAI,CAJR;AAAA,QAKIC,IALJ;AAMA,QAAI,CAACN,MAAD,IAAW,CAACG,KAAhB,EACE,OAAOd,OAAOI,EAAP,EAAWG,KAAX,EAAkBK,IAAlB,CAAP;AACFK,WAAOV,MAAMW,KAAN,EAAP;AACA,QAAIP,MAAJ,EACE,OAAON,SAASU,CAAhB,EAAmBA,GAAnB;AACE,UAAIE,KAAKF,CAAL,MAAYL,CAAhB,EACEO,KAAKF,CAAL,IAAUF,GAAGG,GAAH,CAAV;AAFJ,KAGF,OAAOF,QAAQE,CAAf;AACEC,WAAKE,IAAL,CAAUN,GAAGG,GAAH,CAAV;AADF,KAEA,OAAOhB,OAAOI,EAAP,EAAWa,IAAX,EAAiBL,IAAjB,CAAP;AACD,GAjBD;AAkBD,CA5BD","file":"$.partial.js","sourcesContent":["/* */ \n'use strict';\nvar path = require('./$.path'),\n    invoke = require('./$.invoke'),\n    aFunction = require('./$.a-function');\nmodule.exports = function() {\n  var fn = aFunction(this),\n      length = arguments.length,\n      pargs = Array(length),\n      i = 0,\n      _ = path._,\n      holder = false;\n  while (length > i)\n    if ((pargs[i] = arguments[i++]) === _)\n      holder = true;\n  return function() {\n    var that = this,\n        $$ = arguments,\n        $$len = $$.length,\n        j = 0,\n        k = 0,\n        args;\n    if (!holder && !$$len)\n      return invoke(fn, pargs, that);\n    args = pargs.slice();\n    if (holder)\n      for (; length > j; j++)\n        if (args[j] === _)\n          args[j] = $$[k++];\n    while ($$len > k)\n      args.push($$[k++]);\n    return invoke(fn, args, that);\n  };\n};\n"]}