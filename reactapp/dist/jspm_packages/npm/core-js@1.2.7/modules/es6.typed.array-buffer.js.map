{"version":3,"sources":["../../../../../jspm_packages/npm/core-js@1.2.7/modules/es6.typed.array-buffer.js"],"names":["require","$export","$typed","buffer","toIndex","toLength","isObject","TYPED_ARRAY","$ArrayBuffer","ArrayBuffer","$DataView","DataView","$slice","prototype","slice","VIEW","ARRAY_BUFFER","G","W","F","ABV","S","CONSTR","isView","it","P","undefined","byteLength","start","end","call","len","first","final","result","viewS","viewT","index","setUint8","getUint8"],"mappings":"AAAA;AACA;;AACA,IAAIA,QAAQ,iBAAR,CAAJ,EAAgC;AAC9B,MAAIC,UAAUD,QAAQ,YAAR,CAAd;AAAA,MACIE,SAASF,QAAQ,WAAR,CADb;AAAA,MAEIG,SAASH,QAAQ,YAAR,CAFb;AAAA,MAGII,UAAUJ,QAAQ,cAAR,CAHd;AAAA,MAIIK,WAAWL,QAAQ,eAAR,CAJf;AAAA,MAKIM,WAAWN,QAAQ,eAAR,CALf;AAAA,MAMIO,cAAcP,QAAQ,SAAR,EAAmB,aAAnB,CANlB;AAAA,MAOIQ,eAAeL,OAAOM,WAP1B;AAAA,MAQIC,YAAYP,OAAOQ,QARvB;AAAA,MASIC,SAASJ,gBAAgBA,aAAaK,SAAb,CAAuBC,KATpD;AAAA,MAUIC,OAAOb,OAAOa,IAVlB;AAAA,MAWIC,eAAe,aAXnB;AAYAf,UAAQA,QAAQgB,CAAR,GAAYhB,QAAQiB,CAApB,GAAwBjB,QAAQkB,CAAR,GAAY,CAACjB,OAAOkB,GAApD,EAAyD,EAACX,aAAaD,YAAd,EAAzD;AACAP,UAAQA,QAAQoB,CAAR,GAAYpB,QAAQkB,CAAR,GAAY,CAACjB,OAAOoB,MAAxC,EAAgDN,YAAhD,EAA8D,EAACO,QAAQ,SAASA,MAAT,CAAgBC,EAAhB,EAAoB;AACvF,aAAOlB,SAASkB,EAAT,KAAgBT,QAAQS,EAA/B;AACD,KAF2D,EAA9D;AAGAvB,UAAQA,QAAQwB,CAAR,GAAYxB,QAAQkB,CAAR,GAAYnB,QAAQ,WAAR,EAAqB,YAAW;AAC9D,WAAO,CAAC,IAAIQ,YAAJ,CAAiB,CAAjB,EAAoBM,KAApB,CAA0B,CAA1B,EAA6BY,SAA7B,EAAwCC,UAAhD;AACD,GAF+B,CAAhC,EAEIX,YAFJ,EAEkB,EAACF,OAAO,SAASA,KAAT,CAAec,KAAf,EAAsBC,GAAtB,EAA2B;AACjD,UAAIjB,WAAWc,SAAX,IAAwBG,QAAQH,SAApC,EACE,OAAOd,OAAOkB,IAAP,CAAY,IAAZ,EAAkBF,KAAlB,CAAP;AACF,UAAIG,MAAM,KAAKJ,UAAf;AAAA,UACIK,QAAQ5B,QAAQwB,KAAR,EAAeG,GAAf,CADZ;AAAA,UAEIE,QAAQ7B,QAAQyB,QAAQH,SAAR,GAAoBK,GAApB,GAA0BF,GAAlC,EAAuCE,GAAvC,CAFZ;AAAA,UAGIG,SAAS,IAAI1B,YAAJ,CAAiBH,SAAS4B,QAAQD,KAAjB,CAAjB,CAHb;AAAA,UAIIG,QAAQ,IAAIzB,SAAJ,CAAc,IAAd,CAJZ;AAAA,UAKI0B,QAAQ,IAAI1B,SAAJ,CAAcwB,MAAd,CALZ;AAAA,UAMIG,QAAQ,CANZ;AAOA,aAAOL,QAAQC,KAAf,EAAsB;AACpBG,cAAME,QAAN,CAAeD,OAAf,EAAwBF,MAAMI,QAAN,CAAeP,OAAf,CAAxB;AACD;AACD,aAAOE,MAAP;AACD,KAde,EAFlB;AAiBD","file":"es6.typed.array-buffer.js","sourcesContent":["/* */ \n'use strict';\nif (require('./$.descriptors')) {\n  var $export = require('./$.export'),\n      $typed = require('./$.typed'),\n      buffer = require('./$.buffer'),\n      toIndex = require('./$.to-index'),\n      toLength = require('./$.to-length'),\n      isObject = require('./$.is-object'),\n      TYPED_ARRAY = require('./$.wks')('typed_array'),\n      $ArrayBuffer = buffer.ArrayBuffer,\n      $DataView = buffer.DataView,\n      $slice = $ArrayBuffer && $ArrayBuffer.prototype.slice,\n      VIEW = $typed.VIEW,\n      ARRAY_BUFFER = 'ArrayBuffer';\n  $export($export.G + $export.W + $export.F * !$typed.ABV, {ArrayBuffer: $ArrayBuffer});\n  $export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {isView: function isView(it) {\n      return isObject(it) && VIEW in it;\n    }});\n  $export($export.P + $export.F * require('./$.fails')(function() {\n    return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n  }), ARRAY_BUFFER, {slice: function slice(start, end) {\n      if ($slice !== undefined && end === undefined)\n        return $slice.call(this, start);\n      var len = this.byteLength,\n          first = toIndex(start, len),\n          final = toIndex(end === undefined ? len : end, len),\n          result = new $ArrayBuffer(toLength(final - first)),\n          viewS = new $DataView(this),\n          viewT = new $DataView(result),\n          index = 0;\n      while (first < final) {\n        viewT.setUint8(index++, viewS.getUint8(first++));\n      }\n      return result;\n    }});\n}\n"]}