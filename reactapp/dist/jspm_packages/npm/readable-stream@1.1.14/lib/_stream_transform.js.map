{"version":3,"sources":["../../../../../jspm_packages/npm/readable-stream@1.1.14/lib/_stream_transform.js"],"names":["process","module","exports","Transform","Duplex","require","util","inherits","TransformState","options","stream","afterTransform","er","data","needTransform","transforming","writecb","writechunk","ts","_transformState","cb","emit","Error","isNullOrUndefined","push","rs","_readableState","reading","needReadable","length","highWaterMark","_read","call","sync","once","isFunction","_flush","done","prototype","chunk","encoding","_transform","_write","writeencoding","n","isNull","ws","_writableState"],"mappings":";;AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjBC,SAAOC,OAAP,GAAiBC,SAAjB;AACA,MAAIC,SAASC,QAAQ,kBAAR,CAAb;AACA,MAAIC,OAAOD,QAAQ,cAAR,CAAX;AACAC,OAAKC,QAAL,GAAgBF,QAAQ,UAAR,CAAhB;AACAC,OAAKC,QAAL,CAAcJ,SAAd,EAAyBC,MAAzB;AACA,WAASI,cAAT,CAAwBC,OAAxB,EAAiCC,MAAjC,EAAyC;AACvC,SAAKC,cAAL,GAAsB,UAASC,EAAT,EAAaC,IAAb,EAAmB;AACvC,aAAOF,eAAeD,MAAf,EAAuBE,EAAvB,EAA2BC,IAA3B,CAAP;AACD,KAFD;AAGA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACD;AACD,WAASN,cAAT,CAAwBD,MAAxB,EAAgCE,EAAhC,EAAoCC,IAApC,EAA0C;AACxC,QAAIK,KAAKR,OAAOS,eAAhB;AACAD,OAAGH,YAAH,GAAkB,KAAlB;AACA,QAAIK,KAAKF,GAAGF,OAAZ;AACA,QAAI,CAACI,EAAL,EACE,OAAOV,OAAOW,IAAP,CAAY,OAAZ,EAAqB,IAAIC,KAAJ,CAAU,+BAAV,CAArB,CAAP;AACFJ,OAAGD,UAAH,GAAgB,IAAhB;AACAC,OAAGF,OAAH,GAAa,IAAb;AACA,QAAI,CAACV,KAAKiB,iBAAL,CAAuBV,IAAvB,CAAL,EACEH,OAAOc,IAAP,CAAYX,IAAZ;AACF,QAAIO,EAAJ,EACEA,GAAGR,EAAH;AACF,QAAIa,KAAKf,OAAOgB,cAAhB;AACAD,OAAGE,OAAH,GAAa,KAAb;AACA,QAAIF,GAAGG,YAAH,IAAmBH,GAAGI,MAAH,GAAYJ,GAAGK,aAAtC,EAAqD;AACnDpB,aAAOqB,KAAP,CAAaN,GAAGK,aAAhB;AACD;AACF;AACD,WAAS3B,SAAT,CAAmBM,OAAnB,EAA4B;AAC1B,QAAI,EAAE,gBAAgBN,SAAlB,CAAJ,EACE,OAAO,IAAIA,SAAJ,CAAcM,OAAd,CAAP;AACFL,WAAO4B,IAAP,CAAY,IAAZ,EAAkBvB,OAAlB;AACA,SAAKU,eAAL,GAAuB,IAAIX,cAAJ,CAAmBC,OAAnB,EAA4B,IAA5B,CAAvB;AACA,QAAIC,SAAS,IAAb;AACA,SAAKgB,cAAL,CAAoBE,YAApB,GAAmC,IAAnC;AACA,SAAKF,cAAL,CAAoBO,IAApB,GAA2B,KAA3B;AACA,SAAKC,IAAL,CAAU,WAAV,EAAuB,YAAW;AAChC,UAAI5B,KAAK6B,UAAL,CAAgB,KAAKC,MAArB,CAAJ,EACE,KAAKA,MAAL,CAAY,UAASxB,EAAT,EAAa;AACvByB,aAAK3B,MAAL,EAAaE,EAAb;AACD,OAFD,EADF,KAKEyB,KAAK3B,MAAL;AACH,KAPD;AAQD;AACDP,YAAUmC,SAAV,CAAoBd,IAApB,GAA2B,UAASe,KAAT,EAAgBC,QAAhB,EAA0B;AACnD,SAAKrB,eAAL,CAAqBL,aAArB,GAAqC,KAArC;AACA,WAAOV,OAAOkC,SAAP,CAAiBd,IAAjB,CAAsBQ,IAAtB,CAA2B,IAA3B,EAAiCO,KAAjC,EAAwCC,QAAxC,CAAP;AACD,GAHD;AAIArC,YAAUmC,SAAV,CAAoBG,UAApB,GAAiC,UAASF,KAAT,EAAgBC,QAAhB,EAA0BpB,EAA1B,EAA8B;AAC7D,UAAM,IAAIE,KAAJ,CAAU,iBAAV,CAAN;AACD,GAFD;AAGAnB,YAAUmC,SAAV,CAAoBI,MAApB,GAA6B,UAASH,KAAT,EAAgBC,QAAhB,EAA0BpB,EAA1B,EAA8B;AACzD,QAAIF,KAAK,KAAKC,eAAd;AACAD,OAAGF,OAAH,GAAaI,EAAb;AACAF,OAAGD,UAAH,GAAgBsB,KAAhB;AACArB,OAAGyB,aAAH,GAAmBH,QAAnB;AACA,QAAI,CAACtB,GAAGH,YAAR,EAAsB;AACpB,UAAIU,KAAK,KAAKC,cAAd;AACA,UAAIR,GAAGJ,aAAH,IAAoBW,GAAGG,YAAvB,IAAuCH,GAAGI,MAAH,GAAYJ,GAAGK,aAA1D,EACE,KAAKC,KAAL,CAAWN,GAAGK,aAAd;AACH;AACF,GAVD;AAWA3B,YAAUmC,SAAV,CAAoBP,KAApB,GAA4B,UAASa,CAAT,EAAY;AACtC,QAAI1B,KAAK,KAAKC,eAAd;AACA,QAAI,CAACb,KAAKuC,MAAL,CAAY3B,GAAGD,UAAf,CAAD,IAA+BC,GAAGF,OAAlC,IAA6C,CAACE,GAAGH,YAArD,EAAmE;AACjEG,SAAGH,YAAH,GAAkB,IAAlB;AACA,WAAK0B,UAAL,CAAgBvB,GAAGD,UAAnB,EAA+BC,GAAGyB,aAAlC,EAAiDzB,GAAGP,cAApD;AACD,KAHD,MAGO;AACLO,SAAGJ,aAAH,GAAmB,IAAnB;AACD;AACF,GARD;AASA,WAASuB,IAAT,CAAc3B,MAAd,EAAsBE,EAAtB,EAA0B;AACxB,QAAIA,EAAJ,EACE,OAAOF,OAAOW,IAAP,CAAY,OAAZ,EAAqBT,EAArB,CAAP;AACF,QAAIkC,KAAKpC,OAAOqC,cAAhB;AACA,QAAI7B,KAAKR,OAAOS,eAAhB;AACA,QAAI2B,GAAGjB,MAAP,EACE,MAAM,IAAIP,KAAJ,CAAU,4CAAV,CAAN;AACF,QAAIJ,GAAGH,YAAP,EACE,MAAM,IAAIO,KAAJ,CAAU,gDAAV,CAAN;AACF,WAAOZ,OAAOc,IAAP,CAAY,IAAZ,CAAP;AACD;AACF,CAxFD,EAwFGnB,QAAQ,SAAR,CAxFH","file":"_stream_transform.js","sourcesContent":["/* */ \n(function(process) {\n  module.exports = Transform;\n  var Duplex = require('./_stream_duplex');\n  var util = require('core-util-is');\n  util.inherits = require('inherits');\n  util.inherits(Transform, Duplex);\n  function TransformState(options, stream) {\n    this.afterTransform = function(er, data) {\n      return afterTransform(stream, er, data);\n    };\n    this.needTransform = false;\n    this.transforming = false;\n    this.writecb = null;\n    this.writechunk = null;\n  }\n  function afterTransform(stream, er, data) {\n    var ts = stream._transformState;\n    ts.transforming = false;\n    var cb = ts.writecb;\n    if (!cb)\n      return stream.emit('error', new Error('no writecb in Transform class'));\n    ts.writechunk = null;\n    ts.writecb = null;\n    if (!util.isNullOrUndefined(data))\n      stream.push(data);\n    if (cb)\n      cb(er);\n    var rs = stream._readableState;\n    rs.reading = false;\n    if (rs.needReadable || rs.length < rs.highWaterMark) {\n      stream._read(rs.highWaterMark);\n    }\n  }\n  function Transform(options) {\n    if (!(this instanceof Transform))\n      return new Transform(options);\n    Duplex.call(this, options);\n    this._transformState = new TransformState(options, this);\n    var stream = this;\n    this._readableState.needReadable = true;\n    this._readableState.sync = false;\n    this.once('prefinish', function() {\n      if (util.isFunction(this._flush))\n        this._flush(function(er) {\n          done(stream, er);\n        });\n      else\n        done(stream);\n    });\n  }\n  Transform.prototype.push = function(chunk, encoding) {\n    this._transformState.needTransform = false;\n    return Duplex.prototype.push.call(this, chunk, encoding);\n  };\n  Transform.prototype._transform = function(chunk, encoding, cb) {\n    throw new Error('not implemented');\n  };\n  Transform.prototype._write = function(chunk, encoding, cb) {\n    var ts = this._transformState;\n    ts.writecb = cb;\n    ts.writechunk = chunk;\n    ts.writeencoding = encoding;\n    if (!ts.transforming) {\n      var rs = this._readableState;\n      if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark)\n        this._read(rs.highWaterMark);\n    }\n  };\n  Transform.prototype._read = function(n) {\n    var ts = this._transformState;\n    if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n      ts.transforming = true;\n      this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n    } else {\n      ts.needTransform = true;\n    }\n  };\n  function done(stream, er) {\n    if (er)\n      return stream.emit('error', er);\n    var ws = stream._writableState;\n    var ts = stream._transformState;\n    if (ws.length)\n      throw new Error('calling transform done when ws.length != 0');\n    if (ts.transforming)\n      throw new Error('calling transform done when still transforming');\n    return stream.push(null);\n  }\n})(require('process'));\n"]}